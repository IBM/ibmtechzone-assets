{"id":"xauxskdyhf","title":"IndexTransferEmbed","documentationURL":"https://github.ibm.com/Soumyajit-Bera/WXD-and-assistant/blob/main/README.md","author":"Soumyajit Bera","categoryId":1,"description":"This script demonstrates how to transfer documents from an existing Elasticsearch index to a new index while applying embeddings using a pipeline powered by WatsonX Discovery and Elasticsearch. The code performs the following tasks:\n\nEnvironment Setup: It loads the necessary credentials for WatsonX Discovery from environment variables and sets up the Elasticsearch client for connecting to the instance.\n\nIngest Pipeline Creation: An ingest pipeline (elser-ingest-pipeline) is created, which utilizes the ELSER model for embedding text data (using a specific field body_content_field). The embedding results are stored in the ml.tokens field.\n\nNew Index Creation: A new index is created using the previously defined ingest pipeline, with mappings configured to handle text fields and embedding tokens.\n\nDocument Validation and Transfer: The code reads documents from a source index, validates their structure, and transfers them one by one to the new index. It ensures each document is properly formatted and applies retry logic for indexing in case of connection failures.\n\nEfficient Data Scrolling: The script implements a scroll API to fetch large volumes of data from the source index in manageable batches, allowing for efficient transfer without overwhelming memory or causing timeouts.\n\nError Handling: The script incorporates error handling for connection issues and invalid document structures, ensuring that the transfer process can recover from minor disruptions.\n\nLogging and Progress Monitoring: Progress is printed out as documents are successfully processed and indexed, giving the user visibility into the operation.\n\nThe code can be used for general document migration scenarios where embedding and indexing of text content in Elasticsearch are required, making it suitable for a variety of data ingestion and search enhancement use cases.\n","typeId":1,"type":"python","fileName":"https://github.ibm.com/Soumyajit-Bera/WXD-and-assistant/blob/main/crawl_embedding.py","source":"git","assetURL":"https://github.ibm.com/Soumyajit-Bera/WXD-and-assistant","userId":"8a5ede2a-2e2a-4f3c-a3de-48a9190f37be","preRequisites":{"fields":[],"requiredFields":[[]],"installDependencyCommands":[""]},"createdTimestamp":1727677954361,"updatedTimestamp":1727677954361}