{"id":"tmrnpvsdfk","title":"Knowledge Graph with Structured Data","author":"Pradumn Mishra","categoryId":13,"description":"A solution for creating Knowledge Graph Embeddings and visualization for tabular data.\nSteps to setup\nDownload the files.\nNavigate into the structure_data folder cd kg_structured\nCreate virtual environment using python -m venv env\nActivate the virtual environment using source venv/bin/activate\nInstall dependencies using pip install -r requirements.txt\nCreate a .env file by following the conventions in .env-example file\nIn another terminal navigate into neo4j_module folder by running cd neo4j_module and then run the neo4j docker container using docker-compose up -d\nIn another terminal navigate into weaviate_module folder by running cd weaviate_module and then run the weaviate docker container using docker-compose up -d\nFirst run the generate_ontology_structured.ipynb notebook in neo4j_module folder. You may change the dataset and also choose data cleaning steps accordingly. This notebook will create a knowledge graph for your data in neo4j.\nThen run natural_language_to_cypher_vectordb.ipynb notebook to create possible natural language queries for the data. you will need to modify the queries according to your data.\nNow run generate_embeddings.ipynb notebook to push those queries and cypher into weaviate.\nNow you can use the cypher query obtained to query the graph using neo4j and use the results as context for RAG using LLM.\nFor graph visualisation we are using pyvis. Run Visualizations_pyvis.ipynb for graph html generation into html folder. You can open that in browser to see the graph. Modify the notebook according to your data.\n","typeId":1,"type":"python","fileName":"test.py","source":"git","assetURL":"https://github.ibm.com/Pradumn-Mishra/Knowledge-Graph-with-Unstructured-Data","userId":"17af19e4-be8a-4fb0-8f5e-06efc20e4659","preRequisites":{"fields":[],"requiredFields":[[]],"installDependencyCommands":["pip install -r requirements.txt"]},"createdTimestamp":1715598900594,"updatedTimestamp":1715598900594}