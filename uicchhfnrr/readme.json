{"id":"uicchhfnrr","title":"Utilising FAST API for DB2: Seamless Read and Update Operations","author":"Nagaraju Kuruva","categoryId":2,"description":"Steps to Execute the Code:\n\n1. Download and Extract:\n   - Download the zip file, extract it, and import it into Visual Studio (or any other tool that supports Python).\n\n2. Set Up Virtual Environment:\n   - Create a virtual environment to install all dependencies:\n     - `python3 -m venv env_name` (with Python 3.12)\n     - `source env_name_location/bin/activate`\n     - `pip3 install -r requirements.txt`\n       - Note: Direct installation of `ibm-db` library on MAC ARM 64 machines is complex. It's easier to set this up on a Linux machine.\n\n3. Start the FastAPI Server:\n   - After setting up the environment, use the following command to start the FastAPI server on a Linux machine, or create a Docker image and deploy it using Podman or Docker Hub:\n     - `uvicorn test_db2_connection:app --host 0.0.0.0 --port 8080`\n       - Note: Port 8000 is usually blocked on Linux, so use port 8080 instead.\n\n4. Verify Server is Running:\n   - Once the server is running, open your browser and check the following URLs to ensure it is operational:\n     - Fetch Data from DB2:\n       - `http://linuxip:8080/query_db?dsn_database=\"\"&dsn_hostname=\"\"&dsn_port=\"\"&dsn_uid=\"\"&dsn_pwd=\"\"&sql_query=\"\"`\n     - Update Data:\n       - `http://linuxip:8080/update_date?dsn_database=\"\"&dsn_hostname=\"\"&dsn_port=\"\"&dsn_uid=\"\"&dsn_pwd=\"\"&sql_query=\"\"`\n\nNote: Replace the empty strings in the sample URLs with actual values:\n- `dsn_database` → DB2 Database name (available in the service credentials of the DB2 resource)\n- `dsn_hostname` → DB2 hostname (available in the service credentials of the DB2 resource)\n- `dsn_port` → DB2 port number (available in the service credentials of the DB2 resource)\n- `dsn_uid` → DB2 User ID (available in the service credentials of the DB2 resource)\n- `dsn_pwd` → DB2 Password (available in the service credentials of the DB2 resource)\n- `sql_query` → SQL Query (Select or Update query)","typeId":1,"type":"python","fileName":"db2_test-main/test_db2_connection.py","source":"local","assetURL":"","userId":"4f62d5ce-c398-4324-a3d0-7808c115b8e6","preRequisites":{"fields":[],"requiredFields":[[]],"installDependencyCommands":[""]},"createdTimestamp":1718200830091,"updatedTimestamp":1718200998890}