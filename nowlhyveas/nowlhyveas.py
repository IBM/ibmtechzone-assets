import os
import nzpy
import argparse
import sys
import time
import logging

fk_dict = {
 'DIST_INVENTORY_FACT': {
 'DIST_INVENTORY_FACT_FK_1': '''ALTER TABLE DIST_INVENTORY_FACT ADD CONSTRAINT DIST_INVENTORY_FACT_FK_1 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'DIST_INVENTORY_FACT_FK_2': '''ALTER TABLE DIST_INVENTORY_FACT ADD CONSTRAINT DIST_INVENTORY_FACT_FK_2 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'DIST_INVENTORY_FACT_FK_3': '''ALTER TABLE DIST_INVENTORY_FACT ADD CONSTRAINT DIST_INVENTORY_FACT_FK_3 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);'''
 },
 'DIST_PRODUCT_FORECAST_FACT': {
 'DIST_PRODUCT_FORECAST_FACT_FK_1': '''ALTER TABLE DIST_PRODUCT_FORECAST_FACT ADD CONSTRAINT DIST_PRODUCT_FORECAST_FACT_FK_1 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'DIST_PRODUCT_FORECAST_FACT_FK_2': '''ALTER TABLE DIST_PRODUCT_FORECAST_FACT ADD CONSTRAINT DIST_PRODUCT_FORECAST_FACT_FK_2 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);'''
 },
 'DIST_RETURNED_ITEMS_FACT': {
 'DIST_RETURNED_ITEMS_FACT_FK_1': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_2': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_3': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_3 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_4': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_5': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_5 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_6': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_6 FOREIGN KEY ( SALES_ORDER_KEY ) REFERENCES SLS_SALES_ORDER_DIM( SALES_ORDER_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_7': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_7 FOREIGN KEY ( ORDER_METHOD_KEY ) REFERENCES SLS_ORDER_METHOD_DIM( ORDER_METHOD_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_8': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_8 FOREIGN KEY ( RETURN_REASON_KEY ) REFERENCES DIST_RETURN_REASON_DIM( RETURN_REASON_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_9': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_9 FOREIGN KEY ( RETAILER_SITE_KEY ) REFERENCES SLS_RTL_DIM( RETAILER_SITE_KEY);'''
 },
# 'DIST_RETURN_REASON_DIM': { },
 'EMP_EMPLOYEE_DIM': {
 'EMP_EMPLOYEE_DIM_FK_1': '''ALTER TABLE EMP_EMPLOYEE_DIM ADD CONSTRAINT EMP_EMPLOYEE_DIM_FK_1 FOREIGN KEY ( POSITION_CODE ) REFERENCES EMP_POSITION_LOOKUP( POSITION_CODE);''',
 'EMP_EMPLOYEE_DIM_FK_2': '''ALTER TABLE EMP_EMPLOYEE_DIM ADD CONSTRAINT EMP_EMPLOYEE_DIM_FK_2 FOREIGN KEY ( TERMINATION_CODE ) REFERENCES EMP_TERMINATION_LOOKUP( TERMINATION_CODE);''',
 'EMP_EMPLOYEE_DIM_FK_3': '''ALTER TABLE EMP_EMPLOYEE_DIM ADD CONSTRAINT EMP_EMPLOYEE_DIM_FK_3 FOREIGN KEY ( GENDER_CODE ) REFERENCES GO_GENDER_LOOKUP( GENDER_CODE);'''
 },
 'EMP_EXPENSE_FACT': {
 'EMP_EXPENSE_FACT_FK_1': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_EXPENSE_FACT_FK_2': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'EMP_EXPENSE_FACT_FK_3': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_3 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_EXPENSE_FACT_FK_4': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_4 FOREIGN KEY ( ACCOUNT_KEY ) REFERENCES FIN_ACCOUNT_DIM( ACCOUNT_KEY);''',
 'EMP_EXPENSE_FACT_FK_5': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_5 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_EXPENSE_FACT_FK_6': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_6 FOREIGN KEY ( EXPENSE_TYPE_KEY ) REFERENCES EMP_EXPENSE_TYPE_DIM( EXPENSE_TYPE_KEY);'''
 },
 'EMP_EXPENSE_PLAN_FACT': {
 'EMP_EXPENSE_PLAN_FACT_FK_1': '''ALTER TABLE EMP_EXPENSE_PLAN_FACT ADD CONSTRAINT EMP_EXPENSE_PLAN_FACT_FK_1 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_EXPENSE_PLAN_FACT_FK_2': '''ALTER TABLE EMP_EXPENSE_PLAN_FACT ADD CONSTRAINT EMP_EXPENSE_PLAN_FACT_FK_2 FOREIGN KEY ( EXPENSE_TYPE_KEY ) REFERENCES EMP_EXPENSE_TYPE_DIM( EXPENSE_TYPE_KEY);''',
 },
 'EMP_EXPENSE_TYPE_DIM': {
 'EMP_EXPENSE_TYPE_DIM_FK_1': '''ALTER TABLE EMP_EXPENSE_TYPE_DIM ADD CONSTRAINT EMP_EXPENSE_TYPE_DIM_FK_1 FOREIGN KEY ( EXPENSE_UNIT_CODE ) REFERENCES EMP_EXPENSE_UNIT_LOOKUP( EXPENSE_UNIT_CODE);'''
 },
# 'EMP_EXPENSE_UNIT_LOOKUP': { },
 'EMP_POSITION_DIM': {
 'EMP_POSITION_DIM_FK_1': '''ALTER TABLE EMP_POSITION_DIM ADD CONSTRAINT EMP_POSITION_DIM_FK_1 FOREIGN KEY ( POSITION_CODE ) REFERENCES EMP_POSITION_LOOKUP( POSITION_CODE);'''
 },
# 'EMP_POSITION_LOOKUP': { },
 'EMP_POSITION_SUMMARY_FACT': {
 'EMP_POSITION_SUMMARY_FACT_FK_1': '''ALTER TABLE EMP_POSITION_SUMMARY_FACT ADD CONSTRAINT EMP_POSITION_SUMMARY_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_POSITION_SUMMARY_FACT_FK_2': '''ALTER TABLE EMP_POSITION_SUMMARY_FACT ADD CONSTRAINT EMP_POSITION_SUMMARY_FACT_FK_2 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_POSITION_SUMMARY_FACT_FK_3': '''ALTER TABLE EMP_POSITION_SUMMARY_FACT ADD CONSTRAINT EMP_POSITION_SUMMARY_FACT_FK_3 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);'''
 },
# 'EMP_RANKING_DIM': { },
 'EMP_RANKING_FACT': {
 'EMP_RANKING_FACT_FK_1': '''ALTER TABLE EMP_RANKING_FACT ADD CONSTRAINT EMP_RANKING_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_RANKING_FACT_FK_2': '''ALTER TABLE EMP_RANKING_FACT ADD CONSTRAINT EMP_RANKING_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'EMP_RANKING_FACT_FK_3': '''ALTER TABLE EMP_RANKING_FACT ADD CONSTRAINT EMP_RANKING_FACT_FK_3 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_RANKING_FACT_FK_4': '''ALTER TABLE EMP_RANKING_FACT ADD CONSTRAINT EMP_RANKING_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_RANKING_FACT_FK_5': '''ALTER TABLE EMP_RANKING_FACT ADD CONSTRAINT EMP_RANKING_FACT_FK_5 FOREIGN KEY ( EMPLOYEE_RANKING_KEY ) REFERENCES EMP_RANKING_DIM( EMPLOYEE_RANKING_KEY);'''
 },
# 'EMP_RECRUITMENT_DIM': { },
 'EMP_RECRUITMENT_FACT': {
 'EMP_RECRUITMENT_FACT_FK_1': '''ALTER TABLE EMP_RECRUITMENT_FACT ADD CONSTRAINT EMP_RECRUITMENT_FACT_FK_1 FOREIGN KEY ( POST_DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_RECRUITMENT_FACT_FK_2': '''ALTER TABLE EMP_RECRUITMENT_FACT ADD CONSTRAINT EMP_RECRUITMENT_FACT_FK_2 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_RECRUITMENT_FACT_FK_3': '''ALTER TABLE EMP_RECRUITMENT_FACT ADD CONSTRAINT EMP_RECRUITMENT_FACT_FK_3 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'EMP_RECRUITMENT_FACT_FK_4': '''ALTER TABLE EMP_RECRUITMENT_FACT ADD CONSTRAINT EMP_RECRUITMENT_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_RECRUITMENT_FACT_FK_5': '''ALTER TABLE EMP_RECRUITMENT_FACT ADD CONSTRAINT EMP_RECRUITMENT_FACT_FK_5 FOREIGN KEY ( RECRUITMENT_MEDIUM_KEY ) REFERENCES EMP_RECRUITMENT_DIM( RECRUITMENT_MEDIUM_KEY);'''
 },
 'EMP_RECRUITMENT_LEAD_FACT': {
 'EMP_RECRUITMENT_LEAD_FACT_FK_1': '''ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD CONSTRAINT EMP_RECRUITMENT_LEAD_FACT_FK_1 FOREIGN KEY ( RECRUITMENT_MEDIUM_KEY ) REFERENCES EMP_RECRUITMENT_DIM( RECRUITMENT_MEDIUM_KEY);''',
 'EMP_RECRUITMENT_LEAD_FACT_FK_2': '''ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD CONSTRAINT EMP_RECRUITMENT_LEAD_FACT_FK_2 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_RECRUITMENT_LEAD_FACT_FK_3': '''ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD CONSTRAINT EMP_RECRUITMENT_LEAD_FACT_FK_3 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'EMP_RECRUITMENT_LEAD_FACT_FK_4': '''ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD CONSTRAINT EMP_RECRUITMENT_LEAD_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_RECRUITMENT_LEAD_FACT_FK_5': '''ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD CONSTRAINT EMP_RECRUITMENT_LEAD_FACT_FK_5 FOREIGN KEY ( POST_DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);'''
 },
 'EMP_SUCCESSION_FACT': {
 'EMP_SUCCESSION_FACT_FK_1': '''ALTER TABLE EMP_SUCCESSION_FACT ADD CONSTRAINT EMP_SUCCESSION_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_SUCCESSION_FACT_FK_2': '''ALTER TABLE EMP_SUCCESSION_FACT ADD CONSTRAINT EMP_SUCCESSION_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'EMP_SUCCESSION_FACT_FK_3': '''ALTER TABLE EMP_SUCCESSION_FACT ADD CONSTRAINT EMP_SUCCESSION_FACT_FK_3 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_SUCCESSION_FACT_FK_4': '''ALTER TABLE EMP_SUCCESSION_FACT ADD CONSTRAINT EMP_SUCCESSION_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_SUCCESSION_FACT_FK_5': '''ALTER TABLE EMP_SUCCESSION_FACT ADD CONSTRAINT EMP_SUCCESSION_FACT_FK_5 FOREIGN KEY ( SUCCESSOR_STATUS_KEY ) REFERENCES EMP_SUCCESSION_STATUS_DIM( SUCCESSOR_STATUS_KEY);'''
 },
 'EMP_SUCCESSION_STATUS_DIM': {
 },
 'EMP_SUMMARY_FACT': {
 'EMP_SUMMARY_FACT_FK_1': '''ALTER TABLE EMP_SUMMARY_FACT ADD CONSTRAINT EMP_SUMMARY_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_SUMMARY_FACT_FK_2': '''ALTER TABLE EMP_SUMMARY_FACT ADD CONSTRAINT EMP_SUMMARY_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'EMP_SUMMARY_FACT_FK_3': '''ALTER TABLE EMP_SUMMARY_FACT ADD CONSTRAINT EMP_SUMMARY_FACT_FK_3 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_SUMMARY_FACT_FK_4': '''ALTER TABLE EMP_SUMMARY_FACT ADD CONSTRAINT EMP_SUMMARY_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);'''
 },
 'EMP_SURVEY_FACT': {
 'EMP_SURVEY_FACT_FK_1': '''ALTER TABLE EMP_SURVEY_FACT ADD CONSTRAINT EMP_SURVEY_FACT_FK_1 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_SURVEY_FACT_FK_2': '''ALTER TABLE EMP_SURVEY_FACT ADD CONSTRAINT EMP_SURVEY_FACT_FK_2 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_SURVEY_FACT_FK_3': '''ALTER TABLE EMP_SURVEY_FACT ADD CONSTRAINT EMP_SURVEY_FACT_FK_3 FOREIGN KEY ( EMPLOYEE_TOPIC_KEY ) REFERENCES EMP_SURVEY_TOPIC_DIM( EMPLOYEE_TOPIC_KEY);''',
 'EMP_SURVEY_FACT_FK_4': '''ALTER TABLE EMP_SURVEY_FACT ADD CONSTRAINT EMP_SURVEY_FACT_FK_4 FOREIGN KEY ( SATISFACTION_KEY ) REFERENCES GO_SATISFACTION_DIM( SATISFACTION_KEY);''',
 'EMP_SURVEY_FACT_FK_5': '''ALTER TABLE EMP_SURVEY_FACT ADD CONSTRAINT EMP_SURVEY_FACT_FK_5 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);'''
 },
 'EMP_SURVEY_TARG_FACT': {
 'EMP_SURVEY_TARG_FACT_FK_1': '''ALTER TABLE EMP_SURVEY_TARG_FACT ADD CONSTRAINT EMP_SURVEY_TARG_FACT_FK_1 FOREIGN KEY ( EMPLOYEE_TOPIC_KEY ) REFERENCES EMP_SURVEY_TOPIC_DIM( EMPLOYEE_TOPIC_KEY);''',
 },
# 'EMP_SURVEY_TOPIC_DIM': { },
# 'EMP_TERMINATION_LOOKUP': { },
# 'EMP_TRAINING_DIM': { },
  'EMP_TRAINING_FACT': {
  'EMP_TRAINING_FACT_FK_1': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_1 FOREIGN KEY ( EXPENSE_TYPE_KEY ) REFERENCES EMP_EXPENSE_TYPE_DIM( EXPENSE_TYPE_KEY);''',
  'EMP_TRAINING_FACT_FK_2': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
  'EMP_TRAINING_FACT_FK_3': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_3 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
  'EMP_TRAINING_FACT_FK_4': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
  'EMP_TRAINING_FACT_FK_5': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_5 FOREIGN KEY ( TRAINING_KEY ) REFERENCES EMP_TRAINING_DIM( TRAINING_KEY);''',
  'EMP_TRAINING_FACT_FK_6': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_6 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);'''
 },
# 'FIN_ACCOUNT_CLASS_LOOKUP': { },
 'FIN_ACCOUNT_DIM': {
 'FIN_ACCOUNT_DIM_FK_1': '''ALTER TABLE FIN_ACCOUNT_DIM ADD CONSTRAINT FIN_ACCOUNT_DIM_FK_1 FOREIGN KEY ( ACCOUNT_CLASS_CODE ) REFERENCES FIN_ACCOUNT_CLASS_LOOKUP( ACCOUNT_CLASS_CODE);''',
 'FIN_ACCOUNT_DIM_FK_2': '''ALTER TABLE FIN_ACCOUNT_DIM ADD CONSTRAINT FIN_ACCOUNT_DIM_FK_2 FOREIGN KEY ( ACCOUNT_TYPE_CODE ) REFERENCES FIN_ACCOUNT_TYPE_LOOKUP( ACCOUNT_TYPE_CODE);''',
 'FIN_ACCOUNT_DIM_FK_3': '''ALTER TABLE FIN_ACCOUNT_DIM ADD CONSTRAINT FIN_ACCOUNT_DIM_FK_3 FOREIGN KEY ( ACCOUNT_CODE ) REFERENCES FIN_ACCOUNT_NAME_LOOKUP( ACCOUNT_CODE);'''
 },
# 'FIN_ACCOUNT_NAME_LOOKUP': { },
# 'FIN_ACCOUNT_TYPE_LOOKUP': { },
# 'FIN_FINANCE_FACT': { },
# 'FIN_SUBM_CURRENCY_LOOKUP': { },
 'FIN_SUBM_DIM': {
 'FIN_SUBM_DIM_FK_1': '''ALTER TABLE FIN_SUBM_DIM ADD CONSTRAINT FIN_SUBM_DIM_FK_1 FOREIGN KEY ( SUBMISSION_CURRENCY_CODE ) REFERENCES FIN_SUBM_CURRENCY_LOOKUP( SUBMISSION_CURRENCY_CODE);''',
 'FIN_SUBM_DIM_FK_2': '''ALTER TABLE FIN_SUBM_DIM ADD CONSTRAINT FIN_SUBM_DIM_FK_2 FOREIGN KEY ( SUBMISSION_TYPE_CODE ) REFERENCES FIN_SUBM_TYPE_LOOKUP( SUBMISSION_TYPE_CODE);'''
 },
# 'FIN_SUBM_TYPE_LOOKUP': { },
# 'GO_BRANCH_DIM': { },
# 'GO_GENDER_LOOKUP': { },
 'GO_ORG_DIM': {
 'GO_ORG_DIM_FK_1': '''ALTER TABLE GO_ORG_DIM ADD CONSTRAINT GO_ORG_DIM_FK_1 FOREIGN KEY ( ORGANIZATION_CODE ) REFERENCES GO_ORG_NAME_LOOKUP( ORGANIZATION_CODE);'''
 },
# 'GO_ORG_NAME_LOOKUP': { },
# 'GO_REGION_DIM': { },
# 'GO_SATISFACTION_DIM': { },
 'GO_TIME_DIM': {
 'GO_TIME_DIM_FK_1': '''ALTER TABLE GO_TIME_DIM ADD CONSTRAINT GO_TIME_DIM_FK_1 FOREIGN KEY ( QUARTER_KEY ) REFERENCES GO_TIME_QUARTER_LOOKUP( QUARTER_KEY);'''
 },
# 'GO_TIME_QUARTER_LOOKUP': { },
# 'MRK_ACTIVITY_STATUS_DIM': { },
# 'MRK_ADV_FACT': { },
# 'MRK_BUNDLE_GROUP_LOOKUP': { },
# 'MRK_CAMPAIGN_LOOKUP': { },
# 'MRK_PRODUCT_SURVEY_DIM': { },
 'MRK_PRODUCT_SURVEY_FACT': {
 'MRK_PRODUCT_SURVEY_FACT_FK_1': '''ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD CONSTRAINT MRK_PRODUCT_SURVEY_FACT_FK_1 FOREIGN KEY ( PRODUCT_SURVEY_KEY ) REFERENCES MRK_PRODUCT_SURVEY_DIM( PRODUCT_SURVEY_KEY);''',
 'MRK_PRODUCT_SURVEY_FACT_FK_2': '''ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD CONSTRAINT MRK_PRODUCT_SURVEY_FACT_FK_2 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'MRK_PRODUCT_SURVEY_FACT_FK_3': '''ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD CONSTRAINT MRK_PRODUCT_SURVEY_FACT_FK_3 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'MRK_PRODUCT_SURVEY_FACT_FK_4': '''ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD CONSTRAINT MRK_PRODUCT_SURVEY_FACT_FK_4 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);''',
 'MRK_PRODUCT_SURVEY_FACT_FK_5': '''ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD CONSTRAINT MRK_PRODUCT_SURVEY_FACT_FK_5 FOREIGN KEY ( RTL_COUNTRY_KEY ) REFERENCES GO_REGION_DIM( COUNTRY_KEY);'''
 },
 'MRK_PROD_SURVEY_TARG_FACT': {
 'MRK_PROD_SURVEY_TARG_FACT_FK_1': '''ALTER TABLE MRK_PROD_SURVEY_TARG_FACT ADD CONSTRAINT MRK_PROD_SURVEY_TARG_FACT_FK_1 FOREIGN KEY ( PRODUCT_SURVEY_KEY ) REFERENCES MRK_PRODUCT_SURVEY_DIM( PRODUCT_SURVEY_KEY);''',
 'MRK_PROD_SURVEY_TARG_FACT_FK_2': '''ALTER TABLE MRK_PROD_SURVEY_TARG_FACT ADD CONSTRAINT MRK_PROD_SURVEY_TARG_FACT_FK_2 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);'''
 },
 'MRK_PROMOTION_DIM': {
 'MRK_PROMOTION_DIM_FK_1': '''ALTER TABLE MRK_PROMOTION_DIM ADD CONSTRAINT MRK_PROMOTION_DIM_FK_1 FOREIGN KEY ( BUNDLE_GROUP_CODE ) REFERENCES MRK_BUNDLE_GROUP_LOOKUP( BUNDLE_GROUP_CODE);''',
 'MRK_PROMOTION_DIM_FK_2': '''ALTER TABLE MRK_PROMOTION_DIM ADD CONSTRAINT MRK_PROMOTION_DIM_FK_2 FOREIGN KEY ( CAMPAIGN_CODE ) REFERENCES MRK_CAMPAIGN_LOOKUP( CAMPAIGN_CODE);'''
 },
 'MRK_PROMOTION_FACT': {
 'MRK_PROMOTION_FACT_FK_1': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_1 FOREIGN KEY ( PROMOTION_KEY ) REFERENCES MRK_PROMOTION_DIM( PROMOTION_KEY);''',
 'MRK_PROMOTION_FACT_FK_2': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'MRK_PROMOTION_FACT_FK_3': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_3 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'MRK_PROMOTION_FACT_FK_4': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_4 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);''',
 'MRK_PROMOTION_FACT_FK_5': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_5 FOREIGN KEY ( SALES_ORDER_KEY ) REFERENCES SLS_SALES_ORDER_DIM( SALES_ORDER_KEY);''',
 'MRK_PROMOTION_FACT_FK_6': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_6 FOREIGN KEY ( RTL_COUNTRY_KEY ) REFERENCES GO_REGION_DIM( COUNTRY_KEY);''',
 'MRK_PROMOTION_FACT_FK_7': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_7 FOREIGN KEY ( ORDER_DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);'''
 },
 'MRK_PROMOTION_PLAN_FACT': {
 'MRK_PROMOTION_PLAN_FACT_FK_1': '''ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD CONSTRAINT MRK_PROMOTION_PLAN_FACT_FK_1 FOREIGN KEY ( PROMOTION_KEY ) REFERENCES MRK_PROMOTION_DIM( PROMOTION_KEY);''',
 'MRK_PROMOTION_PLAN_FACT_FK_2': '''ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD CONSTRAINT MRK_PROMOTION_PLAN_FACT_FK_2 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'MRK_PROMOTION_PLAN_FACT_FK_3': '''ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD CONSTRAINT MRK_PROMOTION_PLAN_FACT_FK_3 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'MRK_PROMOTION_PLAN_FACT_FK_4': '''ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD CONSTRAINT MRK_PROMOTION_PLAN_FACT_FK_4 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);''',
 'MRK_PROMOTION_PLAN_FACT_FK_5': '''ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD CONSTRAINT MRK_PROMOTION_PLAN_FACT_FK_5 FOREIGN KEY ( RTL_COUNTRY_KEY ) REFERENCES GO_REGION_DIM( COUNTRY_KEY);'''
 },
# 'MRK_RTL_SURVEY_DIM': { },
 'MRK_RTL_SURVEY_FACT': {
 'MRK_RTL_SURVEY_FACT_FK_1': '''ALTER TABLE MRK_RTL_SURVEY_FACT ADD CONSTRAINT MRK_RTL_SURVEY_FACT_FK_1 FOREIGN KEY ( RETAILER_SURVEY_KEY ) REFERENCES MRK_RTL_SURVEY_DIM( RETAILER_SURVEY_KEY);''',
 'MRK_RTL_SURVEY_FACT_FK_2': '''ALTER TABLE MRK_RTL_SURVEY_FACT ADD CONSTRAINT MRK_RTL_SURVEY_FACT_FK_2 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'MRK_RTL_SURVEY_FACT_FK_3': '''ALTER TABLE MRK_RTL_SURVEY_FACT ADD CONSTRAINT MRK_RTL_SURVEY_FACT_FK_3 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'MRK_RTL_SURVEY_FACT_FK_4': '''ALTER TABLE MRK_RTL_SURVEY_FACT ADD CONSTRAINT MRK_RTL_SURVEY_FACT_FK_4 FOREIGN KEY ( RTL_COUNTRY_KEY ) REFERENCES GO_REGION_DIM( COUNTRY_KEY);'''
 },
 'MRK_RTL_SURVEY_TARG_FACT': {
 'MRK_RTL_SURVEY_TARG_FACT_FK_1': '''ALTER TABLE MRK_RTL_SURVEY_TARG_FACT ADD CONSTRAINT MRK_RTL_SURVEY_TARG_FACT_FK_1 FOREIGN KEY ( RETAILER_SURVEY_KEY ) REFERENCES MRK_RTL_SURVEY_DIM( RETAILER_SURVEY_KEY);'''
 },
# 'SLS_ORDER_METHOD_DIM': { },
# 'SLS_PRODUCT_BRAND_LOOKUP': { },
# 'SLS_PRODUCT_COLOR_LOOKUP': { },
 'SLS_PRODUCT_DIM': {
 'SLS_PRODUCT_DIM_FK_1': '''ALTER TABLE SLS_PRODUCT_DIM ADD CONSTRAINT SLS_PRODUCT_DIM_FK_1 FOREIGN KEY ( PRODUCT_BRAND_CODE ) REFERENCES SLS_PRODUCT_BRAND_LOOKUP( PRODUCT_BRAND_CODE);''',
 'SLS_PRODUCT_DIM_FK_2': '''ALTER TABLE SLS_PRODUCT_DIM ADD CONSTRAINT SLS_PRODUCT_DIM_FK_2 FOREIGN KEY ( PRODUCT_COLOR_CODE ) REFERENCES SLS_PRODUCT_COLOR_LOOKUP( PRODUCT_COLOR_CODE);''',
 'SLS_PRODUCT_DIM_FK_3': '''ALTER TABLE SLS_PRODUCT_DIM ADD CONSTRAINT SLS_PRODUCT_DIM_FK_3 FOREIGN KEY ( PRODUCT_LINE_CODE ) REFERENCES SLS_PRODUCT_LINE_LOOKUP( PRODUCT_LINE_CODE);''',
 'SLS_PRODUCT_DIM_FK_4': '''ALTER TABLE SLS_PRODUCT_DIM ADD CONSTRAINT SLS_PRODUCT_DIM_FK_4 FOREIGN KEY ( PRODUCT_SIZE_CODE ) REFERENCES SLS_PRODUCT_SIZE_LOOKUP( PRODUCT_SIZE_CODE);''',
 'SLS_PRODUCT_DIM_FK_5': '''ALTER TABLE SLS_PRODUCT_DIM ADD CONSTRAINT SLS_PRODUCT_DIM_FK_5 FOREIGN KEY ( PRODUCT_TYPE_CODE ) REFERENCES SLS_PRODUCT_TYPE_LOOKUP( PRODUCT_TYPE_CODE);'''
 },
# 'SLS_PRODUCT_LINE_LOOKUP': { },
# 'SLS_PRODUCT_LOOKUP': { },
# 'SLS_PRODUCT_SIZE_LOOKUP': { },
# 'SLS_PRODUCT_TYPE_LOOKUP': { },
# 'SLS_RTL_DIM': { },
 'SLS_SALES_FACT': {
 'SLS_SALES_FACT_FK_1': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_1 FOREIGN KEY ( PROMOTION_KEY ) REFERENCES MRK_PROMOTION_DIM( PROMOTION_KEY);''',
 'SLS_SALES_FACT_FK_2': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_2 FOREIGN KEY ( ORDER_METHOD_KEY ) REFERENCES SLS_ORDER_METHOD_DIM( ORDER_METHOD_KEY);''',
 'SLS_SALES_FACT_FK_3': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_3 FOREIGN KEY ( RETAILER_SITE_KEY ) REFERENCES SLS_RTL_DIM( RETAILER_SITE_KEY);''',
 'SLS_SALES_FACT_FK_4': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_4 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'SLS_SALES_FACT_FK_5': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_5 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'SLS_SALES_FACT_FK_6': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_6 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);''',
 'SLS_SALES_FACT_FK_7': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_7 FOREIGN KEY ( SALES_ORDER_KEY ) REFERENCES SLS_SALES_ORDER_DIM( SALES_ORDER_KEY);''',
 'SLS_SALES_FACT_FK_8': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_8 FOREIGN KEY ( ORDER_DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);'''
 },
# 'SLS_SALES_ORDER_DIM': { },
 'SLS_SALES_TARG_FACT': {
 'SLS_SALES_TARG_FACT_FK_1': '''ALTER TABLE SLS_SALES_TARG_FACT ADD CONSTRAINT SLS_SALES_TARG_FACT_FK_1 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'SLS_SALES_TARG_FACT_FK_2': '''ALTER TABLE SLS_SALES_TARG_FACT ADD CONSTRAINT SLS_SALES_TARG_FACT_FK_2 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'SLS_SALES_TARG_FACT_FK_3': '''ALTER TABLE SLS_SALES_TARG_FACT ADD CONSTRAINT SLS_SALES_TARG_FACT_FK_3 FOREIGN KEY ( RTL_COUNTRY_KEY ) REFERENCES GO_REGION_DIM( COUNTRY_KEY);'''
 },
# 'XGOREVDW': { }
}
grants_dict = {
 'GRANT1': {'grant_ddl':'GRANT LIST,SELECT on gosales to ro_demogrp;'},
 'GRANT2': {'grant_ddl':'GRANT LIST,SELECT,INSERT,DELETE,UPDATE on gosales to rw_demogrp;'},
}
procs_dict = {
 'DROP_ALL_TABLES_FOR_SCHEMA': {
 'proc_ddl':'''create or replace procedure DROP_ALL_TABLES_FOR_SCHEMA (varchar(128))
    returns integer language nzplsql execute as caller
as begin_proc

DECLARE
    tables RECORD;
    my_sql VARCHAR;
    schema_input alias for $1;
BEGIN

    FOR tables IN
    SELECT SCHEMA, TABLENAME FROM _V_TABLE WHERE OBJTYPE = 'TABLE' AND upper(SCHEMA) = schema_input ORDER BY 1
    LOOP

        raise notice 'Drop table : %.%', tables.schema, tables.tablename;

        my_sql := 'DROP TABLE "' || tables.schema || '"."' || tables.tablename || '";' ;

        execute immediate my_sql;

    END LOOP;

end;
end_proc;
  '''},
  'DROP_ALL_VIEWS_FOR_SCHEMA': {
  'proc_ddl':'''create or replace procedure DROP_ALL_VIEWS_FOR_SCHEMA (varchar(128))
    returns integer language nzplsql execute as caller
as begin_proc

DECLARE
    views RECORD;
    my_sql VARCHAR;
    schema_input alias for $1;
BEGIN

    FOR views IN
    SELECT SCHEMA, VIEWNAME FROM _V_VIEW WHERE OBJTYPE = 'VIEW' AND upper(SCHEMA) = schema_input ORDER BY 1
    LOOP

        raise notice 'Drop view : %.%', views.schema, views.viewname;

        my_sql := 'DROP VIEW "' || views.schema || '"."' || views.viewname || '";' ;

        execute immediate my_sql;

    END LOOP;

end;
end_proc;
'''},
  'TRUNCATE_ALL_TABLES_FOR_SCHEMA': {
  'proc_ddl':'''create or replace procedure TRUNCATE_ALL_TABLES_FOR_SCHEMA (varchar(128))
    returns integer language nzplsql execute as caller
as begin_proc

DECLARE
    tables RECORD;
    my_sql VARCHAR;
    schema_input alias for $1;
BEGIN


    FOR tables IN
    SELECT SCHEMA, TABLENAME FROM _V_TABLE WHERE OBJTYPE = 'TABLE' AND upper(SCHEMA) = schema_input ORDER BY 1
    LOOP

        raise notice 'Truncate table : %.%', tables.schema, tables.tablename;

        my_sql := 'TRUNCATE TABLE "' || tables.schema || '"."' || tables.tablename || '";' ;

        execute immediate my_sql;

    END LOOP;

end;
end_proc;
'''}
}
seqs_dict = {
 'SEQ1': {
 'seq_ddl':'''
CREATE SEQUENCE sequence1 as integer
START WITH 1 increment by 1
minvalue 1 maxvalue 100 no cycle
;
'''},
  'SEQ2': {
  'seq_ddl':'''CREATE SEQUENCE sequence2 as integer
START WITH 11 increment by 2
minvalue 1 maxvalue 100 cycle
;
'''},
  'SEQ3': {
  'seq_ddl':'''CREATE SEQUENCE sequence3 as integer
START WITH 93 increment by -10
minvalue 1 maxvalue 100 cycle
;
'''}
}
syns_dict = {
 'SYN1': {'syn_ddl':'CREATE SYNONYM SYN_GO_BRANCH_DIM FOR GO_BRANCH_DIM;'},
 'SYN2': {'syn_ddl':'CREATE SYNONYM SYN_GO_TIME_DIM for GO_TIME_DIM;'},
}
tables_dict = {
 'AGGR_TIME_PROD_OM_FACT': {
 'rows': 1867,
 'table_ddl':'''CREATE TABLE AGGR_TIME_PROD_OM_FACT ( CURRENT_YEAR SMALLINT NOT NULL, QUARTER_KEY INTEGER NOT NULL, PRODUCT_LINE_CODE INTEGER NOT NULL, PRODUCT_TYPE_KEY INTEGER NOT NULL, ORDER_METHOD_KEY INTEGER NOT NULL, QUANTITY INTEGER NOT NULL, SALE_TOTAL DECIMAL (19 ,2 )NOT NULL) DISTRIBUTE ON RANDOM ;''',
 'comment': '''Warehouse table AGGR_TIME_PROD_OM_FACT contains aggregated sales fact data.''', 
 'pk': '''ALTER TABLE AGGR_TIME_PROD_OM_FACT ADD PRIMARY KEY (QUARTER_KEY , PRODUCT_TYPE_KEY , ORDER_METHOD_KEY )''',
 'fk': {''}
 },
 'BURST_TABLE': {
 'rows': 3,
 'table_ddl':'''CREATE TABLE BURST_TABLE ( RECIPIENTS VARCHAR (150 ), COUNTRY_CODE INTEGER ) DISTRIBUTE ON RANDOM;''',
 'comment': '''Warehouse table BURST_TABLE.''',
 'pk': '',
 },
 'BURST_TABLE2': {
 'rows': 4, 
 'table_ddl': '''CREATE TABLE BURST_TABLE2 ( RECIPIENTS VARCHAR (300 ), RECIPIENT_NAME VARCHAR (150 ), PRODUCT_LINE_CODE INTEGER ) DISTRIBUTE ON RANDOM ;''',
 'comment': '''Warehouse table BURST_TABLE2.''', 
 'pk': '',
 'fk': {''}
 },
 'DIST_INVENTORY_FACT': {
 'rows': 53837, 
 'table_ddl': '''CREATE TABLE DIST_INVENTORY_FACT ( MONTH_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, BRANCH_KEY INTEGER NOT NULL, PRODUCT_KEY INTEGER NOT NULL, OPENING_INVENTORY INTEGER NOT NULL, QUANTITY_SHIPPED INTEGER NOT NULL, ADDITIONS INTEGER NOT NULL, UNIT_COST DECIMAL (19 ,2 ), CLOSING_INVENTORY INTEGER NOT NULL, AVERAGE_UNIT_COST DECIMAL (19 ,2 )) DISTRIBUTE ON RANDOM ;''',
 'comment': '''Warehouse table DIST_INVENTORY_FACT contains inventory data for sales made between sales operations and retailers.''',
 'pk': '''ALTER TABLE DIST_INVENTORY_FACT ADD PRIMARY KEY (MONTH_KEY , ORGANIZATION_KEY , BRANCH_KEY , PRODUCT_KEY )''',
 },
 'DIST_PRODUCT_FORECAST_FACT': {
 'rows': 129096, 
 'table_ddl': '''CREATE TABLE DIST_PRODUCT_FORECAST_FACT ( MONTH_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, BASE_PRODUCT_KEY INTEGER NOT NULL, BRANCH_KEY INTEGER NOT NULL, UNIT_COST DECIMAL (19 ,2 ), UNIT_PRICE DECIMAL (19 ,2 ), EXPECTED_VOLUME INTEGER ) DISTRIBUTE ON RANDOM ;''',
 'comment': '''Warehouse table DIST_PRODUCT_FORECAST_FACT contains product volume forecasts at the sales branch level.''',
 'pk': 'ALTER TABLE DIST_PRODUCT_FORECAST_FACT ADD PRIMARY KEY (MONTH_KEY , ORGANIZATION_KEY , BRANCH_KEY , BASE_PRODUCT_KEY )',
 },
 'DIST_RETURNED_ITEMS_FACT': {
 'rows': 10249,
 'table_ddl':'''CREATE TABLE DIST_RETURNED_ITEMS_FACT ( DAY_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, BRANCH_KEY INTEGER NOT NULL, EMPLOYEE_KEY INTEGER NOT NULL, RETAILER_SITE_KEY INTEGER NOT NULL, PRODUCT_KEY INTEGER NOT NULL, ORDER_METHOD_KEY INTEGER NOT NULL, SALES_ORDER_KEY INTEGER NOT NULL, RETURN_REASON_KEY INTEGER NOT NULL, RETURN_QUANTITY INTEGER NOT NULL) DISTRIBUTE ON RANDOM ;''',
 'comment': '''Warehouse table DIST_RETURNED_ITEMS_FACT contains details of products returned by retailers.''',
 'pk': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD PRIMARY KEY (DAY_KEY , ORGANIZATION_KEY , BRANCH_KEY , EMPLOYEE_KEY , RETAILER_SITE_KEY , PRODUCT_KEY , ORDER_METHOD_KEY , RETURN_REASON_KEY , SALES_ORDER_KEY )''',
 },
 'DIST_RETURN_REASON_DIM': {
 'rows': 5,
 'table_ddl':'''CREATE TABLE DIST_RETURN_REASON_DIM ( RETURN_REASON_KEY INTEGER NOT NULL, RETURN_REASON_CODE INTEGER NOT NULL, REASON_DESCRIPTION_EN VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_AR VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_CS VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_DA VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_DE VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_EL VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_ES VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_FI VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_FR VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_HR VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_HU VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_ID VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_IT VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_JA VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_KK VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_KO VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_MS VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_NL VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_NO VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_PL VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_PT VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_RO VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_RU VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_SC VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_SL VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_SV VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_TC VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_TH VARCHAR (120 )NOT NULL, REASON_DESCRIPTION_TR VARCHAR (120 )NOT NULL) DISTRIBUTE ON RANDOM ;''',
 'comment': '''Warehouse table DIST_RETURN_REASON_DIM describes return reasons for products returned by retailers, in supported languages.''',
 'pk': 'ALTER TABLE DIST_RETURN_REASON_DIM ADD PRIMARY KEY ( RETURN_REASON_KEY);',
 },
 'EMP_EMPLOYEE_DIM': {
 'rows': 972,
 'table_ddl':'''CREATE TABLE EMP_EMPLOYEE_DIM ( EMPLOYEE_KEY INTEGER NOT NULL, MANAGER_CODE1 INTEGER , MANAGER1 VARCHAR (168 ), MANAGER_MB1 VARCHAR (168 ), MANAGER_CODE2 INTEGER , MANAGER2 VARCHAR (168 ), MANAGER_MB2 VARCHAR (168 ), MANAGER_CODE3 INTEGER , MANAGER3 VARCHAR (168 ), MANAGER_MB3 VARCHAR (168 ), MANAGER_CODE4 INTEGER , MANAGER4 VARCHAR (168 ), MANAGER_MB4 VARCHAR (168 ), MANAGER_CODE5 INTEGER , MANAGER5 VARCHAR (168 ), MANAGER_MB5 VARCHAR (168 ), MANAGER_CODE6 INTEGER , MANAGER6 VARCHAR (168 ), MANAGER_MB6 VARCHAR (168 ), EMPLOYEE_CODE INTEGER , EMPLOYEE_NAME VARCHAR (168 ), FIRST_NAME VARCHAR (75 ), LAST_NAME VARCHAR (90 ), EMPLOYEE_NAME_MB VARCHAR (168 ), FIRST_NAME_MB VARCHAR (75 ), LAST_NAME_MB VARCHAR (90 ), MANAGER_CODE INTEGER , ORGANIZATION_CODE VARCHAR (30 ), ADDRESS1 VARCHAR (120 ), ADDRESS2 VARCHAR (120 ), ADDRESS1_MB VARCHAR (120 ), ADDRESS2_MB VARCHAR (120 ), CITY VARCHAR (60 ), CITY_MB VARCHAR (60 ), PROV_STATE VARCHAR (60 ), PROV_STATE_MB VARCHAR (60 ), POSTAL_ZONE VARCHAR (30 ), BRANCH_CODE INTEGER , BIRTH_DATE TIMESTAMP , GENDER_CODE SMALLINT , WORK_PHONE VARCHAR (90 ), EXTENSION VARCHAR (30 ), FAX VARCHAR (60 ), EMAIL VARCHAR (120 ), DATE_HIRED TIMESTAMP , TERMINATION_CODE INTEGER , TERMINATION_DATE TIMESTAMP , POSITION_START_DATE TIMESTAMP , POSITION_CODE INTEGER , EMPLOYEE_LEVEL SMALLINT , ACTIVE_INDICATOR SMALLINT , RECORD_START_DATE TIMESTAMP , RECORD_END_DATE TIMESTAMP , MANAGER_KEY INTEGER ) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_EMPLOYEE_DIM contains the employee hierarchy and job history of those working for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_EMPLOYEE_DIM ADD PRIMARY KEY (EMPLOYEE_KEY );',
 },
 'EMP_EXPENSE_FACT': {
 'rows': 127984, 
 'table_ddl':'''CREATE TABLE EMP_EXPENSE_FACT ( DAY_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, POSITION_KEY INTEGER NOT NULL, EMPLOYEE_KEY INTEGER NOT NULL, EXPENSE_TYPE_KEY INTEGER NOT NULL, ACCOUNT_KEY INTEGER NOT NULL, EXPENSE_UNIT_QUANTITY DOUBLE , EXPENSE_TOTAL DECIMAL (19 ,2 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_EXPENSE_FACT contains expense details of employees working for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_EXPENSE_FACT ADD PRIMARY KEY (EMPLOYEE_KEY , POSITION_KEY , ORGANIZATION_KEY , DAY_KEY , EXPENSE_TYPE_KEY )',
 },
 'EMP_EXPENSE_PLAN_FACT': {
 'rows': 30150, 
 'table_ddl':'''CREATE TABLE EMP_EXPENSE_PLAN_FACT ( MONTH_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, EXPENSE_TYPE_KEY INTEGER NOT NULL, ACCOUNT_KEY VARCHAR (105 ), EXPENSE_PLAN_TOTAL DECIMAL (19 ,2 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_EXPENSE_PLAN_FACT contains expense budget data for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_EXPENSE_PLAN_FACT ADD PRIMARY KEY (EXPENSE_TYPE_KEY , MONTH_KEY , ORGANIZATION_KEY )',
 },
 'EMP_EXPENSE_TYPE_DIM': {
 'rows': 39, 
 'table_ddl':'''CREATE TABLE EMP_EXPENSE_TYPE_DIM ( EXPENSE_TYPE_KEY INTEGER NOT NULL, EXPENSE_GROUP_CODE INTEGER NOT NULL, EXPENSE_TYPE_CODE INTEGER NOT NULL, EXPENSE_UNIT_CODE INTEGER NOT NULL, EXPENSE_GROUP_EN VARCHAR (90 ), EXPENSE_TYPE_EN VARCHAR (150 ), EXPENSE_GROUP_DE VARCHAR (90 ), EXPENSE_TYPE_DE VARCHAR (150 ), EXPENSE_GROUP_FR VARCHAR (90 ), EXPENSE_TYPE_FR VARCHAR (150 ), EXPENSE_GROUP_JA VARCHAR (90 ), EXPENSE_TYPE_JA VARCHAR (150 ), EXPENSE_GROUP_AR VARCHAR (90 ), EXPENSE_TYPE_AR VARCHAR (150 ), EXPENSE_GROUP_CS VARCHAR (90 ), EXPENSE_TYPE_CS VARCHAR (150 ), EXPENSE_GROUP_DA VARCHAR (90 ), EXPENSE_TYPE_DA VARCHAR (150 ), EXPENSE_GROUP_EL VARCHAR (90 ), EXPENSE_TYPE_EL VARCHAR (150 ), EXPENSE_GROUP_ES VARCHAR (90 ), EXPENSE_TYPE_ES VARCHAR (150 ), EXPENSE_GROUP_FI VARCHAR (90 ), EXPENSE_TYPE_FI VARCHAR (150 ), EXPENSE_GROUP_HR VARCHAR (90 ), EXPENSE_TYPE_HR VARCHAR (150 ), EXPENSE_GROUP_HU VARCHAR (90 ), EXPENSE_TYPE_HU VARCHAR (150 ), EXPENSE_GROUP_ID VARCHAR (90 ), EXPENSE_TYPE_ID VARCHAR (150 ), EXPENSE_GROUP_IT VARCHAR (90 ), EXPENSE_TYPE_IT VARCHAR (150 ), EXPENSE_GROUP_KK VARCHAR (90 ), EXPENSE_TYPE_KK VARCHAR (150 ), EXPENSE_GROUP_KO VARCHAR (90 ), EXPENSE_TYPE_KO VARCHAR (150 ), EXPENSE_GROUP_MS VARCHAR (90 ), EXPENSE_TYPE_MS VARCHAR (150 ), EXPENSE_GROUP_NL VARCHAR (90 ), EXPENSE_TYPE_NL VARCHAR (150 ), EXPENSE_GROUP_NO VARCHAR (90 ), EXPENSE_TYPE_NO VARCHAR (150 ), EXPENSE_GROUP_PL VARCHAR (90 ), EXPENSE_TYPE_PL VARCHAR (150 ), EXPENSE_GROUP_PT VARCHAR (90 ), EXPENSE_TYPE_PT VARCHAR (150 ), EXPENSE_GROUP_RO VARCHAR (90 ), EXPENSE_TYPE_RO VARCHAR (150 ), EXPENSE_GROUP_RU VARCHAR (90 ), EXPENSE_TYPE_RU VARCHAR (150 ), EXPENSE_GROUP_SC VARCHAR (90 ), EXPENSE_TYPE_SC VARCHAR (150 ), EXPENSE_GROUP_SL VARCHAR (90 ), EXPENSE_TYPE_SL VARCHAR (150 ), EXPENSE_GROUP_SV VARCHAR (90 ), EXPENSE_TYPE_SV VARCHAR (150 ), EXPENSE_GROUP_TC VARCHAR (90 ), EXPENSE_TYPE_TC VARCHAR (150 ), EXPENSE_GROUP_TH VARCHAR (90 ), EXPENSE_TYPE_TH VARCHAR (150 ), EXPENSE_GROUP_TR VARCHAR (90 ), EXPENSE_TYPE_TR VARCHAR (150 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_EXPENSE_TYPE_DIM describes subcategories for expenses incurred by the Great Outdoors Company, in supported languages.''', 
 'pk': 'ALTER TABLE EMP_EXPENSE_TYPE_DIM ADD PRIMARY KEY (EXPENSE_TYPE_KEY )',
 },
 'EMP_EXPENSE_UNIT_LOOKUP': {
 'rows': 3, 
 'table_ddl':'''CREATE TABLE EMP_EXPENSE_UNIT_LOOKUP ( EXPENSE_UNIT_CODE INTEGER NOT NULL, EXPENSE_UNIT_EN VARCHAR (60 ), EXPENSE_UNIT_DE VARCHAR (60 ), EXPENSE_UNIT_FR VARCHAR (60 ), EXPENSE_UNIT_JA VARCHAR (60 ), EXPENSE_UNIT_AR VARCHAR (60 ), EXPENSE_UNIT_CS VARCHAR (60 ), EXPENSE_UNIT_DA VARCHAR (60 ), EXPENSE_UNIT_EL VARCHAR (60 ), EXPENSE_UNIT_ES VARCHAR (60 ), EXPENSE_UNIT_FI VARCHAR (60 ), EXPENSE_UNIT_HR VARCHAR (60 ), EXPENSE_UNIT_HU VARCHAR (60 ), EXPENSE_UNIT_ID VARCHAR (60 ), EXPENSE_UNIT_IT VARCHAR (60 ), EXPENSE_UNIT_KK VARCHAR (60 ), EXPENSE_UNIT_KO VARCHAR (60 ), EXPENSE_UNIT_MS VARCHAR (60 ), EXPENSE_UNIT_NL VARCHAR (60 ), EXPENSE_UNIT_NO VARCHAR (60 ), EXPENSE_UNIT_PL VARCHAR (60 ), EXPENSE_UNIT_PT VARCHAR (60 ), EXPENSE_UNIT_RO VARCHAR (60 ), EXPENSE_UNIT_RU VARCHAR (60 ), EXPENSE_UNIT_SC VARCHAR (60 ), EXPENSE_UNIT_SL VARCHAR (60 ), EXPENSE_UNIT_SV VARCHAR (60 ), EXPENSE_UNIT_TC VARCHAR (60 ), EXPENSE_UNIT_TH VARCHAR (60 ), EXPENSE_UNIT_TR VARCHAR (60 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_EXPENSE_UNIT_LOOKUP describes an expense as a quantity or percentage for expenses incurred by the Great Outdoors Company, in supported languages.''', 
 'pk': 'ALTER TABLE EMP_EXPENSE_UNIT_LOOKUP ADD PRIMARY KEY (EXPENSE_UNIT_CODE )'
 },
 'EMP_POSITION_DIM': {
 'rows': 57, 
 'table_ddl':'''CREATE TABLE EMP_POSITION_DIM ( POSITION_KEY INTEGER NOT NULL, POSITION_CODE1 INTEGER NOT NULL, POSITION_CODE2 INTEGER NOT NULL, POSITION_CODE3 INTEGER NOT NULL, POSITION_CODE INTEGER NOT NULL, POSITION_PARENT INTEGER , MIN_SALARY DECIMAL (19 ,2 ), MAX_SALARY DECIMAL (19 ,2 ), PAID_HOURLY INTEGER , POSITION_LEVEL SMALLINT NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_POSITION_DIM contains a department structure, and associated job positions for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_POSITION_DIM ADD PRIMARY KEY (POSITION_KEY )',
 },
 'EMP_POSITION_LOOKUP': {
 'rows': 57, 
 'table_ddl':'''CREATE TABLE EMP_POSITION_LOOKUP ( POSITION_CODE INTEGER NOT NULL, POSITION_EN VARCHAR (210 ), POSITION_DE VARCHAR (210 ), POSITION_FR VARCHAR (210 ), POSITION_JA VARCHAR (210 ), POSITION_AR VARCHAR (210 ), POSITION_CS VARCHAR (210 ), POSITION_DA VARCHAR (210 ), POSITION_EL VARCHAR (210 ), POSITION_ES VARCHAR (210 ), POSITION_FI VARCHAR (210 ), POSITION_HR VARCHAR (210 ), POSITION_HU VARCHAR (210 ), POSITION_ID VARCHAR (210 ), POSITION_IT VARCHAR (210 ), POSITION_KK VARCHAR (210 ), POSITION_KO VARCHAR (210 ), POSITION_MS VARCHAR (210 ), POSITION_NL VARCHAR (210 ), POSITION_NO VARCHAR (210 ), POSITION_PL VARCHAR (210 ), POSITION_PT VARCHAR (210 ), POSITION_RO VARCHAR (210 ), POSITION_RU VARCHAR (210 ), POSITION_SC VARCHAR (210 ), POSITION_SL VARCHAR (210 ), POSITION_SV VARCHAR (210 ), POSITION_TC VARCHAR (210 ), POSITION_TH VARCHAR (210 ), POSITION_TR VARCHAR (210 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_POSITION_LOOKUP describes job titles and department names for employees in the Great Outdoors Company, in supported languages.''', 
 'pk': 'ALTER TABLE EMP_POSITION_LOOKUP ADD PRIMARY KEY (POSITION_CODE )'
 },
 'EMP_POSITION_SUMMARY_FACT': {
 'rows': 15050, 
 'table_ddl':'''CREATE TABLE EMP_POSITION_SUMMARY_FACT ( DAY_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, POSITION_KEY INTEGER NOT NULL, POSITION_COUNT INTEGER , PLANNED_POSITION_COUNT INTEGER , INTERNAL_HIRES INTEGER , EXTERNAL_HIRES INTEGER , TERMINATIONS INTEGER ) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_POSITION_SUMMARY_FACT contains headcount data for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_POSITION_SUMMARY_FACT ADD PRIMARY KEY (ORGANIZATION_KEY , POSITION_KEY , DAY_KEY )',
 },
 'EMP_RANKING_DIM': {
 'rows': 5, 
 'table_ddl':'''CREATE TABLE EMP_RANKING_DIM ( EMPLOYEE_RANKING_KEY INTEGER NOT NULL, RANKING_CODE INTEGER NOT NULL, RANKING_DESCRIPTION_EN VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_DE VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_FR VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_JA VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_AR VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_CS VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_DA VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_EL VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_ES VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_FI VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_HR VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_HU VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_ID VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_IT VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_KK VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_KO VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_MS VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_NL VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_NO VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_PL VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_PT VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_RO VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_RU VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_SC VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_SL VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_SV VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_TC VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_TH VARCHAR (90 )NOT NULL, RANKING_DESCRIPTION_TR VARCHAR (90 )NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_RANKING_DIM describes performance grades of employees who work for the Great Outdoors Company, in supported languages.''', 
 'pk': 'ALTER TABLE EMP_RANKING_DIM ADD PRIMARY KEY (EMPLOYEE_RANKING_KEY )',
 },
 'EMP_RANKING_FACT': {
 'rows': 1897, 
 'table_ddl':'''CREATE TABLE EMP_RANKING_FACT ( ORGANIZATION_KEY INTEGER NOT NULL, POSITION_KEY INTEGER NOT NULL, EMPLOYEE_KEY INTEGER NOT NULL, DAY_KEY INTEGER NOT NULL, EMPLOYEE_RANKING_KEY INTEGER NOT NULL, RANKING_CODE INTEGER NOT NULL) DISTRIBUTE ON RANDOM ;''', 
'comment': '''Warehouse table EMP_RANKING_FACT contains the ranking scores of employees who work for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_RANKING_FACT ADD PRIMARY KEY (EMPLOYEE_KEY , POSITION_KEY , ORGANIZATION_KEY , DAY_KEY , EMPLOYEE_RANKING_KEY )',
 },
 'EMP_RECRUITMENT_DIM': {
 'rows': 14, 
 'table_ddl':'''CREATE TABLE EMP_RECRUITMENT_DIM ( RECRUITMENT_MEDIUM_KEY INTEGER NOT NULL, RECRUITMENT_MEDIUM_CODE INTEGER NOT NULL, RECRUITMENT_TYPE_CODE INTEGER NOT NULL, RECRUITMENT_MEDIUM_NAME_EN VARCHAR (150 ), RECRUITMENT_TYPE_EN VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_DE VARCHAR (150 ), RECRUITMENT_TYPE_DE VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_FR VARCHAR (150 ), RECRUITMENT_TYPE_FR VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_JA VARCHAR (150 ), RECRUITMENT_TYPE_JA VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_AR VARCHAR (150 ), RECRUITMENT_TYPE_AR VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_CS VARCHAR (150 ), RECRUITMENT_TYPE_CS VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_DA VARCHAR (150 ), RECRUITMENT_TYPE_DA VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_EL VARCHAR (150 ), RECRUITMENT_TYPE_EL VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_ES VARCHAR (150 ), RECRUITMENT_TYPE_ES VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_FI VARCHAR (150 ), RECRUITMENT_TYPE_FI VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_HR VARCHAR (150 ), RECRUITMENT_TYPE_HR VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_HU VARCHAR (150 ), RECRUITMENT_TYPE_HU VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_ID VARCHAR (150 ), RECRUITMENT_TYPE_ID VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_IT VARCHAR (150 ), RECRUITMENT_TYPE_IT VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_KK VARCHAR (150 ), RECRUITMENT_TYPE_KK VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_KO VARCHAR (150 ), RECRUITMENT_TYPE_KO VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_MS VARCHAR (150 ), RECRUITMENT_TYPE_MS VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_NL VARCHAR (150 ), RECRUITMENT_TYPE_NL VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_NO VARCHAR (150 ), RECRUITMENT_TYPE_NO VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_PL VARCHAR (150 ), RECRUITMENT_TYPE_PL VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_PT VARCHAR (150 ), RECRUITMENT_TYPE_PT VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_RO VARCHAR (150 ), RECRUITMENT_TYPE_RO VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_RU VARCHAR (150 ), RECRUITMENT_TYPE_RU VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_SC VARCHAR (150 ), RECRUITMENT_TYPE_SC VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_SL VARCHAR (150 ), RECRUITMENT_TYPE_SL VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_SV VARCHAR (150 ), RECRUITMENT_TYPE_SV VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_TC VARCHAR (150 ), RECRUITMENT_TYPE_TC VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_TH VARCHAR (150 ), RECRUITMENT_TYPE_TH VARCHAR (120 ), RECRUITMENT_MEDIUM_NAME_TR VARCHAR (150 ), RECRUITMENT_TYPE_TR VARCHAR (120 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_RECRUITMENT_DIM describes the employment source of employees working for the Great Outdoors Company, in supported languages.''', 
 'pk': 'ALTER TABLE EMP_RECRUITMENT_DIM ADD PRIMARY KEY (RECRUITMENT_MEDIUM_KEY )',
 },
 'EMP_RECRUITMENT_FACT': {
 'rows': 416, 
 'table_ddl':'''CREATE TABLE EMP_RECRUITMENT_FACT ( POST_DAY_KEY INTEGER NOT NULL, RECRUITMENT_MEDIUM_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, BRANCH_KEY INTEGER NOT NULL, POSITION_KEY INTEGER NOT NULL, POSITION_POSTING_DATE TIMESTAMP , POSITION_FILLED_DATE TIMESTAMP , POSITION_START_DATE TIMESTAMP , DAYS_TO_FILL INTEGER ) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_RECRUITMENT_FACT contains hiring data for jobs filled by employees of the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_RECRUITMENT_FACT ADD PRIMARY KEY (RECRUITMENT_MEDIUM_KEY , ORGANIZATION_KEY , POSITION_KEY , BRANCH_KEY , POST_DAY_KEY )',
 },
 'EMP_RECRUITMENT_LEAD_FACT': {
 'rows': 4171, 
 'table_ddl':'''CREATE TABLE EMP_RECRUITMENT_LEAD_FACT ( POST_DAY_KEY INTEGER NOT NULL, BRANCH_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, POSITION_KEY INTEGER NOT NULL, RECRUITMENT_MEDIUM_KEY INTEGER NOT NULL, RECRUITMENT_LEADS INTEGER NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_RECRUITMENT_LEAD_FACT''', 
 'pk': 'ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD PRIMARY KEY (POST_DAY_KEY , BRANCH_KEY , ORGANIZATION_KEY , POSITION_KEY , RECRUITMENT_MEDIUM_KEY )',
 },
 'EMP_SUCCESSION_FACT': {
 'rows': 181, 
 'table_ddl':'''CREATE TABLE EMP_SUCCESSION_FACT ( DAY_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, POSITION_KEY INTEGER NOT NULL, EMPLOYEE_KEY INTEGER NOT NULL, SUCCESSOR_EMPLOYEE_KEY INTEGER NOT NULL, SUCCESSOR_POSITION_KEY INTEGER NOT NULL, SUCCESSOR_STATUS_KEY INTEGER NOT NULL, PERCENT_READY DOUBLE NOT NULL, TARGET_PERCENT_READY DOUBLE NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_SUCCESSION_FACT contains the readiness status of employees to move into new management roles in the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_SUCCESSION_FACT ADD PRIMARY KEY (ORGANIZATION_KEY , POSITION_KEY , EMPLOYEE_KEY , DAY_KEY , SUCCESSOR_STATUS_KEY , SUCCESSOR_EMPLOYEE_KEY , SUCCESSOR_POSITION_KEY )',
 },
 'EMP_SUCCESSION_STATUS_DIM': {
 'rows': 5, 
 'table_ddl':'''CREATE TABLE EMP_SUCCESSION_STATUS_DIM ( SUCCESSOR_STATUS_KEY INTEGER NOT NULL, SUCCESSOR_STATUS_CODE INTEGER , SUCCESSOR_STATUS_EN VARCHAR (90 ), SUCCESSOR_STATUS_DE VARCHAR (90 ), SUCCESSOR_STATUS_FR VARCHAR (90 ), SUCCESSOR_STATUS_JA VARCHAR (90 ), SUCCESSOR_STATUS_AR VARCHAR (90 ), SUCCESSOR_STATUS_CS VARCHAR (90 ), SUCCESSOR_STATUS_DA VARCHAR (90 ), SUCCESSOR_STATUS_EL VARCHAR (90 ), SUCCESSOR_STATUS_ES VARCHAR (90 ), SUCCESSOR_STATUS_FI VARCHAR (90 ), SUCCESSOR_STATUS_HR VARCHAR (90 ), SUCCESSOR_STATUS_HU VARCHAR (90 ), SUCCESSOR_STATUS_ID VARCHAR (90 ), SUCCESSOR_STATUS_IT VARCHAR (90 ), SUCCESSOR_STATUS_KK VARCHAR (90 ), SUCCESSOR_STATUS_KO VARCHAR (90 ), SUCCESSOR_STATUS_MS VARCHAR (90 ), SUCCESSOR_STATUS_NL VARCHAR (90 ), SUCCESSOR_STATUS_NO VARCHAR (90 ), SUCCESSOR_STATUS_PL VARCHAR (90 ), SUCCESSOR_STATUS_PT VARCHAR (90 ), SUCCESSOR_STATUS_RO VARCHAR (90 ), SUCCESSOR_STATUS_RU VARCHAR (90 ), SUCCESSOR_STATUS_SC VARCHAR (90 ), SUCCESSOR_STATUS_SL VARCHAR (90 ), SUCCESSOR_STATUS_SV VARCHAR (90 ), SUCCESSOR_STATUS_TC VARCHAR (90 ), SUCCESSOR_STATUS_TH VARCHAR (90 ), SUCCESSOR_STATUS_TR VARCHAR (90 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_SUCCESSION_STATUS_DIM describes the readiness status of employees moving to new management postions in the Great Outdoors Company, in supported languages.''', 
 'pk': 'ALTER TABLE EMP_SUCCESSION_STATUS_DIM ADD PRIMARY KEY (SUCCESSOR_STATUS_KEY )',
 },
 'EMP_SUMMARY_FACT': {
 'rows': 24233, 
 'table_ddl':'''CREATE TABLE EMP_SUMMARY_FACT ( DAY_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, POSITION_KEY INTEGER NOT NULL, EMPLOYEE_KEY INTEGER NOT NULL, SALARY DECIMAL (19 ,2 ), PAY_INCREASE DOUBLE , BONUS DOUBLE , VACATION_DAYS_TAKEN DOUBLE , SICK_DAYS_TAKEN DOUBLE ) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_SUMMARY_FACT contains summaries of defined benefits for those working for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_SUMMARY_FACT ADD PRIMARY KEY (ORGANIZATION_KEY , EMPLOYEE_KEY , POSITION_KEY , DAY_KEY )',
 },
 'EMP_SURVEY_FACT': {
 'rows': 5725, 
 'table_ddl':'''CREATE TABLE EMP_SURVEY_FACT ( DAY_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, POSITION_KEY INTEGER NOT NULL, EMPLOYEE_TOPIC_KEY INTEGER NOT NULL, EMPLOYEE_TOPIC_SCORE DOUBLE NOT NULL, SATISFACTION_KEY INTEGER NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_SURVEY_FACT contains job satisfaction data of those working for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_SURVEY_FACT ADD PRIMARY KEY (DAY_KEY , ORGANIZATION_KEY , POSITION_KEY , EMPLOYEE_TOPIC_KEY )',
 },
 'EMP_SURVEY_TARG_FACT': {
 'rows': 20, 
 'table_ddl':'''CREATE TABLE EMP_SURVEY_TARG_FACT ( MONTH_KEY INTEGER NOT NULL, EMPLOYEE_TOPIC_KEY INTEGER NOT NULL, EMPLOYEE_TOPIC_TARGET DOUBLE , EMPLOYEE_SURVEY_BENCHMARK DOUBLE ) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_SURVEY_TARG_FACT contains job satisfaction target scores for employees of the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_SURVEY_TARG_FACT ADD PRIMARY KEY (EMPLOYEE_TOPIC_KEY , MONTH_KEY )',
 },
 'EMP_SURVEY_TOPIC_DIM': {
 'rows': 5, 
 'table_ddl':'''CREATE TABLE EMP_SURVEY_TOPIC_DIM ( EMPLOYEE_TOPIC_KEY INTEGER NOT NULL, EMPLOYEE_TOPIC_CODE INTEGER NOT NULL, EMPLOYEE_TOPIC_EN VARCHAR (120 ), EMPLOYEE_TOPIC_DE VARCHAR (120 ), EMPLOYEE_TOPIC_FR VARCHAR (120 ), EMPLOYEE_TOPIC_JA VARCHAR (120 ), EMPLOYEE_TOPIC_AR VARCHAR (120 ), EMPLOYEE_TOPIC_CS VARCHAR (120 ), EMPLOYEE_TOPIC_DA VARCHAR (120 ), EMPLOYEE_TOPIC_EL VARCHAR (120 ), EMPLOYEE_TOPIC_ES VARCHAR (120 ), EMPLOYEE_TOPIC_FI VARCHAR (120 ), EMPLOYEE_TOPIC_HR VARCHAR (120 ), EMPLOYEE_TOPIC_HU VARCHAR (120 ), EMPLOYEE_TOPIC_ID VARCHAR (120 ), EMPLOYEE_TOPIC_IT VARCHAR (120 ), EMPLOYEE_TOPIC_KK VARCHAR (120 ), EMPLOYEE_TOPIC_KO VARCHAR (120 ), EMPLOYEE_TOPIC_MS VARCHAR (120 ), EMPLOYEE_TOPIC_NL VARCHAR (120 ), EMPLOYEE_TOPIC_NO VARCHAR (120 ), EMPLOYEE_TOPIC_PL VARCHAR (120 ), EMPLOYEE_TOPIC_PT VARCHAR (120 ), EMPLOYEE_TOPIC_RO VARCHAR (120 ), EMPLOYEE_TOPIC_RU VARCHAR (120 ), EMPLOYEE_TOPIC_SC VARCHAR (120 ), EMPLOYEE_TOPIC_SL VARCHAR (120 ), EMPLOYEE_TOPIC_SV VARCHAR (120 ), EMPLOYEE_TOPIC_TC VARCHAR (120 ), EMPLOYEE_TOPIC_TH VARCHAR (120 ), EMPLOYEE_TOPIC_TR VARCHAR (120 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_SURVEY_TOPIC_DIM describes employee survey questions for employees of the Great Outdoors Company, in supported languages.''', 
 'pk': 'ALTER TABLE EMP_SURVEY_TOPIC_DIM ADD PRIMARY KEY (EMPLOYEE_TOPIC_KEY )',
 },
 'EMP_TERMINATION_LOOKUP': {
 'rows': 6, 
 'table_ddl':'''CREATE TABLE EMP_TERMINATION_LOOKUP ( TERMINATION_CODE INTEGER NOT NULL, TERMINATION_REASON_EN VARCHAR (120 ), TERMINATION_REASON_DE VARCHAR (120 ), TERMINATION_REASON_FR VARCHAR (120 ), TERMINATION_REASON_JA VARCHAR (120 ), TERMINATION_REASON_AR VARCHAR (120 ), TERMINATION_REASON_CS VARCHAR (120 ), TERMINATION_REASON_DA VARCHAR (120 ), TERMINATION_REASON_EL VARCHAR (120 ), TERMINATION_REASON_ES VARCHAR (120 ), TERMINATION_REASON_FI VARCHAR (120 ), TERMINATION_REASON_HR VARCHAR (120 ), TERMINATION_REASON_HU VARCHAR (120 ), TERMINATION_REASON_ID VARCHAR (120 ), TERMINATION_REASON_IT VARCHAR (120 ), TERMINATION_REASON_KK VARCHAR (120 ), TERMINATION_REASON_KO VARCHAR (120 ), TERMINATION_REASON_MS VARCHAR (120 ), TERMINATION_REASON_NL VARCHAR (120 ), TERMINATION_REASON_NO VARCHAR (120 ), TERMINATION_REASON_PL VARCHAR (120 ), TERMINATION_REASON_PT VARCHAR (120 ), TERMINATION_REASON_RO VARCHAR (120 ), TERMINATION_REASON_RU VARCHAR (120 ), TERMINATION_REASON_SC VARCHAR (120 ), TERMINATION_REASON_SL VARCHAR (120 ), TERMINATION_REASON_SV VARCHAR (120 ), TERMINATION_REASON_TC VARCHAR (120 ), TERMINATION_REASON_TH VARCHAR (120 ), TERMINATION_REASON_TR VARCHAR (120 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_TERMINATION_LOOKUP describes the termination reason or current status of employees that work for the Great Outdoors Company, in supported languages.''', 
 'pk': '''ALTER TABLE EMP_TERMINATION_LOOKUP ADD PRIMARY KEY (TERMINATION_CODE )''',
 },
 'EMP_TRAINING_DIM': {
 'rows': 42, 
 'table_ddl':'''CREATE TABLE EMP_TRAINING_DIM ( TRAINING_KEY INTEGER NOT NULL, COURSE_CODE INTEGER NOT NULL, COURSE_COST DECIMAL (19 ,2 ), COURSE_DAYS DOUBLE , COURSE_NAME_EN VARCHAR (150 ), COURSE_NAME_DE VARCHAR (150 ), COURSE_NAME_FR VARCHAR (150 ), COURSE_NAME_JA VARCHAR (150 ), COURSE_NAME_AR VARCHAR (150 ), COURSE_NAME_CS VARCHAR (150 ), COURSE_NAME_DA VARCHAR (150 ), COURSE_NAME_EL VARCHAR (150 ), COURSE_NAME_ES VARCHAR (150 ), COURSE_NAME_FI VARCHAR (150 ), COURSE_NAME_HR VARCHAR (150 ), COURSE_NAME_HU VARCHAR (150 ), COURSE_NAME_ID VARCHAR (150 ), COURSE_NAME_IT VARCHAR (150 ), COURSE_NAME_KK VARCHAR (150 ), COURSE_NAME_KO VARCHAR (150 ), COURSE_NAME_MS VARCHAR (150 ), COURSE_NAME_NL VARCHAR (150 ), COURSE_NAME_NO VARCHAR (150 ), COURSE_NAME_PL VARCHAR (150 ), COURSE_NAME_PT VARCHAR (150 ), COURSE_NAME_RO VARCHAR (150 ), COURSE_NAME_RU VARCHAR (150 ), COURSE_NAME_SC VARCHAR (150 ), COURSE_NAME_SL VARCHAR (150 ), COURSE_NAME_SV VARCHAR (150 ), COURSE_NAME_TC VARCHAR (150 ), COURSE_NAME_TH VARCHAR (150 ), COURSE_NAME_TR VARCHAR (150 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_TRAINING_DIM describes the training courses offered to employees of the Great Outdoors Company, in supported languages.''', 
 'pk': 'ALTER TABLE EMP_TRAINING_DIM ADD PRIMARY KEY (TRAINING_KEY )',
 },
  'EMP_TRAINING_FACT': {
 'rows': 4465, 
 'table_ddl':'''CREATE TABLE EMP_TRAINING_FACT ( ORGANIZATION_KEY INTEGER NOT NULL, POSITION_KEY INTEGER NOT NULL, EMPLOYEE_KEY INTEGER NOT NULL, DAY_KEY INTEGER NOT NULL, EXPENSE_TYPE_KEY INTEGER NOT NULL, TRAINING_KEY INTEGER NOT NULL, COURSE_COST DECIMAL (19 ,2 ), COURSE_DAYS DOUBLE ) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table EMP_TRAINING_FACT contains the training data of employees that work for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE EMP_TRAINING_FACT ADD PRIMARY KEY (ORGANIZATION_KEY , POSITION_KEY , EMPLOYEE_KEY , DAY_KEY , EXPENSE_TYPE_KEY , TRAINING_KEY )',
 },
 'FIN_ACCOUNT_CLASS_LOOKUP': {
 'rows': 5, 
 'table_ddl':'''CREATE TABLE FIN_ACCOUNT_CLASS_LOOKUP ( ACCOUNT_CLASS_CODE INTEGER NOT NULL, ACCOUNT_CLASS_EN VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_AR VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_CS VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_DA VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_DE VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_EL VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_ES VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_FI VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_FR VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_HR VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_HU VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_ID VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_IT VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_JA VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_KK VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_KO VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_MS VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_NL VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_NO VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_PL VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_PT VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_RO VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_RU VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_SC VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_SL VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_SV VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_TC VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_TH VARCHAR (150 )NOT NULL, ACCOUNT_CLASS_TR VARCHAR (150 )NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table FIN_ACCOUNT_CLASS_LOOKUP describes the type or usage of a financial account, in supported languages.''', 
 'pk': 'ALTER TABLE FIN_ACCOUNT_CLASS_LOOKUP ADD PRIMARY KEY (ACCOUNT_CLASS_CODE )',
 },
 'FIN_ACCOUNT_DIM': {
 'rows': 242, 
 'table_ddl':'''CREATE TABLE FIN_ACCOUNT_DIM ( ACCOUNT_KEY INTEGER NOT NULL, ACCOUNT_CODE1 VARCHAR (105 ), ACCOUNT_CODE2 VARCHAR (105 ), ACCOUNT_CODE3 VARCHAR (105 ), ACCOUNT_CODE4 VARCHAR (105 ), ACCOUNT_CODE5 VARCHAR (105 ), ACCOUNT_CODE6 VARCHAR (105 ), ACCOUNT_CODE7 VARCHAR (105 ), ACCOUNT_CODE8 VARCHAR (105 ), ACCOUNT_CODE9 VARCHAR (105 ), ACCOUNT_CODE10 VARCHAR (105 ), ACCOUNT_CODE11 VARCHAR (105 ), ACCOUNT_CODE12 VARCHAR (105 ), ACCOUNT_CODE13 VARCHAR (105 ), ACCOUNT_CODE14 VARCHAR (105 ), ACCOUNT_CODE15 VARCHAR (105 ), ACCOUNT_CODE16 VARCHAR (105 ), ACCOUNT_CODE VARCHAR (105 ), ACCOUNT_PARENT VARCHAR (105 ), DEBIT_OR_CREDIT CHARACTER (3 ), ACCOUNT_TYPE_CODE CHARACTER (3 ), ACCOUNT_CLASS_CODE INTEGER , ACCOUNT_LEVEL INTEGER , AGGREGATION_SIGN CHARACTER (3 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table FIN_ACCOUNT_DIM contains the financial account hierarchy for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE FIN_ACCOUNT_DIM ADD PRIMARY KEY (ACCOUNT_KEY )',
 },
 'FIN_ACCOUNT_NAME_LOOKUP': {
 'rows': 242, 
 'table_ddl':'''CREATE TABLE FIN_ACCOUNT_NAME_LOOKUP ( ACCOUNT_CODE VARCHAR (105 )NOT NULL, ACCOUNT_NAME_EN VARCHAR (360 ), ACCOUNT_NAME_DE VARCHAR (360 ), ACCOUNT_NAME_FR VARCHAR (360 ), ACCOUNT_NAME_JA VARCHAR (360 ), ACCOUNT_NAME_AR VARCHAR (360 ), ACCOUNT_NAME_CS VARCHAR (360 ), ACCOUNT_NAME_DA VARCHAR (360 ), ACCOUNT_NAME_EL VARCHAR (360 ), ACCOUNT_NAME_ES VARCHAR (360 ), ACCOUNT_NAME_FI VARCHAR (360 ), ACCOUNT_NAME_HR VARCHAR (360 ), ACCOUNT_NAME_HU VARCHAR (360 ), ACCOUNT_NAME_ID VARCHAR (360 ), ACCOUNT_NAME_IT VARCHAR (360 ), ACCOUNT_NAME_KK VARCHAR (360 ), ACCOUNT_NAME_KO VARCHAR (360 ), ACCOUNT_NAME_MS VARCHAR (360 ), ACCOUNT_NAME_NL VARCHAR (360 ), ACCOUNT_NAME_NO VARCHAR (360 ), ACCOUNT_NAME_PL VARCHAR (360 ), ACCOUNT_NAME_PT VARCHAR (360 ), ACCOUNT_NAME_RO VARCHAR (360 ), ACCOUNT_NAME_RU VARCHAR (360 ), ACCOUNT_NAME_SC VARCHAR (360 ), ACCOUNT_NAME_SL VARCHAR (360 ), ACCOUNT_NAME_SV VARCHAR (360 ), ACCOUNT_NAME_TC VARCHAR (360 ), ACCOUNT_NAME_TH VARCHAR (360 ), ACCOUNT_NAME_TR VARCHAR (360 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table FIN_ACCOUNT_NAME_LOOKUP describes the financial account names relating to the account dimension, in supported languages.''', 
 'pk': 'ALTER TABLE FIN_ACCOUNT_NAME_LOOKUP ADD PRIMARY KEY (ACCOUNT_CODE )',
 },
 'FIN_ACCOUNT_TYPE_LOOKUP': {
 'rows': 4, 
 'table_ddl':'''CREATE TABLE FIN_ACCOUNT_TYPE_LOOKUP ( ACCOUNT_TYPE_CODE CHARACTER (3 )NOT NULL, ACCOUNT_TYPE_EN VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_AR VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_CS VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_DA VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_DE VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_EL VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_ES VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_FI VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_FR VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_HR VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_HU VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_ID VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_IT VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_JA VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_KK VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_KO VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_MS VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_NL VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_NO VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_PL VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_PT VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_RO VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_RU VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_SC VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_SL VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_SV VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_TC VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_TH VARCHAR (300 )NOT NULL, ACCOUNT_TYPE_TR VARCHAR (300 )NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table FIN_ACCOUNT_TYPE_LOOKUP describes the behaviour of financial accounts when aggregated, in supported languages.''', 
 'pk': 'ALTER TABLE FIN_ACCOUNT_TYPE_LOOKUP ADD PRIMARY KEY (ACCOUNT_TYPE_CODE )',
 },
 'FIN_FINANCE_FACT': {
 'rows': 164132, 
 'table_ddl':'''CREATE TABLE FIN_FINANCE_FACT ( SUBMISSION_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, ACCOUNT_KEY INTEGER NOT NULL, MONTH_KEY INTEGER NOT NULL, AMOUNT_YEAR_TO_DATE DECIMAL (19 ,2 ), AMOUNT_MONTH DECIMAL (19 ,2 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table FIN_FINANCE_FACT contains the debit or credit amounts of the financial accounts for the Great Outdoors Company.''', 
 'pk': '''ALTER TABLE FIN_FINANCE_FACT ADD PRIMARY KEY (SUBMISSION_KEY , ORGANIZATION_KEY , ACCOUNT_KEY , MONTH_KEY )''',
 },
 'FIN_SUBM_CURRENCY_LOOKUP': {
 'rows': 7, 
 'table_ddl':'''CREATE TABLE FIN_SUBM_CURRENCY_LOOKUP ( SUBMISSION_CURRENCY_CODE VARCHAR (9 )NOT NULL, SUBMISSION_CURRENCY_EN VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_AR VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_CS VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_DA VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_DE VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_EL VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_ES VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_FI VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_FR VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_HR VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_HU VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_ID VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_IT VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_JA VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_KK VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_KO VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_MS VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_NL VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_NO VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_PL VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_PT VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_RO VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_RU VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_SC VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_SL VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_SV VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_TC VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_TH VARCHAR (90 )NOT NULL, SUBMISSION_CURRENCY_TR VARCHAR (90 )NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table FIN_SUBM_CURRENCY_LOOKUP describes the reporting currency relating to the submission dimension, in supported languages.''', 
 'pk': 'ALTER TABLE FIN_SUBM_CURRENCY_LOOKUP ADD PRIMARY KEY (SUBMISSION_CURRENCY_CODE )',
 },
 'FIN_SUBM_DIM': {
 'rows': 52, 
 'table_ddl':'''CREATE TABLE FIN_SUBM_DIM ( SUBMISSION_KEY INTEGER NOT NULL, SUBMISSION_CODE VARCHAR (60 )NOT NULL, SUBMISSION_NAME_EN VARCHAR (240 )NOT NULL, SUBMISSION_NAME_AR VARCHAR (240 ), SUBMISSION_NAME_CS VARCHAR (240 ), SUBMISSION_NAME_DA VARCHAR (240 ), SUBMISSION_NAME_DE VARCHAR (240 ), SUBMISSION_NAME_EL VARCHAR (240 ), SUBMISSION_NAME_ES VARCHAR (240 ), SUBMISSION_NAME_FI VARCHAR (240 ), SUBMISSION_NAME_FR VARCHAR (240 ), SUBMISSION_NAME_HR VARCHAR (240 ), SUBMISSION_NAME_HU VARCHAR (240 ), SUBMISSION_NAME_ID VARCHAR (240 ), SUBMISSION_NAME_IT VARCHAR (240 ), SUBMISSION_NAME_JA VARCHAR (240 ), SUBMISSION_NAME_KK VARCHAR (240 ), SUBMISSION_NAME_KO VARCHAR (240 ), SUBMISSION_NAME_MS VARCHAR (240 ), SUBMISSION_NAME_NL VARCHAR (240 ), SUBMISSION_NAME_NO VARCHAR (240 ), SUBMISSION_NAME_PL VARCHAR (240 ), SUBMISSION_NAME_PT VARCHAR (240 ), SUBMISSION_NAME_RO VARCHAR (240 ), SUBMISSION_NAME_RU VARCHAR (240 ), SUBMISSION_NAME_SC VARCHAR (240 ), SUBMISSION_NAME_SL VARCHAR (240 ), SUBMISSION_NAME_SV VARCHAR (240 ), SUBMISSION_NAME_TC VARCHAR (240 ), SUBMISSION_NAME_TH VARCHAR (240 ), SUBMISSION_NAME_TR VARCHAR (240 ), SUBMISSION_YEAR INTEGER , SUBMISSION_TYPE_CODE CHARACTER (3 ), SUBMISSION_CURRENCY_CODE VARCHAR (9 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table FIN_SUBM_DIM describes the year and names of each set of financial accounts for the Great Outdoors Company, in supported languages.''', 
 'pk': 'ALTER TABLE FIN_SUBM_DIM ADD PRIMARY KEY (SUBMISSION_KEY )',
 },
 'FIN_SUBM_TYPE_LOOKUP': {
 'rows': 3, 
 'table_ddl':'''CREATE TABLE FIN_SUBM_TYPE_LOOKUP ( SUBMISSION_TYPE_CODE CHARACTER (3 )NOT NULL, SUBMISSION_TYPE_EN VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_AR VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_CS VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_DA VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_DE VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_EL VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_ES VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_FI VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_FR VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_HR VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_HU VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_ID VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_IT VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_JA VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_KK VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_KO VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_MS VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_NL VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_NO VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_PL VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_PT VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_RO VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_RU VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_SC VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_SL VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_SV VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_TC VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_TH VARCHAR (90 )NOT NULL, SUBMISSION_TYPE_TR VARCHAR (90 )NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table FIN_SUBM_TYPE_LOOKUP describes the reporting scenario of the financial statements for the Great Outdoors Company, in supported languages.''', 
 'pk': 'ALTER TABLE FIN_SUBM_TYPE_LOOKUP ADD PRIMARY KEY (SUBMISSION_TYPE_CODE )',
 },
 'GO_BRANCH_DIM': {
 'rows': 29, 
 'table_ddl':'''CREATE TABLE GO_BRANCH_DIM ( BRANCH_KEY INTEGER NOT NULL, BRANCH_CODE INTEGER NOT NULL, ADDRESS1 VARCHAR (120 )NOT NULL, ADDRESS2 VARCHAR (120 ), CITY VARCHAR (60 )NOT NULL, PROV_STATE VARCHAR (60 ), ADDRESS1_MB VARCHAR (120 ), ADDRESS2_MB VARCHAR (120 ), CITY_MB VARCHAR (60 )NOT NULL, PROV_STATE_MB VARCHAR (60 ), POSTAL_ZONE VARCHAR (30 )NOT NULL, COUNTRY_CODE INTEGER NOT NULL, WAREHOUSE_BRANCH_CODE INTEGER NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table GO_BRANCH_DIM contains address information for corporate offices and distribution centers.''', 
 'pk': 'ALTER TABLE GO_BRANCH_DIM ADD PRIMARY KEY (BRANCH_KEY )',
 },
 'GO_GENDER_LOOKUP': {
 'rows': 2, 
 'table_ddl':'''CREATE TABLE GO_GENDER_LOOKUP ( GENDER_CODE SMALLINT NOT NULL, GENDER_EN VARCHAR (45 ), GENDER_DE VARCHAR (45 ), GENDER_FR VARCHAR (45 ), GENDER_JA VARCHAR (45 ), GENDER_AR VARCHAR (45 ), GENDER_CS VARCHAR (45 ), GENDER_DA VARCHAR (45 ), GENDER_EL VARCHAR (45 ), GENDER_ES VARCHAR (45 ), GENDER_FI VARCHAR (45 ), GENDER_HR VARCHAR (45 ), GENDER_HU VARCHAR (45 ), GENDER_ID VARCHAR (45 ), GENDER_IT VARCHAR (45 ), GENDER_KK VARCHAR (45 ), GENDER_KO VARCHAR (45 ), GENDER_MS VARCHAR (45 ), GENDER_NL VARCHAR (45 ), GENDER_NO VARCHAR (45 ), GENDER_PL VARCHAR (45 ), GENDER_PT VARCHAR (45 ), GENDER_RO VARCHAR (45 ), GENDER_RU VARCHAR (45 ), GENDER_SC VARCHAR (45 ), GENDER_SL VARCHAR (45 ), GENDER_SV VARCHAR (45 ), GENDER_TC VARCHAR (45 ), GENDER_TH VARCHAR (45 ), GENDER_TR VARCHAR (45 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table GO_GENDER_LOOKUP describes gender, in supported languages.''', 
 'pk': 'ALTER TABLE GO_GENDER_LOOKUP ADD PRIMARY KEY (GENDER_CODE )',
 },
 'GO_ORG_DIM': {
 'rows': 123, 
 'table_ddl':'''CREATE TABLE GO_ORG_DIM ( ORGANIZATION_KEY INTEGER NOT NULL, ORGANIZATION_CODE1 VARCHAR (30 ), ORGANIZATION_CODE2 VARCHAR (30 ), ORGANIZATION_CODE3 VARCHAR (30 ), ORGANIZATION_CODE4 VARCHAR (30 ), ORGANIZATION_CODE VARCHAR (30 ), ORGANIZATION_PARENT VARCHAR (30 ), ORGANIZATION_LEVEL SMALLINT ) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table GO_ORG_DIM contains the organization hiearchy of the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE GO_ORG_DIM ADD PRIMARY KEY (ORGANIZATION_KEY )',
 },
 'GO_ORG_NAME_LOOKUP': {
 'rows': 123, 
 'table_ddl':'''CREATE TABLE GO_ORG_NAME_LOOKUP ( ORGANIZATION_CODE VARCHAR (30 )NOT NULL, ORGANIZATION_NAME_EN VARCHAR (180 ), ORGANIZATION_NAME_DE VARCHAR (180 ), ORGANIZATION_NAME_FR VARCHAR (180 ), ORGANIZATION_NAME_JA VARCHAR (180 ), ORGANIZATION_NAME_AR VARCHAR (180 ), ORGANIZATION_NAME_CS VARCHAR (180 ), ORGANIZATION_NAME_DA VARCHAR (180 ), ORGANIZATION_NAME_EL VARCHAR (180 ), ORGANIZATION_NAME_ES VARCHAR (180 ), ORGANIZATION_NAME_FI VARCHAR (180 ), ORGANIZATION_NAME_HR VARCHAR (180 ), ORGANIZATION_NAME_HU VARCHAR (180 ), ORGANIZATION_NAME_ID VARCHAR (180 ), ORGANIZATION_NAME_IT VARCHAR (180 ), ORGANIZATION_NAME_KK VARCHAR (180 ), ORGANIZATION_NAME_KO VARCHAR (180 ), ORGANIZATION_NAME_MS VARCHAR (180 ), ORGANIZATION_NAME_NL VARCHAR (180 ), ORGANIZATION_NAME_NO VARCHAR (180 ), ORGANIZATION_NAME_PL VARCHAR (180 ), ORGANIZATION_NAME_PT VARCHAR (180 ), ORGANIZATION_NAME_RO VARCHAR (180 ), ORGANIZATION_NAME_RU VARCHAR (180 ), ORGANIZATION_NAME_SC VARCHAR (180 ), ORGANIZATION_NAME_SL VARCHAR (180 ), ORGANIZATION_NAME_SV VARCHAR (180 ), ORGANIZATION_NAME_TC VARCHAR (180 ), ORGANIZATION_NAME_TH VARCHAR (180 ), ORGANIZATION_NAME_TR VARCHAR (180 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table GO_ORG_NAME_LOOKUP describes organization names in supported languages.''', 
 'pk': 'ALTER TABLE GO_ORG_NAME_LOOKUP ADD PRIMARY KEY (ORGANIZATION_CODE )',
 },
 'GO_REGION_DIM': {
 'rows': 21, 
 'table_ddl':'''CREATE TABLE GO_REGION_DIM ( COUNTRY_KEY INTEGER NOT NULL, COUNTRY_CODE INTEGER NOT NULL, FLAG_IMAGE VARCHAR (45 )NOT NULL, ISO_THREE_LETTER_CODE VARCHAR (9 )NOT NULL, ISO_TWO_LETTER_CODE VARCHAR (6 )NOT NULL, ISO_THREE_DIGIT_CODE VARCHAR (9 )NOT NULL, REGION_KEY INTEGER NOT NULL, REGION_CODE INTEGER NOT NULL, REGION_EN VARCHAR (90 )NOT NULL, COUNTRY_EN VARCHAR (90 )NOT NULL, REGION_DE VARCHAR (90 )NOT NULL, COUNTRY_DE VARCHAR (90 )NOT NULL, REGION_FR VARCHAR (90 )NOT NULL, COUNTRY_FR VARCHAR (90 )NOT NULL, REGION_JA VARCHAR (90 )NOT NULL, COUNTRY_JA VARCHAR (90 )NOT NULL, COUNTRY_AR VARCHAR (90 )NOT NULL, REGION_AR VARCHAR (90 )NOT NULL, REGION_CS VARCHAR (90 )NOT NULL, COUNTRY_CS VARCHAR (90 )NOT NULL, REGION_DA VARCHAR (90 )NOT NULL, COUNTRY_DA VARCHAR (90 )NOT NULL, REGION_EL VARCHAR (90 )NOT NULL, COUNTRY_EL VARCHAR (90 )NOT NULL, REGION_ES VARCHAR (90 )NOT NULL, COUNTRY_ES VARCHAR (90 )NOT NULL, REGION_FI VARCHAR (90 )NOT NULL, COUNTRY_FI VARCHAR (90 )NOT NULL, REGION_HR VARCHAR (90 )NOT NULL, COUNTRY_HR VARCHAR (90 )NOT NULL, REGION_HU VARCHAR (90 )NOT NULL, COUNTRY_HU VARCHAR (90 )NOT NULL, REGION_ID VARCHAR (90 )NOT NULL, COUNTRY_ID VARCHAR (90 )NOT NULL, REGION_IT VARCHAR (90 )NOT NULL, COUNTRY_IT VARCHAR (90 )NOT NULL, REGION_KK VARCHAR (90 )NOT NULL, COUNTRY_KK VARCHAR (90 )NOT NULL, REGION_KO VARCHAR (90 )NOT NULL, COUNTRY_KO VARCHAR (90 )NOT NULL, REGION_MS VARCHAR (90 )NOT NULL, COUNTRY_MS VARCHAR (90 )NOT NULL, REGION_NL VARCHAR (90 )NOT NULL, COUNTRY_NL VARCHAR (90 )NOT NULL, REGION_NO VARCHAR (90 )NOT NULL, COUNTRY_NO VARCHAR (90 )NOT NULL, REGION_PL VARCHAR (90 )NOT NULL, COUNTRY_PL VARCHAR (90 )NOT NULL, REGION_PT VARCHAR (90 )NOT NULL, COUNTRY_PT VARCHAR (90 )NOT NULL, REGION_RO VARCHAR (90 )NOT NULL, COUNTRY_RO VARCHAR (90 )NOT NULL, REGION_RU VARCHAR (90 )NOT NULL, COUNTRY_RU VARCHAR (90 )NOT NULL, REGION_SC VARCHAR (90 )NOT NULL, COUNTRY_SC VARCHAR (90 )NOT NULL, REGION_SL VARCHAR (90 )NOT NULL, COUNTRY_SL VARCHAR (90 )NOT NULL, REGION_SV VARCHAR (90 )NOT NULL, COUNTRY_SV VARCHAR (90 )NOT NULL, REGION_TC VARCHAR (90 )NOT NULL, COUNTRY_TC VARCHAR (90 )NOT NULL, REGION_TH VARCHAR (90 )NOT NULL, COUNTRY_TH VARCHAR (90 )NOT NULL, REGION_TR VARCHAR (90 )NOT NULL, COUNTRY_TR VARCHAR (90 )NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table GO_REGION_DIM describes the region names and countries as sales territories, in supported languages.''', 
 'pk': 'ALTER TABLE GO_REGION_DIM ADD PRIMARY KEY (COUNTRY_KEY )',
 },
 'GO_SATISFACTION_DIM': {
 'rows': 5, 
 'table_ddl':'''CREATE TABLE GO_SATISFACTION_DIM ( SATISFACTION_KEY INTEGER NOT NULL, SATISFACTION_CODE INTEGER NOT NULL, SATISFACTION_LOWER_LIMIT DOUBLE , SATISFACTION_UPPER_LIMIT DOUBLE , SATISFACTION_DESCRIPTION_EN VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_DE VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_FR VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_JA VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_AR VARCHAR (120 ), SATISFACTION_DESCRIPTION_CS VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_DA VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_EL VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_ES VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_FI VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_HR VARCHAR (120 ), SATISFACTION_DESCRIPTION_HU VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_ID VARCHAR (120 ), SATISFACTION_DESCRIPTION_IT VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_KK VARCHAR (120 ), SATISFACTION_DESCRIPTION_KO VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_MS VARCHAR (120 ), SATISFACTION_DESCRIPTION_NL VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_NO VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_PL VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_PT VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_RO VARCHAR (120 ), SATISFACTION_DESCRIPTION_RU VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_SC VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_SL VARCHAR (120 ), SATISFACTION_DESCRIPTION_SV VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_TC VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_TH VARCHAR (120 )NOT NULL, SATISFACTION_DESCRIPTION_TR VARCHAR (120 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table GO_SATISFACTION_DIM describes a satisfaction level for each survey topic in EMPLOYEE_SURVEY_RESULTS, in supported languages.''', 
 'pk': 'ALTER TABLE GO_SATISFACTION_DIM ADD PRIMARY KEY (SATISFACTION_KEY )',
 },
 'GO_TIME_DIM': {
 'rows': 1465, 
 'table_ddl':'''CREATE TABLE GO_TIME_DIM ( DAY_KEY INTEGER NOT NULL, DAY_DATE TIMESTAMP , MONTH_KEY INTEGER NOT NULL, CURRENT_MONTH SMALLINT , MONTH_NUMBER INTEGER , QUARTER_KEY INTEGER NOT NULL, CURRENT_QUARTER SMALLINT , CURRENT_YEAR SMALLINT NOT NULL, DAY_OF_WEEK SMALLINT , DAY_OF_MONTH SMALLINT , DAYS_IN_MONTH SMALLINT , DAY_OF_YEAR SMALLINT , WEEK_OF_MONTH SMALLINT , WEEK_OF_QUARTER SMALLINT , WEEK_OF_YEAR SMALLINT , MONTH_EN VARCHAR (75 ), WEEKDAY_EN VARCHAR (60 ), MONTH_DE VARCHAR (75 ), WEEKDAY_DE VARCHAR (60 ), MONTH_FR VARCHAR (75 ), WEEKDAY_FR VARCHAR (60 ), MONTH_JA VARCHAR (75 ), WEEKDAY_JA VARCHAR (60 ), MONTH_AR VARCHAR (75 ), WEEKDAY_AR VARCHAR (60 ), MONTH_CS VARCHAR (75 ), WEEKDAY_CS VARCHAR (60 ), MONTH_DA VARCHAR (75 ), WEEKDAY_DA VARCHAR (60 ), MONTH_EL VARCHAR (75 ), WEEKDAY_EL VARCHAR (60 ), MONTH_ES VARCHAR (75 ), WEEKDAY_ES VARCHAR (60 ), MONTH_FI VARCHAR (75 ), WEEKDAY_FI VARCHAR (60 ), MONTH_HR VARCHAR (75 )NOT NULL, WEEKDAY_HR VARCHAR (60 )NOT NULL, MONTH_HU VARCHAR (75 ), WEEKDAY_HU VARCHAR (60 ), MONTH_ID VARCHAR (75 ), WEEKDAY_ID VARCHAR (60 ), MONTH_IT VARCHAR (75 ), WEEKDAY_IT VARCHAR (60 ), MONTH_KK VARCHAR (75 )NOT NULL, WEEKDAY_KK VARCHAR (60 )NOT NULL, MONTH_KO VARCHAR (75 ), WEEKDAY_KO VARCHAR (60 ), MONTH_MS VARCHAR (75 ), WEEKDAY_MS VARCHAR (60 ), MONTH_NL VARCHAR (75 ), WEEKDAY_NL VARCHAR (60 ), MONTH_NO VARCHAR (75 ), WEEKDAY_NO VARCHAR (60 ), MONTH_PL VARCHAR (75 ), WEEKDAY_PL VARCHAR (60 ), MONTH_PT VARCHAR (75 ), WEEKDAY_PT VARCHAR (60 ), MONTH_RO VARCHAR (75 ), WEEKDAY_RO VARCHAR (60 ), MONTH_RU VARCHAR (75 ), WEEKDAY_RU VARCHAR (60 ), MONTH_SC VARCHAR (75 ), WEEKDAY_SC VARCHAR (60 ), MONTH_SL VARCHAR (75 )NOT NULL, WEEKDAY_SL VARCHAR (60 )NOT NULL, MONTH_SV VARCHAR (75 ), WEEKDAY_SV VARCHAR (60 ), MONTH_TC VARCHAR (75 ), WEEKDAY_TC VARCHAR (60 ), MONTH_TH VARCHAR (75 ), WEEKDAY_TH VARCHAR (60 ), MONTH_TR VARCHAR (75 ), WEEKDAY_TR VARCHAR (60 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table GO_TIME_DIM contains a four-year range of date lookup values.''', 
 'pk': 'ALTER TABLE GO_TIME_DIM ADD PRIMARY KEY (DAY_KEY )',
 },
 'GO_TIME_QUARTER_LOOKUP': {
 'rows': 20, 
 'table_ddl':'''CREATE TABLE GO_TIME_QUARTER_LOOKUP ( QUARTER_KEY INTEGER NOT NULL, QUARTER_EN VARCHAR (60 ), QUARTER_DE VARCHAR (60 ), QUARTER_FR VARCHAR (60 ), QUARTER_JA VARCHAR (60 ), QUARTER_AR VARCHAR (60 ), QUARTER_CS VARCHAR (60 ), QUARTER_DA VARCHAR (60 ), QUARTER_EL VARCHAR (60 ), QUARTER_ES VARCHAR (60 ), QUARTER_FI VARCHAR (60 ), QUARTER_HR VARCHAR (60 )NOT NULL, QUARTER_HU VARCHAR (60 ), QUARTER_ID VARCHAR (60 ), QUARTER_IT VARCHAR (60 ), QUARTER_KK VARCHAR (60 )NOT NULL, QUARTER_KO VARCHAR (60 ), QUARTER_MS VARCHAR (60 ), QUARTER_NL VARCHAR (60 ), QUARTER_NO VARCHAR (60 ), QUARTER_PL VARCHAR (60 ), QUARTER_PT VARCHAR (60 ), QUARTER_RO VARCHAR (60 ), QUARTER_RU VARCHAR (60 ), QUARTER_SC VARCHAR (60 ), QUARTER_SL VARCHAR (60 )NOT NULL, QUARTER_SV VARCHAR (60 ), QUARTER_TC VARCHAR (60 ), QUARTER_TH VARCHAR (60 ), QUARTER_TR VARCHAR (60 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table GO_TIME_QUARTER_LOOKUP describes quarterly periods used by the the Great Outdoors Company when making sales and financial reports, in supported languages.''', 
 'pk': 'ALTER TABLE GO_TIME_QUARTER_LOOKUP ADD PRIMARY KEY (QUARTER_KEY )',
 },
 'MRK_ACTIVITY_STATUS_DIM': {
 'rows': 2, 
 'table_ddl':'''CREATE TABLE MRK_ACTIVITY_STATUS_DIM ( ACTIVITY_STATUS_KEY INTEGER NOT NULL, ACTIVITY_STATUS_CODE SMALLINT NOT NULL, ACTIVITY_STATUS_EN VARCHAR (60 ), ACTIVITY_STATUS_DE VARCHAR (60 ), ACTIVITY_STATUS_FR VARCHAR (60 ), ACTIVITY_STATUS_JA VARCHAR (60 ), ACTIVITY_STATUS_AR VARCHAR (60 ), ACTIVITY_STATUS_CS VARCHAR (60 ), ACTIVITY_STATUS_DA VARCHAR (60 ), ACTIVITY_STATUS_EL VARCHAR (60 ), ACTIVITY_STATUS_ES VARCHAR (60 ), ACTIVITY_STATUS_FI VARCHAR (60 ), ACTIVITY_STATUS_HR VARCHAR (60 )NOT NULL, ACTIVITY_STATUS_HU VARCHAR (60 ), ACTIVITY_STATUS_ID VARCHAR (60 ), ACTIVITY_STATUS_IT VARCHAR (60 ), ACTIVITY_STATUS_KK VARCHAR (60 )NOT NULL, ACTIVITY_STATUS_KO VARCHAR (60 ), ACTIVITY_STATUS_MS VARCHAR (60 ), ACTIVITY_STATUS_NL VARCHAR (60 ), ACTIVITY_STATUS_NO VARCHAR (60 ), ACTIVITY_STATUS_PL VARCHAR (60 ), ACTIVITY_STATUS_PT VARCHAR (60 ), ACTIVITY_STATUS_RO VARCHAR (60 ), ACTIVITY_STATUS_RU VARCHAR (60 ), ACTIVITY_STATUS_SC VARCHAR (60 ), ACTIVITY_STATUS_SL VARCHAR (60 )NOT NULL, ACTIVITY_STATUS_SV VARCHAR (60 ), ACTIVITY_STATUS_TC VARCHAR (60 ), ACTIVITY_STATUS_TH VARCHAR (60 ), ACTIVITY_STATUS_TR VARCHAR (60 )) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_ACTIVITY_STATUS_DIM describes if a retailer is active or not, in supported languages.''', 
 'pk': '',
 },
 'MRK_ADV_FACT': {
 'rows': 576, 
 'table_ddl':'''CREATE TABLE MRK_ADV_FACT ( ORGANIZATION_KEY INTEGER NOT NULL, BASE_PRODUCT_KEY INTEGER NOT NULL, CURRENT_YEAR INTEGER NOT NULL, ADV_DIRECT_MAIL DECIMAL (19 ,2 ), ADV_EMAIL DECIMAL (19 ,2 ), ADV_MAGAZINE DECIMAL (18 ), ADV_OTHER DECIMAL (19 ,2 ), ADV_RADIO DECIMAL (19 ,2 ), ADV_SPONSORSHIPS DECIMAL (19 ,2 ), ADV_TELEVISION DECIMAL (19 ,2 )) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_ADV_FACT.''', 
 'pk': 'ALTER TABLE MRK_ADV_FACT ADD PRIMARY KEY (ORGANIZATION_KEY , BASE_PRODUCT_KEY , CURRENT_YEAR )',
 },
 'MRK_BUNDLE_GROUP_LOOKUP': {
 'rows': 15, 
 'table_ddl':'''CREATE TABLE MRK_BUNDLE_GROUP_LOOKUP ( BUNDLE_GROUP_CODE INTEGER NOT NULL, BUNDLE_GROUP_EN VARCHAR (120 ), BUNDLE_GROUP_DE VARCHAR (120 ), BUNDLE_GROUP_FR VARCHAR (120 ), BUNDLE_GROUP_JA VARCHAR (120 ), BUNDLE_GROUP_AR VARCHAR (120 ), BUNDLE_GROUP_CS VARCHAR (120 ), BUNDLE_GROUP_DA VARCHAR (120 ), BUNDLE_GROUP_EL VARCHAR (120 ), BUNDLE_GROUP_ES VARCHAR (120 ), BUNDLE_GROUP_FI VARCHAR (120 ), BUNDLE_GROUP_HR VARCHAR (120 )NOT NULL, BUNDLE_GROUP_HU VARCHAR (120 ), BUNDLE_GROUP_ID VARCHAR (120 ), BUNDLE_GROUP_IT VARCHAR (120 ), BUNDLE_GROUP_KK VARCHAR (120 )NOT NULL, BUNDLE_GROUP_KO VARCHAR (120 ), BUNDLE_GROUP_MS VARCHAR (120 ), BUNDLE_GROUP_NL VARCHAR (120 ), BUNDLE_GROUP_NO VARCHAR (120 ), BUNDLE_GROUP_PL VARCHAR (120 ), BUNDLE_GROUP_PT VARCHAR (120 ), BUNDLE_GROUP_RO VARCHAR (120 ), BUNDLE_GROUP_RU VARCHAR (120 ), BUNDLE_GROUP_SC VARCHAR (120 ), BUNDLE_GROUP_SL VARCHAR (120 )NOT NULL, BUNDLE_GROUP_SV VARCHAR (120 ), BUNDLE_GROUP_TC VARCHAR (120 ), BUNDLE_GROUP_TH VARCHAR (120 ), BUNDLE_GROUP_TR VARCHAR (120 )) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_BUNDLE_GROUP_LOOKUP describes bundle names of products packaged together as a sales promotion, in supported languages.''', 
 'pk': 'ALTER TABLE MRK_BUNDLE_GROUP_LOOKUP ADD PRIMARY KEY (BUNDLE_GROUP_CODE )',
 },
'MRK_CAMPAIGN_LOOKUP': {
 'rows': 12, 
 'table_ddl':'''CREATE TABLE MRK_CAMPAIGN_LOOKUP ( CAMPAIGN_CODE INTEGER NOT NULL, CAMPAIGN_NAME_EN VARCHAR (150 ), CAMPAIGN_NAME_DE VARCHAR (150 ), CAMPAIGN_NAME_FR VARCHAR (150 ), CAMPAIGN_NAME_JA VARCHAR (150 ), CAMPAIGN_NAME_AR VARCHAR (150 ), CAMPAIGN_NAME_CS VARCHAR (150 ), CAMPAIGN_NAME_DA VARCHAR (150 ), CAMPAIGN_NAME_EL VARCHAR (150 ), CAMPAIGN_NAME_ES VARCHAR (150 ), CAMPAIGN_NAME_FI VARCHAR (150 ), CAMPAIGN_NAME_HR VARCHAR (150 )NOT NULL, CAMPAIGN_NAME_HU VARCHAR (150 ), CAMPAIGN_NAME_ID VARCHAR (150 ), CAMPAIGN_NAME_IT VARCHAR (150 ), CAMPAIGN_NAME_KK VARCHAR (150 )NOT NULL, CAMPAIGN_NAME_KO VARCHAR (150 ), CAMPAIGN_NAME_MS VARCHAR (150 ), CAMPAIGN_NAME_NL VARCHAR (150 ), CAMPAIGN_NAME_NO VARCHAR (150 ), CAMPAIGN_NAME_PL VARCHAR (150 ), CAMPAIGN_NAME_PT VARCHAR (150 ), CAMPAIGN_NAME_RO VARCHAR (150 ), CAMPAIGN_NAME_RU VARCHAR (150 ), CAMPAIGN_NAME_SC VARCHAR (150 ), CAMPAIGN_NAME_SL VARCHAR (150 )NOT NULL, CAMPAIGN_NAME_SV VARCHAR (150 ), CAMPAIGN_NAME_TC VARCHAR (150 ), CAMPAIGN_NAME_TH VARCHAR (150 ), CAMPAIGN_NAME_TR VARCHAR (150 )) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_CAMPAIGN_LOOKUP describes categories of sales promotions, in supported languages.''', 
 'pk': 'ALTER TABLE MRK_CAMPAIGN_LOOKUP ADD PRIMARY KEY (CAMPAIGN_CODE )',
 },
 'MRK_PRODUCT_SURVEY_DIM': {
 'rows': 7, 
 'table_ddl':'''CREATE TABLE MRK_PRODUCT_SURVEY_DIM ( PRODUCT_SURVEY_KEY INTEGER NOT NULL, PRODUCT_TOPIC_CODE INTEGER , PRODUCT_TOPIC_EN VARCHAR (120 ), PRODUCT_TOPIC_DE VARCHAR (120 ), PRODUCT_TOPIC_FR VARCHAR (120 ), PRODUCT_TOPIC_JA VARCHAR (120 ), PRODUCT_TOPIC_AR VARCHAR (120 ), PRODUCT_TOPIC_CS VARCHAR (120 ), PRODUCT_TOPIC_DA VARCHAR (120 ), PRODUCT_TOPIC_EL VARCHAR (120 ), PRODUCT_TOPIC_ES VARCHAR (120 ), PRODUCT_TOPIC_FI VARCHAR (120 ), PRODUCT_TOPIC_HR VARCHAR (120 )NOT NULL, PRODUCT_TOPIC_HU VARCHAR (120 ), PRODUCT_TOPIC_ID VARCHAR (120 ), PRODUCT_TOPIC_IT VARCHAR (120 ), PRODUCT_TOPIC_KK VARCHAR (120 )NOT NULL, PRODUCT_TOPIC_KO VARCHAR (120 ), PRODUCT_TOPIC_MS VARCHAR (120 ), PRODUCT_TOPIC_NL VARCHAR (120 ), PRODUCT_TOPIC_NO VARCHAR (120 ), PRODUCT_TOPIC_PL VARCHAR (120 ), PRODUCT_TOPIC_PT VARCHAR (120 ), PRODUCT_TOPIC_RO VARCHAR (120 ), PRODUCT_TOPIC_RU VARCHAR (120 ), PRODUCT_TOPIC_SC VARCHAR (120 ), PRODUCT_TOPIC_SL VARCHAR (120 )NOT NULL, PRODUCT_TOPIC_SV VARCHAR (120 ), PRODUCT_TOPIC_TC VARCHAR (120 ), PRODUCT_TOPIC_TH VARCHAR (120 ), PRODUCT_TOPIC_TR VARCHAR (120 )) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_PRODUCT_SURVEY_DIM describes the product survey questions in supported languages.''', 
 'pk': 'ALTER TABLE MRK_PRODUCT_SURVEY_DIM ADD PRIMARY KEY (PRODUCT_SURVEY_KEY )',
 },
 'MRK_PRODUCT_SURVEY_FACT': {
 'rows': 165074, 
 'table_ddl':'''CREATE TABLE MRK_PRODUCT_SURVEY_FACT ( MONTH_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, RTL_COUNTRY_KEY INTEGER NOT NULL, BRANCH_KEY INTEGER NOT NULL, PRODUCT_KEY INTEGER NOT NULL, PRODUCT_SURVEY_KEY INTEGER NOT NULL, PRODUCT_TOPIC_SCORE DOUBLE ) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_PRODUCT_SURVEY_FACT contains consumer satisfaction data for products sold by the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD PRIMARY KEY (MONTH_KEY , ORGANIZATION_KEY , RTL_COUNTRY_KEY , BRANCH_KEY , PRODUCT_KEY , PRODUCT_SURVEY_KEY )',
 },
 'MRK_PROD_SURVEY_TARG_FACT': {
 'rows': 5824, 
 'table_ddl':'''CREATE TABLE MRK_PROD_SURVEY_TARG_FACT ( MONTH_KEY INTEGER NOT NULL, PRODUCT_KEY INTEGER NOT NULL, PRODUCT_SURVEY_KEY INTEGER NOT NULL, PRODUCT_TOPIC_TARGET DOUBLE ) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_PROD_SURVEY_TARG_FACT contains consumer satisfaction target scores for products sold by the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE MRK_PROD_SURVEY_TARG_FACT ADD PRIMARY KEY (MONTH_KEY , PRODUCT_KEY , PRODUCT_SURVEY_KEY )',
 },
 'MRK_PROMOTION_DIM': {
 'rows': 112, 
 'table_ddl':'''CREATE TABLE MRK_PROMOTION_DIM ( PROMOTION_KEY INTEGER NOT NULL, PROMOTION_CODE INTEGER NOT NULL, CAMPAIGN_CODE INTEGER NOT NULL, BUNDLE_GROUP_CODE INTEGER , PROMOTION_NAME_EN VARCHAR (180 ), PROMOTION_NAME_DE VARCHAR (180 ), PROMOTION_NAME_FR VARCHAR (180 ), PROMOTION_NAME_JA VARCHAR (180 ), PROMOTION_NAME_AR VARCHAR (180 ), PROMOTION_NAME_CS VARCHAR (180 ), PROMOTION_NAME_DA VARCHAR (180 ), PROMOTION_NAME_EL VARCHAR (180 ), PROMOTION_NAME_ES VARCHAR (180 ), PROMOTION_NAME_FI VARCHAR (180 ), PROMOTION_NAME_HR VARCHAR (180 )NOT NULL, PROMOTION_NAME_HU VARCHAR (180 ), PROMOTION_NAME_ID VARCHAR (180 ), PROMOTION_NAME_IT VARCHAR (180 ), PROMOTION_NAME_KK VARCHAR (180 )NOT NULL, PROMOTION_NAME_KO VARCHAR (180 ), PROMOTION_NAME_MS VARCHAR (180 ), PROMOTION_NAME_NL VARCHAR (180 ), PROMOTION_NAME_NO VARCHAR (180 ), PROMOTION_NAME_PL VARCHAR (180 ), PROMOTION_NAME_PT VARCHAR (180 ), PROMOTION_NAME_RO VARCHAR (180 ), PROMOTION_NAME_RU VARCHAR (180 ), PROMOTION_NAME_SC VARCHAR (180 ), PROMOTION_NAME_SL VARCHAR (180 )NOT NULL, PROMOTION_NAME_SV VARCHAR (180 ), PROMOTION_NAME_TC VARCHAR (180 ), PROMOTION_NAME_TH VARCHAR (180 ), PROMOTION_NAME_TR VARCHAR (180 )) DISTRIBUTE ON RANDOM BACKUP DATA OFF ;''', 
 'comment': '''Warehouse table MRK_PROMOTION_DIM describes sales campaign and promotion names in supported languages.''', 
 'pk': 'ALTER TABLE MRK_PROMOTION_DIM ADD PRIMARY KEY (PROMOTION_KEY )',
 },
 'MRK_PROMOTION_FACT': {
 'rows': 11034, 
 'table_ddl':'''CREATE TABLE MRK_PROMOTION_FACT ( ORGANIZATION_KEY INTEGER NOT NULL, ORDER_DAY_KEY INTEGER NOT NULL, RTL_COUNTRY_KEY INTEGER NOT NULL, EMPLOYEE_KEY INTEGER NOT NULL, RETAILER_KEY INTEGER NOT NULL, PRODUCT_KEY INTEGER NOT NULL, PROMOTION_KEY INTEGER NOT NULL, SALES_ORDER_KEY INTEGER NOT NULL, QUANTITY SMALLINT , UNIT_COST DECIMAL (19 ,2 ), UNIT_PRICE DECIMAL (19 ,2 ), UNIT_SALE_PRICE DECIMAL (19 ,2 ), GROSS_MARGIN DOUBLE , SALE_TOTAL DECIMAL (19 ,2 ), GROSS_PROFIT DECIMAL (19 ,2 )) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_PROMOTION_FACT contains results of sales promotions done by the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE MRK_PROMOTION_FACT ADD PRIMARY KEY (ORGANIZATION_KEY , ORDER_DAY_KEY , RTL_COUNTRY_KEY , EMPLOYEE_KEY , RETAILER_KEY , PRODUCT_KEY , PROMOTION_KEY , SALES_ORDER_KEY )',
 },
 'MRK_PROMOTION_PLAN_FACT': {
 'rows': 8652, 
 'table_ddl':'''CREATE TABLE MRK_PROMOTION_PLAN_FACT ( MONTH_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, BRANCH_KEY INTEGER NOT NULL, RTL_COUNTRY_KEY INTEGER NOT NULL, PRODUCT_KEY INTEGER NOT NULL, PROMOTION_KEY INTEGER NOT NULL, UNIT_COST DECIMAL (19 ,2 ), UNIT_PRICE DECIMAL (19 ,2 ), UNIT_SALE_PRICE DECIMAL (19 ,2 ), PROMOTION_PLAN_QUANTITY INTEGER NOT NULL, PROMOTION_PLAN_REVENUE DECIMAL (19 ,2 )) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_PROMOTION_PLAN_FACT contains planning data used in sales promotions.''', 
 'pk': 'ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD PRIMARY KEY (MONTH_KEY , ORGANIZATION_KEY , BRANCH_KEY , RTL_COUNTRY_KEY , PRODUCT_KEY , PROMOTION_KEY )',
 },
 'MRK_RTL_SURVEY_DIM': {
 'rows': 9, 
 'table_ddl':'''CREATE TABLE MRK_RTL_SURVEY_DIM ( RETAILER_SURVEY_KEY INTEGER NOT NULL, RETAILER_TOPIC_CODE INTEGER , RETAILER_TOPIC_EN VARCHAR (150 ), RETAILER_TOPIC_DE VARCHAR (150 ), RETAILER_TOPIC_FR VARCHAR (150 ), RETAILER_TOPIC_JA VARCHAR (150 ), RETAILER_TOPIC_AR VARCHAR (150 ), RETAILER_TOPIC_CS VARCHAR (150 ), RETAILER_TOPIC_DA VARCHAR (150 ), RETAILER_TOPIC_EL VARCHAR (150 ), RETAILER_TOPIC_ES VARCHAR (150 ), RETAILER_TOPIC_FI VARCHAR (150 ), RETAILER_TOPIC_HR VARCHAR (150 )NOT NULL, RETAILER_TOPIC_HU VARCHAR (150 ), RETAILER_TOPIC_ID VARCHAR (150 ), RETAILER_TOPIC_IT VARCHAR (150 ), RETAILER_TOPIC_KK VARCHAR (150 )NOT NULL, RETAILER_TOPIC_KO VARCHAR (150 ), RETAILER_TOPIC_MS VARCHAR (150 ), RETAILER_TOPIC_NL VARCHAR (150 ), RETAILER_TOPIC_NO VARCHAR (150 ), RETAILER_TOPIC_PL VARCHAR (150 ), RETAILER_TOPIC_PT VARCHAR (150 ), RETAILER_TOPIC_RO VARCHAR (150 ), RETAILER_TOPIC_RU VARCHAR (150 ), RETAILER_TOPIC_SC VARCHAR (150 ), RETAILER_TOPIC_SL VARCHAR (150 )NOT NULL, RETAILER_TOPIC_SV VARCHAR (150 ), RETAILER_TOPIC_TC VARCHAR (150 ), RETAILER_TOPIC_TH VARCHAR (150 ), RETAILER_TOPIC_TR VARCHAR (150 )) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_RTL_SURVEY_DIM describes the retailer survey questions in supported languages.''', 
 'pk': 'ALTER TABLE MRK_RTL_SURVEY_DIM ADD PRIMARY KEY (RETAILER_SURVEY_KEY )',
 },
 'MRK_RTL_SURVEY_FACT': {
 'rows': 22508, 
 'table_ddl':'''CREATE TABLE MRK_RTL_SURVEY_FACT ( MONTH_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, BRANCH_KEY INTEGER NOT NULL, RTL_COUNTRY_KEY INTEGER NOT NULL, RETAILER_KEY INTEGER NOT NULL, RETAILER_SURVEY_KEY INTEGER NOT NULL, RETAILER_TOPIC_SCORE DOUBLE ) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_RTL_SURVEY_FACT contains retailer satisfaction data of companies that buy product from the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE MRK_RTL_SURVEY_FACT ADD PRIMARY KEY (MONTH_KEY , ORGANIZATION_KEY , BRANCH_KEY , RTL_COUNTRY_KEY , RETAILER_KEY , RETAILER_SURVEY_KEY )',
 },
 'MRK_RTL_SURVEY_TARG_FACT': {
  'rows': 64, 
 'table_ddl':'''CREATE TABLE MRK_RTL_SURVEY_TARG_FACT ( RETAILER_SURVEY_KEY INTEGER NOT NULL, MONTH_KEY INTEGER NOT NULL, RETAILER_TOPIC_WEIGHT INTEGER , RETAILER_TOPIC_TARGET DOUBLE ) DISTRIBUTE ON RANDOM BACKUP DATA OFF;''', 
 'comment': '''Warehouse table MRK_RTL_SURVEY_TARG_FACT contains retailer satisfaction target scores for the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE MRK_RTL_SURVEY_TARG_FACT ADD PRIMARY KEY (RETAILER_SURVEY_KEY , MONTH_KEY )',
 },
 'SLS_ORDER_METHOD_DIM': {
 'rows': 7, 
 'table_ddl':'''CREATE TABLE SLS_ORDER_METHOD_DIM ( ORDER_METHOD_KEY INTEGER NOT NULL, ORDER_METHOD_CODE INTEGER NOT NULL, ORDER_METHOD_EN VARCHAR (90 )NOT NULL, ORDER_METHOD_DE VARCHAR (90 )NOT NULL, ORDER_METHOD_FR VARCHAR (90 )NOT NULL, ORDER_METHOD_JA VARCHAR (90 )NOT NULL, ORDER_METHOD_AR VARCHAR (90 )NOT NULL, ORDER_METHOD_CS VARCHAR (90 )NOT NULL, ORDER_METHOD_DA VARCHAR (90 )NOT NULL, ORDER_METHOD_EL VARCHAR (90 )NOT NULL, ORDER_METHOD_ES VARCHAR (90 )NOT NULL, ORDER_METHOD_FI VARCHAR (90 )NOT NULL, ORDER_METHOD_HR VARCHAR (90 )NOT NULL, ORDER_METHOD_HU VARCHAR (90 )NOT NULL, ORDER_METHOD_ID VARCHAR (90 )NOT NULL, ORDER_METHOD_IT VARCHAR (90 )NOT NULL, ORDER_METHOD_KK VARCHAR (90 )NOT NULL, ORDER_METHOD_KO VARCHAR (90 )NOT NULL, ORDER_METHOD_MS VARCHAR (90 )NOT NULL, ORDER_METHOD_NL VARCHAR (90 )NOT NULL, ORDER_METHOD_NO VARCHAR (90 )NOT NULL, ORDER_METHOD_PL VARCHAR (90 )NOT NULL, ORDER_METHOD_PT VARCHAR (90 )NOT NULL, ORDER_METHOD_RO VARCHAR (90 )NOT NULL, ORDER_METHOD_RU VARCHAR (90 )NOT NULL, ORDER_METHOD_SC VARCHAR (90 )NOT NULL, ORDER_METHOD_SL VARCHAR (90 )NOT NULL, ORDER_METHOD_SV VARCHAR (90 )NOT NULL, ORDER_METHOD_TC VARCHAR (90 )NOT NULL, ORDER_METHOD_TH VARCHAR (90 )NOT NULL, ORDER_METHOD_TR VARCHAR (90 )NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_ORDER_METHOD_DIM describes order methods such as fax or web, in supported languages.''', 
 'pk': 'ALTER TABLE SLS_ORDER_METHOD_DIM ADD PRIMARY KEY (ORDER_METHOD_KEY )',
 },
 'SLS_PRODUCT_BRAND_LOOKUP': {
 'rows': 28, 
 'table_ddl':'''CREATE TABLE SLS_PRODUCT_BRAND_LOOKUP ( PRODUCT_BRAND_CODE INTEGER NOT NULL, PRODUCT_BRAND_EN VARCHAR (90 ), PRODUCT_BRAND_DE VARCHAR (90 ), PRODUCT_BRAND_FR VARCHAR (90 ), PRODUCT_BRAND_JA VARCHAR (90 ), PRODUCT_BRAND_AR VARCHAR (90 ), PRODUCT_BRAND_CS VARCHAR (90 ), PRODUCT_BRAND_DA VARCHAR (90 ), PRODUCT_BRAND_EL VARCHAR (90 ), PRODUCT_BRAND_ES VARCHAR (90 ), PRODUCT_BRAND_FI VARCHAR (90 ), PRODUCT_BRAND_HR VARCHAR (90 )NOT NULL, PRODUCT_BRAND_HU VARCHAR (90 ), PRODUCT_BRAND_ID VARCHAR (90 ), PRODUCT_BRAND_IT VARCHAR (90 ), PRODUCT_BRAND_KK VARCHAR (90 )NOT NULL, PRODUCT_BRAND_KO VARCHAR (90 ), PRODUCT_BRAND_MS VARCHAR (90 ), PRODUCT_BRAND_NL VARCHAR (90 ), PRODUCT_BRAND_NO VARCHAR (90 ), PRODUCT_BRAND_PL VARCHAR (90 ), PRODUCT_BRAND_PT VARCHAR (90 ), PRODUCT_BRAND_RO VARCHAR (90 ), PRODUCT_BRAND_RU VARCHAR (90 ), PRODUCT_BRAND_SC VARCHAR (90 ), PRODUCT_BRAND_SL VARCHAR (90 )NOT NULL, PRODUCT_BRAND_SV VARCHAR (90 ), PRODUCT_BRAND_TC VARCHAR (90 ), PRODUCT_BRAND_TH VARCHAR (90 ), PRODUCT_BRAND_TR VARCHAR (90 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_PRODUCT_BRAND_LOOKUP describes the product brand names in supported languages.''', 
 'pk': 'ALTER TABLE SLS_PRODUCT_BRAND_LOOKUP ADD PRIMARY KEY (PRODUCT_BRAND_CODE )',
 },
 'SLS_PRODUCT_COLOR_LOOKUP': {
 'rows': 27, 
 'table_ddl':'''CREATE TABLE SLS_PRODUCT_COLOR_LOOKUP ( PRODUCT_COLOR_CODE INTEGER NOT NULL, PRODUCT_COLOR_EN VARCHAR (90 ), PRODUCT_COLOR_DE VARCHAR (90 ), PRODUCT_COLOR_FR VARCHAR (90 ), PRODUCT_COLOR_JA VARCHAR (90 ), PRODUCT_COLOR_AR VARCHAR (90 ), PRODUCT_COLOR_CS VARCHAR (90 ), PRODUCT_COLOR_DA VARCHAR (90 ), PRODUCT_COLOR_EL VARCHAR (90 ), PRODUCT_COLOR_ES VARCHAR (90 ), PRODUCT_COLOR_FI VARCHAR (90 ), PRODUCT_COLOR_HR VARCHAR (90 )NOT NULL, PRODUCT_COLOR_HU VARCHAR (90 ), PRODUCT_COLOR_ID VARCHAR (90 ), PRODUCT_COLOR_IT VARCHAR (90 ), PRODUCT_COLOR_KK VARCHAR (90 )NOT NULL, PRODUCT_COLOR_KO VARCHAR (90 ), PRODUCT_COLOR_MS VARCHAR (90 ), PRODUCT_COLOR_NL VARCHAR (90 ), PRODUCT_COLOR_NO VARCHAR (90 ), PRODUCT_COLOR_PL VARCHAR (90 ), PRODUCT_COLOR_PT VARCHAR (90 ), PRODUCT_COLOR_RO VARCHAR (90 ), PRODUCT_COLOR_RU VARCHAR (90 ), PRODUCT_COLOR_SC VARCHAR (90 ), PRODUCT_COLOR_SL VARCHAR (90 )NOT NULL, PRODUCT_COLOR_SV VARCHAR (90 ), PRODUCT_COLOR_TC VARCHAR (90 ), PRODUCT_COLOR_TH VARCHAR (90 ), PRODUCT_COLOR_TR VARCHAR (90 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_PRODUCT_COLOR_LOOKUP describes the product colors in supported languages.''', 
 'pk': 'ALTER TABLE SLS_PRODUCT_COLOR_LOOKUP ADD PRIMARY KEY (PRODUCT_COLOR_CODE )',
 },
 'SLS_PRODUCT_DIM': {
 'rows': 274, 
  'table_ddl':'''CREATE TABLE SLS_PRODUCT_DIM ( PRODUCT_KEY INTEGER NOT NULL, PRODUCT_LINE_CODE INTEGER NOT NULL, PRODUCT_TYPE_KEY INTEGER NOT NULL, PRODUCT_TYPE_CODE INTEGER NOT NULL, PRODUCT_NUMBER INTEGER NOT NULL, BASE_PRODUCT_KEY INTEGER , BASE_PRODUCT_NUMBER INTEGER , PRODUCT_COLOR_CODE INTEGER , PRODUCT_SIZE_CODE INTEGER , PRODUCT_BRAND_KEY INTEGER , PRODUCT_BRAND_CODE INTEGER , PRODUCT_IMAGE VARCHAR (60 ), INTRODUCTION_DATE TIMESTAMP NOT NULL, DISCONTINUED_DATE TIMESTAMP ) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_PRODUCT_DIM contains the product hiearchy of line, type, and product, and an alternate hierarchy of product brand and product.''', 
 'pk': 'ALTER TABLE SLS_PRODUCT_DIM ADD PRIMARY KEY (PRODUCT_KEY )',
 },
 'SLS_PRODUCT_LINE_LOOKUP': {
 'rows': 5, 
 'table_ddl':'''CREATE TABLE SLS_PRODUCT_LINE_LOOKUP ( PRODUCT_LINE_CODE INTEGER NOT NULL, PRODUCT_LINE_EN VARCHAR (90 )NOT NULL, PRODUCT_LINE_DE VARCHAR (90 ), PRODUCT_LINE_FR VARCHAR (90 ), PRODUCT_LINE_JA VARCHAR (90 ), PRODUCT_LINE_AR VARCHAR (90 ), PRODUCT_LINE_CS VARCHAR (90 ), PRODUCT_LINE_DA VARCHAR (90 ), PRODUCT_LINE_EL VARCHAR (90 ), PRODUCT_LINE_ES VARCHAR (90 ), PRODUCT_LINE_FI VARCHAR (90 ), PRODUCT_LINE_HR VARCHAR (90 )NOT NULL, PRODUCT_LINE_HU VARCHAR (90 ), PRODUCT_LINE_ID VARCHAR (90 ), PRODUCT_LINE_IT VARCHAR (90 ), PRODUCT_LINE_KK VARCHAR (90 )NOT NULL, PRODUCT_LINE_KO VARCHAR (90 ), PRODUCT_LINE_MS VARCHAR (90 ), PRODUCT_LINE_NL VARCHAR (90 ), PRODUCT_LINE_NO VARCHAR (90 ), PRODUCT_LINE_PL VARCHAR (90 ), PRODUCT_LINE_PT VARCHAR (90 ), PRODUCT_LINE_RO VARCHAR (90 ), PRODUCT_LINE_RU VARCHAR (90 ), PRODUCT_LINE_SC VARCHAR (90 ), PRODUCT_LINE_SL VARCHAR (90 )NOT NULL, PRODUCT_LINE_SV VARCHAR (90 ), PRODUCT_LINE_TC VARCHAR (90 ), PRODUCT_LINE_TH VARCHAR (90 ), PRODUCT_LINE_TR VARCHAR (90 )) DISTRIBUTE ON RANDOM ;''', 
  'comment': '''Warehouse table SLS_PRODUCT_LINE_LOOKUP describes general product categories in supported languages.''', 
 'pk': 'ALTER TABLE SLS_PRODUCT_LINE_LOOKUP ADD PRIMARY KEY (PRODUCT_LINE_CODE )',
 },
 'SLS_PRODUCT_LOOKUP': {
 'rows': 7946, 
 'table_ddl':'''CREATE TABLE SLS_PRODUCT_LOOKUP ( PRODUCT_NUMBER INTEGER NOT NULL, PRODUCT_LANGUAGE VARCHAR (30 )NOT NULL, PRODUCT_NAME VARCHAR (150 ), PRODUCT_DESCRIPTION VARCHAR (765 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_PRODUCT_LOOKUP describribes product names and descriptions in supported languages.''', 
 'pk': 'ALTER TABLE SLS_PRODUCT_LOOKUP ADD PRIMARY KEY (PRODUCT_NUMBER , PRODUCT_LANGUAGE )',
 },
  'SLS_PRODUCT_SIZE_LOOKUP': {
 'rows': 55, 
 'table_ddl':'''CREATE TABLE SLS_PRODUCT_SIZE_LOOKUP ( PRODUCT_SIZE_CODE INTEGER NOT NULL, PRODUCT_SIZE_EN VARCHAR (90 ), PRODUCT_SIZE_DE VARCHAR (90 ), PRODUCT_SIZE_FR VARCHAR (90 ), PRODUCT_SIZE_JA VARCHAR (90 ), PRODUCT_SIZE_AR VARCHAR (90 ), PRODUCT_SIZE_CS VARCHAR (90 ), PRODUCT_SIZE_DA VARCHAR (90 ), PRODUCT_SIZE_EL VARCHAR (90 ), PRODUCT_SIZE_ES VARCHAR (90 ), PRODUCT_SIZE_FI VARCHAR (90 ), PRODUCT_SIZE_HR VARCHAR (90 )NOT NULL, PRODUCT_SIZE_HU VARCHAR (90 ), PRODUCT_SIZE_ID VARCHAR (90 ), PRODUCT_SIZE_IT VARCHAR (90 ), PRODUCT_SIZE_KK VARCHAR (90 )NOT NULL, PRODUCT_SIZE_KO VARCHAR (90 ), PRODUCT_SIZE_MS VARCHAR (90 ), PRODUCT_SIZE_NL VARCHAR (90 ), PRODUCT_SIZE_NO VARCHAR (90 ), PRODUCT_SIZE_PL VARCHAR (90 ), PRODUCT_SIZE_PT VARCHAR (90 ), PRODUCT_SIZE_RO VARCHAR (90 ), PRODUCT_SIZE_RU VARCHAR (90 ), PRODUCT_SIZE_SC VARCHAR (90 ), PRODUCT_SIZE_SL VARCHAR (90 )NOT NULL, PRODUCT_SIZE_SV VARCHAR (90 ), PRODUCT_SIZE_TC VARCHAR (90 ), PRODUCT_SIZE_TH VARCHAR (90 ), PRODUCT_SIZE_TR VARCHAR (90 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_PRODUCT_SIZE_LOOKUP describes product sizes in supported languages.''', 
 'pk': 'ALTER TABLE SLS_PRODUCT_SIZE_LOOKUP ADD PRIMARY KEY (PRODUCT_SIZE_CODE )',
 },
 'SLS_PRODUCT_TYPE_LOOKUP': {
 'rows': 21, 
 'table_ddl':'''CREATE TABLE SLS_PRODUCT_TYPE_LOOKUP ( PRODUCT_TYPE_CODE INTEGER NOT NULL, PRODUCT_TYPE_EN VARCHAR (120 )NOT NULL, PRODUCT_TYPE_DE VARCHAR (120 ), PRODUCT_TYPE_FR VARCHAR (120 ), PRODUCT_TYPE_JA VARCHAR (120 ), PRODUCT_TYPE_AR VARCHAR (120 ), PRODUCT_TYPE_CS VARCHAR (120 ), PRODUCT_TYPE_DA VARCHAR (120 ), PRODUCT_TYPE_EL VARCHAR (120 ), PRODUCT_TYPE_ES VARCHAR (120 ), PRODUCT_TYPE_FI VARCHAR (120 ), PRODUCT_TYPE_HR VARCHAR (120 )NOT NULL, PRODUCT_TYPE_HU VARCHAR (120 ), PRODUCT_TYPE_ID VARCHAR (120 ), PRODUCT_TYPE_IT VARCHAR (120 ), PRODUCT_TYPE_KK VARCHAR (120 )NOT NULL, PRODUCT_TYPE_KO VARCHAR (120 ), PRODUCT_TYPE_MS VARCHAR (120 ), PRODUCT_TYPE_NL VARCHAR (120 ), PRODUCT_TYPE_NO VARCHAR (120 ), PRODUCT_TYPE_PL VARCHAR (120 ), PRODUCT_TYPE_PT VARCHAR (120 ), PRODUCT_TYPE_RO VARCHAR (120 ), PRODUCT_TYPE_RU VARCHAR (120 ), PRODUCT_TYPE_SC VARCHAR (120 ), PRODUCT_TYPE_SL VARCHAR (120 )NOT NULL, PRODUCT_TYPE_SV VARCHAR (120 ), PRODUCT_TYPE_TC VARCHAR (120 ), PRODUCT_TYPE_TH VARCHAR (120 ), PRODUCT_TYPE_TR VARCHAR (120 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_PRODUCT_TYPE_LOOKUP describes subcategories under product line, in supported languages.''', 
 'pk': 'ALTER TABLE SLS_PRODUCT_TYPE_LOOKUP ADD PRIMARY KEY (PRODUCT_TYPE_CODE )',
 },
 'SLS_RTL_DIM': {
 'rows': 847, 
 'table_ddl':'''CREATE TABLE SLS_RTL_DIM ( RETAILER_SITE_KEY INTEGER NOT NULL, RETAILER_SITE_CODE INTEGER NOT NULL, RETAILER_KEY INTEGER NOT NULL, RETAILER_CODE INTEGER NOT NULL, RETAILER_NAME VARCHAR (150 )NOT NULL, RETAILER_NAME_MB VARCHAR (150 ), RETAILER_CONTACT_CODE INTEGER NOT NULL, CONTACT_FIRST_NAME VARCHAR (75 )NOT NULL, CONTACT_LAST_NAME VARCHAR (90 )NOT NULL, GENDER_CODE SMALLINT NOT NULL, CONTACT_PHONE_NUMBER VARCHAR (60 )NOT NULL, CONTACT_EXTENSION VARCHAR (18 ), CONTACT_FAX VARCHAR (60 ), CONTACT_EMAIL VARCHAR (120 ), RTL_ADDRESS1 VARCHAR (120 )NOT NULL, RTL_ADDRESS2 VARCHAR (120 ), RTL_CITY VARCHAR (90 )NOT NULL, RTL_PROV_STATE VARCHAR (90 ), CONTACT_FIRST_NAME_MB VARCHAR (75 ), CONTACT_LAST_NAME_MB VARCHAR (90 ), RTL_ADDRESS1_MB VARCHAR (120 ), RTL_ADDRESS2_MB VARCHAR (120 ), RTL_CITY_MB VARCHAR (90 ), RTL_PROV_STATE_MB VARCHAR (90 ), RTL_POSTAL_ZONE VARCHAR (30 ), RTL_COUNTRY_CODE INTEGER NOT NULL, RETAILER_START_DATE TIMESTAMP , RETAILER_TYPE_CODE INTEGER NOT NULL, RETAILER_TYPE_EN VARCHAR (105 )NOT NULL, RETAILER_TYPE_DE VARCHAR (105 ), RETAILER_TYPE_FR VARCHAR (105 ), RETAILER_TYPE_JA VARCHAR (105 ), RETAILER_TYPE_AR VARCHAR (105 ), RETAILER_TYPE_CS VARCHAR (105 ), RETAILER_TYPE_DA VARCHAR (105 ), RETAILER_TYPE_EL VARCHAR (105 ), RETAILER_TYPE_ES VARCHAR (105 ), RETAILER_TYPE_FI VARCHAR (105 ), RETAILER_TYPE_HR VARCHAR (105 )NOT NULL, RETAILER_TYPE_HU VARCHAR (105 ), RETAILER_TYPE_ID VARCHAR (105 ), RETAILER_TYPE_IT VARCHAR (105 ), RETAILER_TYPE_KK VARCHAR (105 )NOT NULL, RETAILER_TYPE_KO VARCHAR (105 ), RETAILER_TYPE_MS VARCHAR (105 ), RETAILER_TYPE_NL VARCHAR (105 ), RETAILER_TYPE_NO VARCHAR (105 ), RETAILER_TYPE_PL VARCHAR (105 ), RETAILER_TYPE_PT VARCHAR (105 ), RETAILER_TYPE_RO VARCHAR (105 ), RETAILER_TYPE_RU VARCHAR (105 ), RETAILER_TYPE_SC VARCHAR (105 ), RETAILER_TYPE_SL VARCHAR (105 )NOT NULL, RETAILER_TYPE_SV VARCHAR (105 ), RETAILER_TYPE_TC VARCHAR (105 ), RETAILER_TYPE_TH VARCHAR (105 ), RETAILER_TYPE_TR VARCHAR (105 ), JOB_POSITION_EN VARCHAR (120 )NOT NULL, JOB_POSITION_DE VARCHAR (120 )NOT NULL, JOB_POSITION_FR VARCHAR (120 )NOT NULL, JOB_POSITION_JA VARCHAR (120 )NOT NULL, JOB_POSITION_AR VARCHAR (120 ), JOB_POSITION_CS VARCHAR (120 )NOT NULL, JOB_POSITION_DA VARCHAR (120 )NOT NULL, JOB_POSITION_EL VARCHAR (120 )NOT NULL, JOB_POSITION_ES VARCHAR (120 )NOT NULL, JOB_POSITION_FI VARCHAR (120 )NOT NULL, JOB_POSITION_HR VARCHAR (120 )NOT NULL, JOB_POSITION_HU VARCHAR (120 )NOT NULL, JOB_POSITION_ID VARCHAR (120 ), JOB_POSITION_IT VARCHAR (120 )NOT NULL, JOB_POSITION_KK VARCHAR (120 )NOT NULL, JOB_POSITION_KO VARCHAR (120 )NOT NULL, JOB_POSITION_MS VARCHAR (120 ), JOB_POSITION_NL VARCHAR (120 )NOT NULL, JOB_POSITION_NO VARCHAR (120 )NOT NULL, JOB_POSITION_PL VARCHAR (120 )NOT NULL, JOB_POSITION_PT VARCHAR (120 )NOT NULL, JOB_POSITION_RO VARCHAR (120 ), JOB_POSITION_RU VARCHAR (120 )NOT NULL, JOB_POSITION_SC VARCHAR (120 )NOT NULL, JOB_POSITION_SL VARCHAR (120 )NOT NULL, JOB_POSITION_SV VARCHAR (120 )NOT NULL,
 JOB_POSITION_TC VARCHAR (120 )NOT NULL, JOB_POSITION_TH VARCHAR (120 )NOT NULL, JOB_POSITION_TR VARCHAR (120 ), RTL_LAT VARCHAR (36 ), RTL_LON VARCHAR (36 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_RTL_DIM describes the retailer hierarchy, including the names and addresses of companies that purchase wholesale from the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE SLS_RTL_DIM ADD PRIMARY KEY (RETAILER_SITE_KEY )',
 },
 'SLS_SALES_FACT': {
 'rows': 446023, 
 'table_ddl':'''CREATE TABLE SLS_SALES_FACT ( ORDER_DAY_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, EMPLOYEE_KEY INTEGER NOT NULL, RETAILER_KEY INTEGER NOT NULL, RETAILER_SITE_KEY INTEGER NOT NULL, PRODUCT_KEY INTEGER NOT NULL, PROMOTION_KEY INTEGER NOT NULL, ORDER_METHOD_KEY INTEGER NOT NULL, SALES_ORDER_KEY INTEGER NOT NULL, SHIP_DAY_KEY INTEGER NOT NULL, CLOSE_DAY_KEY INTEGER NOT NULL, QUANTITY BIGINT NOT NULL, UNIT_COST DECIMAL (19 ,2 ), UNIT_PRICE DECIMAL (19 ,2 ), UNIT_SALE_PRICE DECIMAL (19 ,2 ), GROSS_MARGIN DOUBLE NOT NULL, SALE_TOTAL DECIMAL (19 ,2 ), GROSS_PROFIT DECIMAL (19 ,2 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_SALES_FACT contains transaction and order information on sales made to retailers that buy wholesale from the Great Outdoors Company.''', 
 'pk': 'ALTER TABLE SLS_SALES_FACT ADD PRIMARY KEY (ORDER_DAY_KEY , ORGANIZATION_KEY , EMPLOYEE_KEY , RETAILER_KEY , RETAILER_SITE_KEY , PRODUCT_KEY , PROMOTION_KEY , ORDER_METHOD_KEY )',
 },
 'SLS_SALES_ORDER_DIM': {
 'rows': 446023, 
 'table_ddl':'''CREATE TABLE SLS_SALES_ORDER_DIM ( SALES_ORDER_KEY INTEGER NOT NULL, ORDER_DETAIL_CODE INTEGER NOT NULL, ORDER_NUMBER INTEGER NOT NULL, WAREHOUSE_BRANCH_CODE INTEGER ) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_SALES_ORDER_DIM contains dimension-type order information correlating to sales fact data.''', 
 'pk': 'ALTER TABLE SLS_SALES_ORDER_DIM ADD PRIMARY KEY (SALES_ORDER_KEY )',
 },
 'SLS_SALES_TARG_FACT': {
 'rows': 233625, 
 'table_ddl':'''CREATE TABLE SLS_SALES_TARG_FACT ( MONTH_KEY INTEGER NOT NULL, ORGANIZATION_KEY INTEGER NOT NULL, RTL_COUNTRY_KEY INTEGER NOT NULL, EMPLOYEE_KEY INTEGER NOT NULL, RETAILER_KEY INTEGER NOT NULL, PRODUCT_TYPE_KEY INTEGER NOT NULL, PRODUCT_BRAND_KEY INTEGER NOT NULL, SALES_TARGET DECIMAL (19 ,2 )) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table SLS_SALES_TARG_FACT contains sales targets for employees of the Great Outdoors Company who sell to retailers.''', 
 'pk': 'ALTER TABLE SLS_SALES_TARG_FACT ADD PRIMARY KEY (MONTH_KEY , ORGANIZATION_KEY , RTL_COUNTRY_KEY , EMPLOYEE_KEY , RETAILER_KEY , PRODUCT_TYPE_KEY , PRODUCT_BRAND_KEY )',
 },
 'XGOREVDW': {
 'rows': 58, 
 'table_ddl':'''CREATE TABLE XGOREVDW ( GOREV_ID INTEGER NOT NULL, GO_OBJ_NAME VARCHAR (210 )NOT NULL, GO_OBJ_TYPE VARCHAR (150 )NOT NULL, GO_OBJ_PARENT_NAME VARCHAR (210 )NOT NULL, GO_OBJ_PARENT_TYPE VARCHAR (150 )NOT NULL, GO_DATA_OR_METADATA VARCHAR (150 )NOT NULL, GO_RELEASE VARCHAR (150 ), GO_DB_VERSION VARCHAR (30 ), GO_CHANGE_DATE TIMESTAMP NOT NULL, GO_CHANGE_DESCRIPTION VARCHAR (3000 )NOT NULL) DISTRIBUTE ON RANDOM ;''', 
 'comment': '''Warehouse table xgorevdw contains release and revision information on the tables and data belonging to the gosalesdw schema.''', 
 'pk': 'ALTER TABLE XGOREVDW ADD PRIMARY KEY (GOREV_ID )',
 }
}
fk_dict = {
 'DIST_INVENTORY_FACT': {
 'DIST_INVENTORY_FACT_FK_1': '''ALTER TABLE DIST_INVENTORY_FACT ADD CONSTRAINT DIST_INVENTORY_FACT_FK_1 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'DIST_INVENTORY_FACT_FK_2': '''ALTER TABLE DIST_INVENTORY_FACT ADD CONSTRAINT DIST_INVENTORY_FACT_FK_2 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'DIST_INVENTORY_FACT_FK_3': '''ALTER TABLE DIST_INVENTORY_FACT ADD CONSTRAINT DIST_INVENTORY_FACT_FK_3 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);'''
 },
 'DIST_PRODUCT_FORECAST_FACT': {
 'DIST_PRODUCT_FORECAST_FACT_FK_1': '''ALTER TABLE DIST_PRODUCT_FORECAST_FACT ADD CONSTRAINT DIST_PRODUCT_FORECAST_FACT_FK_1 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'DIST_PRODUCT_FORECAST_FACT_FK_2': '''ALTER TABLE DIST_PRODUCT_FORECAST_FACT ADD CONSTRAINT DIST_PRODUCT_FORECAST_FACT_FK_2 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);'''
 },
 'DIST_RETURNED_ITEMS_FACT': {
 'DIST_RETURNED_ITEMS_FACT_FK_1': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_2': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_3': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_3 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_4': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_5': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_5 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_6': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_6 FOREIGN KEY ( SALES_ORDER_KEY ) REFERENCES SLS_SALES_ORDER_DIM( SALES_ORDER_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_7': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_7 FOREIGN KEY ( ORDER_METHOD_KEY ) REFERENCES SLS_ORDER_METHOD_DIM( ORDER_METHOD_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_8': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_8 FOREIGN KEY ( RETURN_REASON_KEY ) REFERENCES DIST_RETURN_REASON_DIM( RETURN_REASON_KEY);''',
 'DIST_RETURNED_ITEMS_FACT_FK_9': '''ALTER TABLE DIST_RETURNED_ITEMS_FACT ADD CONSTRAINT DIST_RETURNED_ITEMS_FACT_FK_9 FOREIGN KEY ( RETAILER_SITE_KEY ) REFERENCES SLS_RTL_DIM( RETAILER_SITE_KEY);'''
 },
# 'DIST_RETURN_REASON_DIM': { },
 'EMP_EMPLOYEE_DIM': {
 'EMP_EMPLOYEE_DIM_FK_1': '''ALTER TABLE EMP_EMPLOYEE_DIM ADD CONSTRAINT EMP_EMPLOYEE_DIM_FK_1 FOREIGN KEY ( POSITION_CODE ) REFERENCES EMP_POSITION_LOOKUP( POSITION_CODE);''',
 'EMP_EMPLOYEE_DIM_FK_2': '''ALTER TABLE EMP_EMPLOYEE_DIM ADD CONSTRAINT EMP_EMPLOYEE_DIM_FK_2 FOREIGN KEY ( TERMINATION_CODE ) REFERENCES EMP_TERMINATION_LOOKUP( TERMINATION_CODE);''',
 'EMP_EMPLOYEE_DIM_FK_3': '''ALTER TABLE EMP_EMPLOYEE_DIM ADD CONSTRAINT EMP_EMPLOYEE_DIM_FK_3 FOREIGN KEY ( GENDER_CODE ) REFERENCES GO_GENDER_LOOKUP( GENDER_CODE);'''
 },
 'EMP_EXPENSE_FACT': {
 'EMP_EXPENSE_FACT_FK_1': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_EXPENSE_FACT_FK_2': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'EMP_EXPENSE_FACT_FK_3': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_3 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_EXPENSE_FACT_FK_4': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_4 FOREIGN KEY ( ACCOUNT_KEY ) REFERENCES FIN_ACCOUNT_DIM( ACCOUNT_KEY);''',
 'EMP_EXPENSE_FACT_FK_5': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_5 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_EXPENSE_FACT_FK_6': '''ALTER TABLE EMP_EXPENSE_FACT ADD CONSTRAINT EMP_EXPENSE_FACT_FK_6 FOREIGN KEY ( EXPENSE_TYPE_KEY ) REFERENCES EMP_EXPENSE_TYPE_DIM( EXPENSE_TYPE_KEY);'''
 },
 'EMP_EXPENSE_PLAN_FACT': {
 'EMP_EXPENSE_PLAN_FACT_FK_1': '''ALTER TABLE EMP_EXPENSE_PLAN_FACT ADD CONSTRAINT EMP_EXPENSE_PLAN_FACT_FK_1 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_EXPENSE_PLAN_FACT_FK_2': '''ALTER TABLE EMP_EXPENSE_PLAN_FACT ADD CONSTRAINT EMP_EXPENSE_PLAN_FACT_FK_2 FOREIGN KEY ( EXPENSE_TYPE_KEY ) REFERENCES EMP_EXPENSE_TYPE_DIM( EXPENSE_TYPE_KEY);''',
 },
 'EMP_EXPENSE_TYPE_DIM': {
 'EMP_EXPENSE_TYPE_DIM_FK_1': '''ALTER TABLE EMP_EXPENSE_TYPE_DIM ADD CONSTRAINT EMP_EXPENSE_TYPE_DIM_FK_1 FOREIGN KEY ( EXPENSE_UNIT_CODE ) REFERENCES EMP_EXPENSE_UNIT_LOOKUP( EXPENSE_UNIT_CODE);'''
 },
# 'EMP_EXPENSE_UNIT_LOOKUP': { },
 'EMP_POSITION_DIM': {
 'EMP_POSITION_DIM_FK_1': '''ALTER TABLE EMP_POSITION_DIM ADD CONSTRAINT EMP_POSITION_DIM_FK_1 FOREIGN KEY ( POSITION_CODE ) REFERENCES EMP_POSITION_LOOKUP( POSITION_CODE);'''
 },
# 'EMP_POSITION_LOOKUP': { },
 'EMP_POSITION_SUMMARY_FACT': {
 'EMP_POSITION_SUMMARY_FACT_FK_1': '''ALTER TABLE EMP_POSITION_SUMMARY_FACT ADD CONSTRAINT EMP_POSITION_SUMMARY_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_POSITION_SUMMARY_FACT_FK_2': '''ALTER TABLE EMP_POSITION_SUMMARY_FACT ADD CONSTRAINT EMP_POSITION_SUMMARY_FACT_FK_2 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_POSITION_SUMMARY_FACT_FK_3': '''ALTER TABLE EMP_POSITION_SUMMARY_FACT ADD CONSTRAINT EMP_POSITION_SUMMARY_FACT_FK_3 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);'''
 },
# 'EMP_RANKING_DIM': { },
 'EMP_RANKING_FACT': {
 'EMP_RANKING_FACT_FK_1': '''ALTER TABLE EMP_RANKING_FACT ADD CONSTRAINT EMP_RANKING_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_RANKING_FACT_FK_2': '''ALTER TABLE EMP_RANKING_FACT ADD CONSTRAINT EMP_RANKING_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'EMP_RANKING_FACT_FK_3': '''ALTER TABLE EMP_RANKING_FACT ADD CONSTRAINT EMP_RANKING_FACT_FK_3 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_RANKING_FACT_FK_4': '''ALTER TABLE EMP_RANKING_FACT ADD CONSTRAINT EMP_RANKING_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_RANKING_FACT_FK_5': '''ALTER TABLE EMP_RANKING_FACT ADD CONSTRAINT EMP_RANKING_FACT_FK_5 FOREIGN KEY ( EMPLOYEE_RANKING_KEY ) REFERENCES EMP_RANKING_DIM( EMPLOYEE_RANKING_KEY);'''
 },
# 'EMP_RECRUITMENT_DIM': { },
 'EMP_RECRUITMENT_FACT': {
 'EMP_RECRUITMENT_FACT_FK_1': '''ALTER TABLE EMP_RECRUITMENT_FACT ADD CONSTRAINT EMP_RECRUITMENT_FACT_FK_1 FOREIGN KEY ( POST_DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_RECRUITMENT_FACT_FK_2': '''ALTER TABLE EMP_RECRUITMENT_FACT ADD CONSTRAINT EMP_RECRUITMENT_FACT_FK_2 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_RECRUITMENT_FACT_FK_3': '''ALTER TABLE EMP_RECRUITMENT_FACT ADD CONSTRAINT EMP_RECRUITMENT_FACT_FK_3 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'EMP_RECRUITMENT_FACT_FK_4': '''ALTER TABLE EMP_RECRUITMENT_FACT ADD CONSTRAINT EMP_RECRUITMENT_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_RECRUITMENT_FACT_FK_5': '''ALTER TABLE EMP_RECRUITMENT_FACT ADD CONSTRAINT EMP_RECRUITMENT_FACT_FK_5 FOREIGN KEY ( RECRUITMENT_MEDIUM_KEY ) REFERENCES EMP_RECRUITMENT_DIM( RECRUITMENT_MEDIUM_KEY);'''
 },
 'EMP_RECRUITMENT_LEAD_FACT': {
 'EMP_RECRUITMENT_LEAD_FACT_FK_1': '''ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD CONSTRAINT EMP_RECRUITMENT_LEAD_FACT_FK_1 FOREIGN KEY ( RECRUITMENT_MEDIUM_KEY ) REFERENCES EMP_RECRUITMENT_DIM( RECRUITMENT_MEDIUM_KEY);''',
 'EMP_RECRUITMENT_LEAD_FACT_FK_2': '''ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD CONSTRAINT EMP_RECRUITMENT_LEAD_FACT_FK_2 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_RECRUITMENT_LEAD_FACT_FK_3': '''ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD CONSTRAINT EMP_RECRUITMENT_LEAD_FACT_FK_3 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'EMP_RECRUITMENT_LEAD_FACT_FK_4': '''ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD CONSTRAINT EMP_RECRUITMENT_LEAD_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_RECRUITMENT_LEAD_FACT_FK_5': '''ALTER TABLE EMP_RECRUITMENT_LEAD_FACT ADD CONSTRAINT EMP_RECRUITMENT_LEAD_FACT_FK_5 FOREIGN KEY ( POST_DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);'''
 },
 'EMP_SUCCESSION_FACT': {
 'EMP_SUCCESSION_FACT_FK_1': '''ALTER TABLE EMP_SUCCESSION_FACT ADD CONSTRAINT EMP_SUCCESSION_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_SUCCESSION_FACT_FK_2': '''ALTER TABLE EMP_SUCCESSION_FACT ADD CONSTRAINT EMP_SUCCESSION_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'EMP_SUCCESSION_FACT_FK_3': '''ALTER TABLE EMP_SUCCESSION_FACT ADD CONSTRAINT EMP_SUCCESSION_FACT_FK_3 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_SUCCESSION_FACT_FK_4': '''ALTER TABLE EMP_SUCCESSION_FACT ADD CONSTRAINT EMP_SUCCESSION_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_SUCCESSION_FACT_FK_5': '''ALTER TABLE EMP_SUCCESSION_FACT ADD CONSTRAINT EMP_SUCCESSION_FACT_FK_5 FOREIGN KEY ( SUCCESSOR_STATUS_KEY ) REFERENCES EMP_SUCCESSION_STATUS_DIM( SUCCESSOR_STATUS_KEY);'''
 },
 'EMP_SUCCESSION_STATUS_DIM': {
 },
 'EMP_SUMMARY_FACT': {
 'EMP_SUMMARY_FACT_FK_1': '''ALTER TABLE EMP_SUMMARY_FACT ADD CONSTRAINT EMP_SUMMARY_FACT_FK_1 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);''',
 'EMP_SUMMARY_FACT_FK_2': '''ALTER TABLE EMP_SUMMARY_FACT ADD CONSTRAINT EMP_SUMMARY_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'EMP_SUMMARY_FACT_FK_3': '''ALTER TABLE EMP_SUMMARY_FACT ADD CONSTRAINT EMP_SUMMARY_FACT_FK_3 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_SUMMARY_FACT_FK_4': '''ALTER TABLE EMP_SUMMARY_FACT ADD CONSTRAINT EMP_SUMMARY_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);'''
 },
 'EMP_SURVEY_FACT': {
 'EMP_SURVEY_FACT_FK_1': '''ALTER TABLE EMP_SURVEY_FACT ADD CONSTRAINT EMP_SURVEY_FACT_FK_1 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
 'EMP_SURVEY_FACT_FK_2': '''ALTER TABLE EMP_SURVEY_FACT ADD CONSTRAINT EMP_SURVEY_FACT_FK_2 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'EMP_SURVEY_FACT_FK_3': '''ALTER TABLE EMP_SURVEY_FACT ADD CONSTRAINT EMP_SURVEY_FACT_FK_3 FOREIGN KEY ( EMPLOYEE_TOPIC_KEY ) REFERENCES EMP_SURVEY_TOPIC_DIM( EMPLOYEE_TOPIC_KEY);''',
 'EMP_SURVEY_FACT_FK_4': '''ALTER TABLE EMP_SURVEY_FACT ADD CONSTRAINT EMP_SURVEY_FACT_FK_4 FOREIGN KEY ( SATISFACTION_KEY ) REFERENCES GO_SATISFACTION_DIM( SATISFACTION_KEY);''',
 'EMP_SURVEY_FACT_FK_5': '''ALTER TABLE EMP_SURVEY_FACT ADD CONSTRAINT EMP_SURVEY_FACT_FK_5 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);'''
 },
 'EMP_SURVEY_TARG_FACT': {
 'EMP_SURVEY_TARG_FACT_FK_1': '''ALTER TABLE EMP_SURVEY_TARG_FACT ADD CONSTRAINT EMP_SURVEY_TARG_FACT_FK_1 FOREIGN KEY ( EMPLOYEE_TOPIC_KEY ) REFERENCES EMP_SURVEY_TOPIC_DIM( EMPLOYEE_TOPIC_KEY);''',
 },
# 'EMP_SURVEY_TOPIC_DIM': { },
# 'EMP_TERMINATION_LOOKUP': { },
# 'EMP_TRAINING_DIM': { },
  'EMP_TRAINING_FACT': {
  'EMP_TRAINING_FACT_FK_1': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_1 FOREIGN KEY ( EXPENSE_TYPE_KEY ) REFERENCES EMP_EXPENSE_TYPE_DIM( EXPENSE_TYPE_KEY);''',
  'EMP_TRAINING_FACT_FK_2': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
  'EMP_TRAINING_FACT_FK_3': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_3 FOREIGN KEY ( POSITION_KEY ) REFERENCES EMP_POSITION_DIM( POSITION_KEY);''',
  'EMP_TRAINING_FACT_FK_4': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_4 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
  'EMP_TRAINING_FACT_FK_5': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_5 FOREIGN KEY ( TRAINING_KEY ) REFERENCES EMP_TRAINING_DIM( TRAINING_KEY);''',
  'EMP_TRAINING_FACT_FK_6': '''ALTER TABLE EMP_TRAINING_FACT ADD CONSTRAINT EMP_TRAINING_FACT_FK_6 FOREIGN KEY ( DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);'''
 },
# 'FIN_ACCOUNT_CLASS_LOOKUP': { },
 'FIN_ACCOUNT_DIM': {
 'FIN_ACCOUNT_DIM_FK_1': '''ALTER TABLE FIN_ACCOUNT_DIM ADD CONSTRAINT FIN_ACCOUNT_DIM_FK_1 FOREIGN KEY ( ACCOUNT_CLASS_CODE ) REFERENCES FIN_ACCOUNT_CLASS_LOOKUP( ACCOUNT_CLASS_CODE);''',
 'FIN_ACCOUNT_DIM_FK_2': '''ALTER TABLE FIN_ACCOUNT_DIM ADD CONSTRAINT FIN_ACCOUNT_DIM_FK_2 FOREIGN KEY ( ACCOUNT_TYPE_CODE ) REFERENCES FIN_ACCOUNT_TYPE_LOOKUP( ACCOUNT_TYPE_CODE);''',
 'FIN_ACCOUNT_DIM_FK_3': '''ALTER TABLE FIN_ACCOUNT_DIM ADD CONSTRAINT FIN_ACCOUNT_DIM_FK_3 FOREIGN KEY ( ACCOUNT_CODE ) REFERENCES FIN_ACCOUNT_NAME_LOOKUP( ACCOUNT_CODE);'''
 },
# 'FIN_ACCOUNT_NAME_LOOKUP': { },
# 'FIN_ACCOUNT_TYPE_LOOKUP': { },
# 'FIN_FINANCE_FACT': { },
# 'FIN_SUBM_CURRENCY_LOOKUP': { },
 'FIN_SUBM_DIM': {
 'FIN_SUBM_DIM_FK_1': '''ALTER TABLE FIN_SUBM_DIM ADD CONSTRAINT FIN_SUBM_DIM_FK_1 FOREIGN KEY ( SUBMISSION_CURRENCY_CODE ) REFERENCES FIN_SUBM_CURRENCY_LOOKUP( SUBMISSION_CURRENCY_CODE);''',
 'FIN_SUBM_DIM_FK_2': '''ALTER TABLE FIN_SUBM_DIM ADD CONSTRAINT FIN_SUBM_DIM_FK_2 FOREIGN KEY ( SUBMISSION_TYPE_CODE ) REFERENCES FIN_SUBM_TYPE_LOOKUP( SUBMISSION_TYPE_CODE);'''
 },
# 'FIN_SUBM_TYPE_LOOKUP': { },
# 'GO_BRANCH_DIM': { },
# 'GO_GENDER_LOOKUP': { },
 'GO_ORG_DIM': {
 'GO_ORG_DIM_FK_1': '''ALTER TABLE GO_ORG_DIM ADD CONSTRAINT GO_ORG_DIM_FK_1 FOREIGN KEY ( ORGANIZATION_CODE ) REFERENCES GO_ORG_NAME_LOOKUP( ORGANIZATION_CODE);'''
 },
# 'GO_ORG_NAME_LOOKUP': { },
# 'GO_REGION_DIM': { },
# 'GO_SATISFACTION_DIM': { },
 'GO_TIME_DIM': {
 'GO_TIME_DIM_FK_1': '''ALTER TABLE GO_TIME_DIM ADD CONSTRAINT GO_TIME_DIM_FK_1 FOREIGN KEY ( QUARTER_KEY ) REFERENCES GO_TIME_QUARTER_LOOKUP( QUARTER_KEY);'''
 },
# 'GO_TIME_QUARTER_LOOKUP': { },
# 'MRK_ACTIVITY_STATUS_DIM': { },
# 'MRK_ADV_FACT': { },
# 'MRK_BUNDLE_GROUP_LOOKUP': { },
# 'MRK_CAMPAIGN_LOOKUP': { },
# 'MRK_PRODUCT_SURVEY_DIM': { },
 'MRK_PRODUCT_SURVEY_FACT': {
 'MRK_PRODUCT_SURVEY_FACT_FK_1': '''ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD CONSTRAINT MRK_PRODUCT_SURVEY_FACT_FK_1 FOREIGN KEY ( PRODUCT_SURVEY_KEY ) REFERENCES MRK_PRODUCT_SURVEY_DIM( PRODUCT_SURVEY_KEY);''',
 'MRK_PRODUCT_SURVEY_FACT_FK_2': '''ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD CONSTRAINT MRK_PRODUCT_SURVEY_FACT_FK_2 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'MRK_PRODUCT_SURVEY_FACT_FK_3': '''ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD CONSTRAINT MRK_PRODUCT_SURVEY_FACT_FK_3 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'MRK_PRODUCT_SURVEY_FACT_FK_4': '''ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD CONSTRAINT MRK_PRODUCT_SURVEY_FACT_FK_4 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);''',
 'MRK_PRODUCT_SURVEY_FACT_FK_5': '''ALTER TABLE MRK_PRODUCT_SURVEY_FACT ADD CONSTRAINT MRK_PRODUCT_SURVEY_FACT_FK_5 FOREIGN KEY ( RTL_COUNTRY_KEY ) REFERENCES GO_REGION_DIM( COUNTRY_KEY);'''
 },
 'MRK_PROD_SURVEY_TARG_FACT': {
 'MRK_PROD_SURVEY_TARG_FACT_FK_1': '''ALTER TABLE MRK_PROD_SURVEY_TARG_FACT ADD CONSTRAINT MRK_PROD_SURVEY_TARG_FACT_FK_1 FOREIGN KEY ( PRODUCT_SURVEY_KEY ) REFERENCES MRK_PRODUCT_SURVEY_DIM( PRODUCT_SURVEY_KEY);''',
 'MRK_PROD_SURVEY_TARG_FACT_FK_2': '''ALTER TABLE MRK_PROD_SURVEY_TARG_FACT ADD CONSTRAINT MRK_PROD_SURVEY_TARG_FACT_FK_2 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);'''
 },
 'MRK_PROMOTION_DIM': {
 'MRK_PROMOTION_DIM_FK_1': '''ALTER TABLE MRK_PROMOTION_DIM ADD CONSTRAINT MRK_PROMOTION_DIM_FK_1 FOREIGN KEY ( BUNDLE_GROUP_CODE ) REFERENCES MRK_BUNDLE_GROUP_LOOKUP( BUNDLE_GROUP_CODE);''',
 'MRK_PROMOTION_DIM_FK_2': '''ALTER TABLE MRK_PROMOTION_DIM ADD CONSTRAINT MRK_PROMOTION_DIM_FK_2 FOREIGN KEY ( CAMPAIGN_CODE ) REFERENCES MRK_CAMPAIGN_LOOKUP( CAMPAIGN_CODE);'''
 },
 'MRK_PROMOTION_FACT': {
 'MRK_PROMOTION_FACT_FK_1': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_1 FOREIGN KEY ( PROMOTION_KEY ) REFERENCES MRK_PROMOTION_DIM( PROMOTION_KEY);''',
 'MRK_PROMOTION_FACT_FK_2': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_2 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'MRK_PROMOTION_FACT_FK_3': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_3 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'MRK_PROMOTION_FACT_FK_4': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_4 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);''',
 'MRK_PROMOTION_FACT_FK_5': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_5 FOREIGN KEY ( SALES_ORDER_KEY ) REFERENCES SLS_SALES_ORDER_DIM( SALES_ORDER_KEY);''',
 'MRK_PROMOTION_FACT_FK_6': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_6 FOREIGN KEY ( RTL_COUNTRY_KEY ) REFERENCES GO_REGION_DIM( COUNTRY_KEY);''',
 'MRK_PROMOTION_FACT_FK_7': '''ALTER TABLE MRK_PROMOTION_FACT ADD CONSTRAINT MRK_PROMOTION_FACT_FK_7 FOREIGN KEY ( ORDER_DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);'''
 },
 'MRK_PROMOTION_PLAN_FACT': {
 'MRK_PROMOTION_PLAN_FACT_FK_1': '''ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD CONSTRAINT MRK_PROMOTION_PLAN_FACT_FK_1 FOREIGN KEY ( PROMOTION_KEY ) REFERENCES MRK_PROMOTION_DIM( PROMOTION_KEY);''',
 'MRK_PROMOTION_PLAN_FACT_FK_2': '''ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD CONSTRAINT MRK_PROMOTION_PLAN_FACT_FK_2 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'MRK_PROMOTION_PLAN_FACT_FK_3': '''ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD CONSTRAINT MRK_PROMOTION_PLAN_FACT_FK_3 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'MRK_PROMOTION_PLAN_FACT_FK_4': '''ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD CONSTRAINT MRK_PROMOTION_PLAN_FACT_FK_4 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);''',
 'MRK_PROMOTION_PLAN_FACT_FK_5': '''ALTER TABLE MRK_PROMOTION_PLAN_FACT ADD CONSTRAINT MRK_PROMOTION_PLAN_FACT_FK_5 FOREIGN KEY ( RTL_COUNTRY_KEY ) REFERENCES GO_REGION_DIM( COUNTRY_KEY);'''
 },
# 'MRK_RTL_SURVEY_DIM': { },
 'MRK_RTL_SURVEY_FACT': {
 'MRK_RTL_SURVEY_FACT_FK_1': '''ALTER TABLE MRK_RTL_SURVEY_FACT ADD CONSTRAINT MRK_RTL_SURVEY_FACT_FK_1 FOREIGN KEY ( RETAILER_SURVEY_KEY ) REFERENCES MRK_RTL_SURVEY_DIM( RETAILER_SURVEY_KEY);''',
 'MRK_RTL_SURVEY_FACT_FK_2': '''ALTER TABLE MRK_RTL_SURVEY_FACT ADD CONSTRAINT MRK_RTL_SURVEY_FACT_FK_2 FOREIGN KEY ( BRANCH_KEY ) REFERENCES GO_BRANCH_DIM( BRANCH_KEY);''',
 'MRK_RTL_SURVEY_FACT_FK_3': '''ALTER TABLE MRK_RTL_SURVEY_FACT ADD CONSTRAINT MRK_RTL_SURVEY_FACT_FK_3 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'MRK_RTL_SURVEY_FACT_FK_4': '''ALTER TABLE MRK_RTL_SURVEY_FACT ADD CONSTRAINT MRK_RTL_SURVEY_FACT_FK_4 FOREIGN KEY ( RTL_COUNTRY_KEY ) REFERENCES GO_REGION_DIM( COUNTRY_KEY);'''
 },
 'MRK_RTL_SURVEY_TARG_FACT': {
 'MRK_RTL_SURVEY_TARG_FACT_FK_1': '''ALTER TABLE MRK_RTL_SURVEY_TARG_FACT ADD CONSTRAINT MRK_RTL_SURVEY_TARG_FACT_FK_1 FOREIGN KEY ( RETAILER_SURVEY_KEY ) REFERENCES MRK_RTL_SURVEY_DIM( RETAILER_SURVEY_KEY);'''
 },
# 'SLS_ORDER_METHOD_DIM': { },
# 'SLS_PRODUCT_BRAND_LOOKUP': { },
# 'SLS_PRODUCT_COLOR_LOOKUP': { },
 'SLS_PRODUCT_DIM': {
 'SLS_PRODUCT_DIM_FK_1': '''ALTER TABLE SLS_PRODUCT_DIM ADD CONSTRAINT SLS_PRODUCT_DIM_FK_1 FOREIGN KEY ( PRODUCT_BRAND_CODE ) REFERENCES SLS_PRODUCT_BRAND_LOOKUP( PRODUCT_BRAND_CODE);''',
 'SLS_PRODUCT_DIM_FK_2': '''ALTER TABLE SLS_PRODUCT_DIM ADD CONSTRAINT SLS_PRODUCT_DIM_FK_2 FOREIGN KEY ( PRODUCT_COLOR_CODE ) REFERENCES SLS_PRODUCT_COLOR_LOOKUP( PRODUCT_COLOR_CODE);''',
 'SLS_PRODUCT_DIM_FK_3': '''ALTER TABLE SLS_PRODUCT_DIM ADD CONSTRAINT SLS_PRODUCT_DIM_FK_3 FOREIGN KEY ( PRODUCT_LINE_CODE ) REFERENCES SLS_PRODUCT_LINE_LOOKUP( PRODUCT_LINE_CODE);''',
 'SLS_PRODUCT_DIM_FK_4': '''ALTER TABLE SLS_PRODUCT_DIM ADD CONSTRAINT SLS_PRODUCT_DIM_FK_4 FOREIGN KEY ( PRODUCT_SIZE_CODE ) REFERENCES SLS_PRODUCT_SIZE_LOOKUP( PRODUCT_SIZE_CODE);''',
 'SLS_PRODUCT_DIM_FK_5': '''ALTER TABLE SLS_PRODUCT_DIM ADD CONSTRAINT SLS_PRODUCT_DIM_FK_5 FOREIGN KEY ( PRODUCT_TYPE_CODE ) REFERENCES SLS_PRODUCT_TYPE_LOOKUP( PRODUCT_TYPE_CODE);'''
 },
# 'SLS_PRODUCT_LINE_LOOKUP': { },
# 'SLS_PRODUCT_LOOKUP': { },
# 'SLS_PRODUCT_SIZE_LOOKUP': { },
# 'SLS_PRODUCT_TYPE_LOOKUP': { },
# 'SLS_RTL_DIM': { },
 'SLS_SALES_FACT': {
 'SLS_SALES_FACT_FK_1': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_1 FOREIGN KEY ( PROMOTION_KEY ) REFERENCES MRK_PROMOTION_DIM( PROMOTION_KEY);''',
 'SLS_SALES_FACT_FK_2': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_2 FOREIGN KEY ( ORDER_METHOD_KEY ) REFERENCES SLS_ORDER_METHOD_DIM( ORDER_METHOD_KEY);''',
 'SLS_SALES_FACT_FK_3': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_3 FOREIGN KEY ( RETAILER_SITE_KEY ) REFERENCES SLS_RTL_DIM( RETAILER_SITE_KEY);''',
 'SLS_SALES_FACT_FK_4': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_4 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'SLS_SALES_FACT_FK_5': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_5 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'SLS_SALES_FACT_FK_6': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_6 FOREIGN KEY ( PRODUCT_KEY ) REFERENCES SLS_PRODUCT_DIM( PRODUCT_KEY);''',
 'SLS_SALES_FACT_FK_7': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_7 FOREIGN KEY ( SALES_ORDER_KEY ) REFERENCES SLS_SALES_ORDER_DIM( SALES_ORDER_KEY);''',
 'SLS_SALES_FACT_FK_8': '''ALTER TABLE SLS_SALES_FACT ADD CONSTRAINT SLS_SALES_FACT_FK_8 FOREIGN KEY ( ORDER_DAY_KEY ) REFERENCES GO_TIME_DIM( DAY_KEY);'''
 },
# 'SLS_SALES_ORDER_DIM': { },
 'SLS_SALES_TARG_FACT': {
 'SLS_SALES_TARG_FACT_FK_1': '''ALTER TABLE SLS_SALES_TARG_FACT ADD CONSTRAINT SLS_SALES_TARG_FACT_FK_1 FOREIGN KEY ( EMPLOYEE_KEY ) REFERENCES EMP_EMPLOYEE_DIM( EMPLOYEE_KEY);''',
 'SLS_SALES_TARG_FACT_FK_2': '''ALTER TABLE SLS_SALES_TARG_FACT ADD CONSTRAINT SLS_SALES_TARG_FACT_FK_2 FOREIGN KEY ( ORGANIZATION_KEY ) REFERENCES GO_ORG_DIM( ORGANIZATION_KEY);''',
 'SLS_SALES_TARG_FACT_FK_3': '''ALTER TABLE SLS_SALES_TARG_FACT ADD CONSTRAINT SLS_SALES_TARG_FACT_FK_3 FOREIGN KEY ( RTL_COUNTRY_KEY ) REFERENCES GO_REGION_DIM( COUNTRY_KEY);'''
 },
# 'XGOREVDW': { }
}
views_dict = {
 'VIEW_ACCOUNT_DIM': {
 'view_ddl':'''CREATE VIEW VIEW_ACCOUNT_DIM AS SELECT FIN_ACCOUNT_DIM.ACCOUNT_KEY, FIN_ACCOUNT_DIM.ACCOUNT_LEVEL, FIN_ACCOUNT_DIM.ACCOUNT_PARENT, FIN_ACCOUNT_DIM.DEBIT_OR_CREDIT, FIN_ACCOUNT_DIM.ACCOUNT_TYPE_CODE, FIN_ACCOUNT_DIM.ACCOUNT_CLASS_CODE, FIN_ACCOUNT_DIM.ACCOUNT_CODE1, FIN_ACCOUNT_DIM.ACCOUNT_CODE2, FIN_ACCOUNT_DIM.ACCOUNT_CODE3, FIN_ACCOUNT_DIM.ACCOUNT_CODE4, FIN_ACCOUNT_DIM.ACCOUNT_CODE5, FIN_ACCOUNT_DIM.ACCOUNT_CODE6, FIN_ACCOUNT_DIM.ACCOUNT_CODE7, FIN_ACCOUNT_DIM.ACCOUNT_CODE8, FIN_ACCOUNT_DIM.ACCOUNT_CODE9, FIN_ACCOUNT_DIM.ACCOUNT_CODE10, FIN_ACCOUNT_DIM.ACCOUNT_CODE11, FIN_ACCOUNT_DIM.ACCOUNT_CODE12, FIN_ACCOUNT_DIM.ACCOUNT_CODE13, FIN_ACCOUNT_DIM.ACCOUNT_CODE14, FIN_ACCOUNT_DIM.ACCOUNT_CODE15, FIN_ACCOUNT_DIM.ACCOUNT_CODE16, FIN_ACCOUNT_DIM.ACCOUNT_CODE, FIN_ACCOUNT_DIM.AGGREGATION_SIGN, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_EN, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_EN, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_EN, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_CS, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_CS, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_CS, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_DE, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_DE, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_DE, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_ES, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_ES, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_ES, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_FR, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_FR, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_FR, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_HU, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_HU, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_HU, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_IT, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_IT, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_IT, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_JA, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_JA, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_JA, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_KO, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_KO, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_KO, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_PL, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_PL, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_PL, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_PT, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_PT, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_PT, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_RO, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_RO, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_RO, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_RU, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_RU, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_RU, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_SC, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_SC, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_SC, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_TC, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_TC, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_TC, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_TR, FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_TR, FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_TR 
  FROM FIN_ACCOUNT_DIM INNER JOIN FIN_ACCOUNT_CLASS_LOOKUP ON FIN_ACCOUNT_DIM.ACCOUNT_CLASS_CODE = FIN_ACCOUNT_CLASS_LOOKUP.ACCOUNT_CLASS_CODE INNER JOIN FIN_ACCOUNT_NAME_LOOKUP ON FIN_ACCOUNT_DIM.ACCOUNT_CODE = FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_CODE INNER JOIN FIN_ACCOUNT_TYPE_LOOKUP ON FIN_ACCOUNT_DIM.ACCOUNT_TYPE_CODE = FIN_ACCOUNT_TYPE_LOOKUP.ACCOUNT_TYPE_CODE'''
 },
 'VIEW_BALANCED_ORG_DIM': {
 'view_ddl':'''CREATE VIEW VIEW_BALANCED_ORG_DIM AS SELECT GO_ORG_DIM_2.ORGANIZATION_KEY, GO_ORG_DIM_1.ORGANIZATION_PARENT AS ORGANIZATION_CODE1, GO_ORG_DIM_2.ORGANIZATION_PARENT AS ORGANIZATION_CODE2, GO_ORG_DIM_2.ORGANIZATION_CODE 
  FROM GO_ORG_DIM GO_ORG_DIM_2 INNER JOIN GO_ORG_DIM GO_ORG_DIM_1 ON GO_ORG_DIM_2.ORGANIZATION_PARENT = GO_ORG_DIM_1.ORGANIZATION_CODE WHERE (GO_ORG_DIM_2.ORGANIZATION_CODE BETWEEN N'006' AND N'8820')'''
 },
 'VIEW_ORG_DIM': {
 'view_ddl':'''CREATE VIEW VIEW_ORG_DIM AS SELECT GO_ORG_DIM.ORGANIZATION_KEY, GO_ORG_DIM.ORGANIZATION_CODE1, GO_ORG_DIM.ORGANIZATION_CODE2, GO_ORG_DIM.ORGANIZATION_CODE3, GO_ORG_DIM.ORGANIZATION_CODE4, GO_ORG_DIM.ORGANIZATION_CODE, SUBSTR(GO_ORG_DIM.ORGANIZATION_PARENT, 1, 5) AS ORGANIZATION_PARENT, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_EN, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_CS, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_DE, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_ES, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_FR, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_HU, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_IT, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_JA, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_KO, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_PL, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_PT, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_RO, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_RU, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_SC, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_TC, GO_ORG_NAME_LOOKUP.ORGANIZATION_NAME_TR, GO_ORG_DIM.ORGANIZATION_LEVEL 
  FROM GO_ORG_DIM INNER JOIN GO_ORG_NAME_LOOKUP ON GO_ORG_DIM.ORGANIZATION_CODE = GO_ORG_NAME_LOOKUP.ORGANIZATION_CODE'''
 },
 'VIEW_PRODUCT_NAME': {
  'view_ddl':'''CREATE VIEW VIEW_PRODUCT_NAME AS SELECT PRODUCT_NUMBER, MIN(CASE PRODUCT_LANGUAGE WHEN N'EN' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_EN, MIN(CASE PRODUCT_LANGUAGE WHEN N'CS' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_CS, MIN(CASE PRODUCT_LANGUAGE WHEN N'DE' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_DE, MIN(CASE PRODUCT_LANGUAGE WHEN N'ES' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_ES, MIN(CASE PRODUCT_LANGUAGE WHEN N'FR' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_FR, MIN(CASE PRODUCT_LANGUAGE WHEN N'HU' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_HU, MIN(CASE PRODUCT_LANGUAGE WHEN N'IT' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_IT, MIN(CASE PRODUCT_LANGUAGE WHEN N'JA' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_JA, MIN(CASE PRODUCT_LANGUAGE WHEN N'KO' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_KO, MIN(CASE PRODUCT_LANGUAGE WHEN N'PL' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_PL, MIN(CASE PRODUCT_LANGUAGE WHEN N'PT' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_PT, MIN(CASE PRODUCT_LANGUAGE WHEN N'RO' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_RO, MIN(CASE PRODUCT_LANGUAGE WHEN N'RU' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_RU, MIN(CASE PRODUCT_LANGUAGE WHEN N'SC' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_SC, MIN(CASE PRODUCT_LANGUAGE WHEN N'TC' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_TC, MIN(CASE PRODUCT_LANGUAGE WHEN N'TR' THEN PRODUCT_NAME ELSE NULL END) AS PRODUCT_TR 
  FROM SLS_PRODUCT_LOOKUP GROUP BY PRODUCT_NUMBER'''
 },
 'VIEW_STATEMENT_FACT': {
 'view_ddl':'''CREATE VIEW VIEW_STATEMENT_FACT AS SELECT FIN_FINANCE_FACT.SUBMISSION_KEY, FIN_SUBM_DIM.SUBMISSION_NAME_EN, FIN_FINANCE_FACT.ORGANIZATION_KEY, GO_ORG_DIM.ORGANIZATION_PARENT, T1.MONTH_KEY, T1.MONTH_EN, FIN_ACCOUNT_DIM.ACCOUNT_KEY, FIN_ACCOUNT_DIM.ACCOUNT_PARENT, FIN_ACCOUNT_DIM.DEBIT_OR_CREDIT, FIN_ACCOUNT_DIM.ACCOUNT_CODE, FIN_ACCOUNT_DIM.AGGREGATION_SIGN, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_EN, CASE FIN_ACCOUNT_DIM.DEBIT_OR_CREDIT WHEN N'C' THEN FIN_FINANCE_FACT.AMOUNT_MONTH * - 1 ELSE FIN_FINANCE_FACT.AMOUNT_MONTH * 1 END AS STMT_MONTH, CASE FIN_ACCOUNT_DIM.DEBIT_OR_CREDIT WHEN N'C' THEN FIN_FINANCE_FACT.AMOUNT_YEAR_TO_DATE * - 1 ELSE FIN_FINANCE_FACT.AMOUNT_YEAR_TO_DATE * 1 END AS STMT_YEAR, FIN_FINANCE_FACT.AMOUNT_YEAR_TO_DATE, FIN_FINANCE_FACT.AMOUNT_MONTH, FIN_SUBM_DIM.SUBMISSION_NAME_CS, FIN_SUBM_DIM.SUBMISSION_NAME_DE, FIN_SUBM_DIM.SUBMISSION_NAME_ES, FIN_SUBM_DIM.SUBMISSION_NAME_FR, FIN_SUBM_DIM.SUBMISSION_NAME_HU, FIN_SUBM_DIM.SUBMISSION_NAME_IT, FIN_SUBM_DIM.SUBMISSION_NAME_JA, FIN_SUBM_DIM.SUBMISSION_NAME_KO, FIN_SUBM_DIM.SUBMISSION_NAME_PL, FIN_SUBM_DIM.SUBMISSION_NAME_PT, FIN_SUBM_DIM.SUBMISSION_NAME_RO, FIN_SUBM_DIM.SUBMISSION_NAME_RU, FIN_SUBM_DIM.SUBMISSION_NAME_SC, FIN_SUBM_DIM.SUBMISSION_NAME_TC, FIN_SUBM_DIM.SUBMISSION_NAME_TR, T1.MONTH_CS, T1.MONTH_DE, T1.MONTH_ES, T1.MONTH_FR, T1.MONTH_HU, T1.MONTH_IT, T1.MONTH_JA, T1.MONTH_KO, T1.MONTH_PL, T1.MONTH_PT, T1.MONTH_RO, T1.MONTH_RU, T1.MONTH_SC, T1.MONTH_TC, T1.MONTH_TR, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_CS, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_DE, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_ES, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_FR, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_HU, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_IT, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_JA, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_KO, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_PL, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_PT, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_RO, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_RU, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_SC, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_TC, FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_NAME_TR 
  FROM FIN_FINANCE_FACT INNER JOIN (SELECT MONTH_KEY, MONTH_EN, MONTH_CS, MONTH_DE, MONTH_ES, MONTH_FR, MONTH_HU, MONTH_IT, MONTH_JA, MONTH_KO, MONTH_PL, MONTH_PT, MONTH_RO, MONTH_RU, MONTH_SC, MONTH_TC, MONTH_TR FROM GO_TIME_DIM GROUP BY MONTH_KEY, MONTH_EN, MONTH_CS, MONTH_DE, MONTH_ES, MONTH_FR, MONTH_HU, MONTH_IT, MONTH_JA, MONTH_KO, MONTH_PL, MONTH_PT, MONTH_RO, MONTH_RU, MONTH_SC, MONTH_TC, MONTH_TR) T1 ON FIN_FINANCE_FACT.MONTH_KEY = T1.MONTH_KEY INNER JOIN FIN_SUBM_DIM ON FIN_FINANCE_FACT.SUBMISSION_KEY = FIN_SUBM_DIM.SUBMISSION_KEY INNER JOIN FIN_ACCOUNT_DIM ON FIN_FINANCE_FACT.ACCOUNT_KEY = FIN_ACCOUNT_DIM.ACCOUNT_KEY INNER JOIN FIN_ACCOUNT_NAME_LOOKUP ON FIN_ACCOUNT_DIM.ACCOUNT_CODE = FIN_ACCOUNT_NAME_LOOKUP.ACCOUNT_CODE INNER JOIN GO_ORG_DIM ON FIN_FINANCE_FACT.ORGANIZATION_KEY = GO_ORG_DIM.ORGANIZATION_KEY WHERE (FIN_ACCOUNT_DIM.DEBIT_OR_CREDIT IN (N'C', N'D'))'''
 },
 'VIEW_SUBMISSION_DIM': {
 'view_ddl':'''CREATE VIEW VIEW_SUBMISSION_DIM AS SELECT FIN_SUBM_DIM.SUBMISSION_KEY, FIN_SUBM_DIM.SUBMISSION_CODE, FIN_SUBM_DIM.SUBMISSION_NAME_EN, FIN_SUBM_DIM.SUBMISSION_NAME_CS, FIN_SUBM_DIM.SUBMISSION_NAME_DE, FIN_SUBM_DIM.SUBMISSION_NAME_ES, FIN_SUBM_DIM.SUBMISSION_NAME_FR, FIN_SUBM_DIM.SUBMISSION_NAME_HU, FIN_SUBM_DIM.SUBMISSION_NAME_IT, FIN_SUBM_DIM.SUBMISSION_NAME_JA, FIN_SUBM_DIM.SUBMISSION_NAME_KO, FIN_SUBM_DIM.SUBMISSION_NAME_PL, FIN_SUBM_DIM.SUBMISSION_NAME_PT, FIN_SUBM_DIM.SUBMISSION_NAME_RO, FIN_SUBM_DIM.SUBMISSION_NAME_RU, FIN_SUBM_DIM.SUBMISSION_NAME_SC, FIN_SUBM_DIM.SUBMISSION_NAME_TC, FIN_SUBM_DIM.SUBMISSION_NAME_TR, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_CODE, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_EN, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_CS, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_DE, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_ES, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_FR, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_HU, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_IT, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_JA, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_KO, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_PL, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_PT, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_RO, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_RU, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_SC, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_TC, FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_TR, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_CODE, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_EN, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_CS, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_DE, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_ES, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_FR, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_HU, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_IT, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_JA, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_KO, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_PL, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_PT, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_RO, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_RU, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_SC, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_TC, FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_TR, FIN_SUBM_DIM.SUBMISSION_YEAR FROM FIN_SUBM_CURRENCY_LOOKUP INNER JOIN FIN_SUBM_DIM ON FIN_SUBM_CURRENCY_LOOKUP.SUBMISSION_CURRENCY_CODE = FIN_SUBM_DIM.SUBMISSION_CURRENCY_CODE INNER JOIN FIN_SUBM_TYPE_LOOKUP ON FIN_SUBM_DIM.SUBMISSION_TYPE_CODE = FIN_SUBM_TYPE_LOOKUP.SUBMISSION_TYPE_CODE'''
 },
 'VIEW_TIME_MONTH_DIM': {
 'view_ddl':'''CREATE VIEW VIEW_TIME_MONTH_DIM AS SELECT CURRENT_YEAR, QUARTER_KEY, CURRENT_QUARTER, MONTH_KEY, CURRENT_MONTH, DAYS_IN_MONTH, MONTH_EN, MONTH_CS, MONTH_DE, MONTH_ES, MONTH_FR, MONTH_HU, MONTH_IT, MONTH_JA, MONTH_KO, MONTH_PL, MONTH_PT, MONTH_RO, MONTH_RU, MONTH_SC, MONTH_TC, MONTH_TR FROM GO_TIME_DIM GROUP BY CURRENT_YEAR, QUARTER_KEY, CURRENT_QUARTER, MONTH_KEY, CURRENT_MONTH, DAYS_IN_MONTH, MONTH_EN, MONTH_DE, MONTH_FR, MONTH_JA, MONTH_RU, MONTH_SC, MONTH_ES, MONTH_IT, MONTH_KO, MONTH_PT, MONTH_TC, MONTH_CS, MONTH_HU, MONTH_PL, MONTH_RO, MONTH_TR '''
 },
 'VW_ACTIVE_EMPLOYEE_DIM': {
 'view_ddl':'''CREATE VIEW VW_ACTIVE_EMPLOYEE_DIM AS SELECT * FROM EMP_EMPLOYEE_DIM WHERE (ACTIVE_INDICATOR = 1)'''
 }
}
usrs_dict = {
 'RO_DEMOGRP': {'usr_ddl':'CREATE USER ro_demousr in group ro_demogrp;'},
 'RW_DEMOGRP': {'usr_ddl':'CREATE USER rw_demousr in group rw_demogrp;'},
}


def connectdb_func(database_conn, db): 
    
    #-------------------------------------------------
    # TEST database connection
    #-------------------------------------------------

    try:
        conn = nzpy.connect(**database_conn,database=db)
        return 0
    except Exception as e:
        #print(f'Connection failed: {database_conn}')
        #print(f'time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
        logging.debug(f'Connection failed: {e}')
        return 8

def cleandb_func(database_conn, db):

    #-------------------------------------------------
    # DROP database
    #-------------------------------------------------

    try:
        conn = nzpy.connect(**database_conn,database='system')
        print(time.strftime("%Y-%m-%d %H:%M:%S"), 'Established connection to Netezza instance.')
        with conn.cursor() as cursor:
            try:
                cursor.execute("DROP DATABASE %s" % db)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "DROP DATABASE %s SUCCESSFUL" % db)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "DROP DATABASE %s FAILED" % db)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
                exit(8)
        with conn.cursor() as cursor:
            try:
                cursor.execute("DROP USER RO_DEMOUSR")
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "DROP USER RO_DEMOUSR SUCCESSFUL")
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "DROP USER RO_DEMOUSR FAILED")
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
                exit(8)
        with conn.cursor() as cursor:
            try:
                cursor.execute("DROP USER RW_DEMOUSR")
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "DROP USER RW_DEMOUSR SUCCESSFUL")
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "DROP USER RW_DEMOUSR FAILED")
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
                exit(8)
        with conn.cursor() as cursor:
            try:
                cursor.execute("DROP GROUP RO_DEMOGRP")
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "DROP GROUP RO_DEMOGRP SUCCESSFUL")
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "DROP USER RO_DEMOGRP FAILED")
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
                exit(8)
        with conn.cursor() as cursor:
            try:
                cursor.execute("DROP GROUP RW_DEMOGRP")
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "DROP GROUP RW_DEMOGRP SUCCESSFUL")
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "DROP USER RW_DEMOGRP FAILED")
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
                exit(8)
    except Exception as e:
        print(time.strftime("%Y-%m-%d %H:%M:%S"), "Database connection FAILED [database=system].")
        print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
        exit(8) 

def builddb_func(database_conn, db, schema):

    #-------------------------------------------------
    # CREATE database and schema
    #-------------------------------------------------

    try:
        conn_system = nzpy.connect(**database_conn, database='system')
    except Exception as e:
        print(time.strftime("%Y-%m-%d %H:%M:%S"), "Database connection FAILED [database=%s]." % db)
        print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
        exit(8)

    with conn_system.cursor() as cursor_system:
        try:
            cursor_system.execute("CREATE DATABASE %s" % db)
            print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE DATABASE  %30s ... SUCCESSFUL" % db)
        except Exception as e:
            print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE DATABASE  %30s ... FAILED" % db)
            print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
            exit(8)

    try:
        conn = nzpy.connect(**database_conn, database=db)
        print(time.strftime("%Y-%m-%d %H:%M:%S"), "Database connection SUCCESSFUL [database=%s]." % db)
    except Exception as e:
        print(time.strftime("%Y-%m-%d %H:%M:%S"), "Database connection FAILED [database=%s]." % db)
        print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
        exit(8)

    with conn.cursor() as cursor:
        try:
            cursor.execute("CREATE SCHEMA %s" % schema)
            print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE SCHEMA    %30s ... SUCCESSFUL" % schema)
        except Exception as e:
            print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE SCHEMA    %30s ... FAILED" % schema)
            print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
            exit(8)

        try:
            cursor.execute("ALTER DATABASE %s SET DEFAULT SCHEMA %s" % (db, schema))
            print(time.strftime("%Y-%m-%d %H:%M:%S"), "SET DEFAULT SCHEMA    %30s ... SUCCESSFUL" % schema)
        except Exception as e:
            print(time.strftime("%Y-%m-%d %H:%M:%S"), "SET DEFAULT SCHEMA    %30s ... FAILED" % schema)
            print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
            exit(8)

        try:
            cursor.execute("SET SCHEMA    %s" % schema)
            print(time.strftime("%Y-%m-%d %H:%M:%S"), "SET SCHEMA       %30s ... SUCCESSFUL" % schema)
        except Exception as e:
            print(time.strftime("%Y-%m-%d %H:%M:%S"), "SET SCHEMA       %30s ... FAILED" % schema)
            print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
            exit(8)

        for nz_table_key in tables_dict:
            expect_rows = tables_dict[nz_table_key]['rows']
            table       = nz_table_key 

            try: 
                table_ddl=tables_dict[nz_table_key]['table_ddl']
                cursor.execute(table_ddl)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE TABLE     %30s ... SUCCESSFUL" % table)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE TABLE     %30s ... FAILED" % table)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))

            try: 
                table_comment=tables_dict[nz_table_key]['comment']
                comment_ddl = "COMMENT ON TABLE " + table + " IS '" + table_comment + "'"
                cursor.execute(comment_ddl)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "COMMENT ON TABLE %30s ... SUCCESSFUL" % table)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "COMMENT ON TABLE %30s ... FAILED" % table)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))

            if tables_dict[nz_table_key]['pk'] is not None:
                try: 
                    pk_ddl=tables_dict[nz_table_key]['pk']
                    cursor.execute(pk_ddl)
                    print(time.strftime("%Y-%m-%d %H:%M:%S"), "PRIMARY KEY      %30s ... SUCCESSFUL" % table)
                except Exception as e:
                    print(time.strftime("%Y-%m-%d %H:%M:%S"), "PRIMARY KEY      %30s ... FAILED" % table)
                    print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
            
            print() 
            
        # each table with a foreign keys can have one or more, loop through each item (fkey) of the dictionary
        for table, fkeys in fk_dict.items():
            print(time.strftime("%Y-%m-%d %H:%M:%S"), "TABLE:           %30s ... " % table)
            if type(fkeys) is dict:
                for fk_name, fk_ddl in fkeys.items():
                    try: 
                        cursor.execute(fk_ddl)
                        print(time.strftime("%Y-%m-%d %H:%M:%S"), "FOREIGN KEY      %30s ... SUCCESSFUL" % fk_name)
                    except Exception as e:
                        print(time.strftime("%Y-%m-%d %H:%M:%S"), "FOREIGN KEY      %30s ... FAILED" % fk_name)
                        print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))

        for nz_view_key in views_dict:
            view        = nz_view_key 
            try: 
                view_ddl=views_dict[nz_view_key]['view_ddl']
                #cursor.execute("set schema %s" % schema)
                cursor.execute(view_ddl)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE VIEW      %30s ... SUCCESSFUL" % view)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE VIEW      %30s ... FAILED" % view)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))

        for nz_proc_key in procs_dict:
            proc        = nz_proc_key
            try: 
                proc_ddl=procs_dict[nz_proc_key]['proc_ddl']
                cursor.execute(proc_ddl)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE PROCEDURE %30s ... SUCCESSFUL" % proc)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE PROCEDURE %30s ... FAILED" % proc)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))

        for nz_seq_key in seqs_dict:
            seq         = nz_seq_key
            try: 
                seq_ddl=seqs_dict[nz_seq_key]['seq_ddl']
                cursor.execute(seq_ddl)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE SEQUENCE  %30s ... SUCCESSFUL" % seq)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE SEQUENCE  %30s ... FAILED" % seq)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))

        for nz_syn_key in syns_dict:
            syn         = nz_syn_key
            try: 
                syn_ddl=syns_dict[nz_syn_key]['syn_ddl']
                cursor.execute(syn_ddl)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE SYNONYM   %30s ... SUCCESSFUL" % syn)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE SYNONYM   %30s ... FAILED" % syn)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))

        for nz_grp_key in grps_dict:
            grp         = nz_grp_key
            try: 
                grp_ddl=grps_dict[nz_grp_key]['grp_ddl']
                cursor.execute(grp_ddl)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE GROUP     %30s ... SUCCESSFUL" % grp)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE GROUP     %30s ... FAILED" % grp)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))

        for nz_usr_key in usrs_dict:
            usr         = nz_usr_key
            try: 
                usr_ddl=usrs_dict[nz_usr_key]['usr_ddl']
                cursor.execute(usr_ddl)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE USER      %30s ... SUCCESSFUL" % usr)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "CREATE USER      %30s ... FAILED" % usr)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))

        for nz_grant_key in grants_dict:
            grant       = nz_grant_key
            try: 
                grant_ddl=grants_dict[nz_grant_key]['grant_ddl']
                cursor.execute(grant_ddl)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "%50s ... SUCCESSFUL" % grant_ddl)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "%50s ... FAILED" % grant_ddl)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))


def load_func(database_conn, db, schema, datdir, logdir):

    #-------------------------------------------------
    # LOAD database tables
    #-------------------------------------------------

    conn = nzpy.connect(**database_conn,database=db)
    for nz_table_key in tables_dict:
        expect_rows = tables_dict[nz_table_key]['rows']
        table       = nz_table_key
        with conn.cursor() as cursor:
            try:
                truncate_sql="truncate table " + table
                sql_1="insert into " + table + " select * from external '" + datdir + "/" + table + ".csv'"
                sql_2="using ( LogDir '" + logdir + "' remotesource 'python' dateTimeDelim '-' timedelim '.' delim '|')"
                load_sql=sql_1 + " " + sql_2
                #print(load_sql)
                cursor.execute("set schema %s" % schema)
                cursor.execute(truncate_sql)
                cursor.execute(load_sql)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "LOAD TABLE %30s ... SUCCESSFUL" % table)
            except Exception as e:
                print(time.strftime("%Y-%m-%d %H:%M:%S"), "LOAD TABLE %30s ... FAILED" % table)
                print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))

def chkload_func(database_conn, db, schema):

    #-------------------------------------------------
    # COUNT tables
    #-------------------------------------------------
    try:
        conn = nzpy.connect(**database_conn, database=db)
    except Exception as e:
        print(time.strftime("%Y-%m-%d %H:%M:%S"), "Database connection FAILED [database=%s]." % db)
        print(time.strftime("%Y-%m-%d %H:%M:%S"), str(e))
        exit(8)

    pass_msg     = "PASS"
    fail_msg     = "FAIL"
    table_nf_msg = "TABLE NOT FOUND"
    mismatch_mgs = "MISMATCH"
        
    print("-" * 30, "|", "-" * 15, "|", "-" * 15, "|", "-" * 12)
    print("Table", " " * 24,"| Actual Rows     | Expected Rows   | Status")
    print("-" * 30, "|", "-" * 15, "|", "-" * 15, "|", "-" * 12) 

    for nz_table_key in tables_dict:
        expect_rows = tables_dict[nz_table_key]['rows']
        table       = nz_table_key
        with conn.cursor() as cursor:
            cursor.execute("select tablename from _v_table where SCHEMA = ? and TABLENAME = ?", (schema, table))
            results = cursor.fetchall()
            if not results:
                print("%30s | %15s | %15s | %12s" % (table, table_nf_msg, expect_rows, fail_msg))
            else:
                sql="select count(*) from {}.{}".format(schema, table)
                cursor.execute(sql)
                actual_rows = (str(cursor.fetchone())[1:-1]) # remove the brackets wtih str(var)[1:-1]
                if actual_rows == str(expect_rows): # convert expectedRows to string for comparsion
                    print("%30s | %15s | %15s | %12s" % (table, actual_rows, expect_rows, pass_msg))
                else:
                    print("%30s | %15s | %15s | %12s" % (table, actual_rows, expect_rows, mismatch_mgs))

def main(): 

    logging.basicConfig(format='%(asctime)s %(levelname)s : %(message)s ', level=logging.INFO, datefmt='%Y-%m-%d %H:%M:%S')

    parser = argparse.ArgumentParser(
            formatter_class=argparse.RawDescriptionHelpFormatter,
            description='''Build Netezza sample database with tables, views, data, etc.
            Remote connection to Netezza instance required.''',
            epilog='''operations (database operation):
            build    - CREATE database objects (database, tables, and views)
            clean    - DROP database 
            connect  - CONNECT to database
            load     - LOAD data into tables 
            validate - COUNT rows for loaded tables'''
            ) 
    
    parser.add_argument("operation", choices=['build', 'clean', 'connect', 'load', 'validate'], help='Netezza sample operations') 
    parser.add_argument("--host", default=(os.environ.get('NZ_HOST','localhost')), help='Host name or IP address [env: NZ_HOST]')
    parser.add_argument("--port", default=(os.environ.get('NZ_DBMS_PORT','5480')), help='Port [env: NZ_DBMS_PORT]')
    parser.add_argument("--db", default=(os.environ.get('NZ_DATABASE')),help='Database name [env: NZ_DATABASE]')
    parser.add_argument("--schema", default=(os.environ.get('NZ_SCHEMA','GOSALESDW')), help='Database schema [Default=GOSALESDW, [env: NZ_SCHEMA]]')
    parser.add_argument("--user", default=(os.environ.get('NZ_USER')), help='Database user [env: NZ_USER]')
    parser.add_argument("--pw", default=(os.environ.get('NZ_PASSWORD')), help='Database password [env: NZ_PASSWORD]')


    loadgroup = parser.add_argument_group("load")
    loadgroup.add_argument("--datdir", help='Data directory [Default=./data]')
    loadgroup.add_argument("--logdir", help='Load Log directory [Default=./log]')

    args = parser.parse_args() 
    args.operation = 'build'
    graceful_exit=0
    #localhost is the default hostname
    #if args.host is None:
    #    print(time.strftime("%Y-%m-%d %H:%M:%S"), "Missing Netezza host     : --host HOSTNAME / export NZ_DATABASE=\"DBNAME\"")
    #    graceful_exit=1

    if args.db is None:
        print(time.strftime("%Y-%m-%d %H:%M:%S"), "Missing Netezza database : --db DBNAME / export NZ_DATABASE=\"DBNAME\"")
        graceful_exit=1

    if args.user is None:
        print(time.strftime("%Y-%m-%d %H:%M:%S"), "Missing Netezza userid   : --user USERID / export NZ_USER=\"USERID\"")
        graceful_exit=1

    if args.pw is None:
        print(time.strftime("%Y-%m-%d %H:%M:%S"), "Missing Netezza password : --pw PASSWORD / export NZ_PASSWORD=\"PASSWORD\"")
        graceful_exit=1

    if graceful_exit == 1:
        exit(4)

    if args.db.upper() == 'SYSTEM' and args.operation != 'connect':
        print(time.strftime("%Y-%m-%d %H:%M:%S"), "Database set to SYSTEM is invalid, provide a valid database name with --db or NZ_DATABASE")
        exit(4)

    badoption="n"

    if args.operation == 'load':
        if args.datdir is None:
            datdir=(os.path.dirname(os.path.realpath(__file__))) + "/data"
        else:
            datdir=args.datdir
        if args.logdir is None:
            logdir=(os.path.dirname(os.path.realpath(__file__))) + "/log"
        else:
            logdir=args.logdir
    else:
        if args.datdir is not None: 
            print()
            print("ERROR: --datdir not valid with '" + args.operation + "' option")
            badoption="y" 
        if args.logdir is not None and args.operation != 'load':
            print()
            print("ERROR: --logdir not valid with '" + args.operation + "' option")
            badoption="y"

    if badoption=="y":
        print()
        parser.print_help()
        exit(8) 

    #-----------------------------------------------------------------------
    # Netezza database connection information (parser.add_argument...)
    #-----------------------------------------------------------------------
    db_conn_str = {
        'host': '%s' % args.host,
        'port': int(args.port),
        'user': '%s' % args.user,
        'password': '%s' % args.pw,
        'logLevel': logging.ERROR
        } 

    #-----------------------------------------------------------------------
    # Drop exiting SAMPLE database 
    #-----------------------------------------------------------------------
    if args.operation == 'clean':
        cleandb_func(db_conn_str,args.db)

    #-----------------------------------------------------------------------
    # Test connection to Netezza database 
    #-----------------------------------------------------------------------
    if args.operation == 'connect':
        rc = connectdb_func(db_conn_str,args.db)
        loginfo="Database connection"
        logdetails=f"host={db_conn_str['host']} port={db_conn_str['port']} user={db_conn_str['user']} password='********' database={args.db}"
        if rc == 0:
            #print(time.strftime("%Y-%m-%d %H:%M:%S"), 'Database connection SUCCESSFUL [database=%s].' % args.db)
            logmsg="SUCCESSFUL"
            logging.info(f'{loginfo} {logmsg} : {logdetails}')
        else:
            #print(time.strftime("%Y-%m-%d %H:%M:%S"), 'Database connection FAILED [database=%s].' % args.db)
            logmsg="FAILED"
            logging.info(f'{loginfo} {logmsg} : {logdetails}')
            exit(rc)

    #-----------------------------------------------------------------------
    # Build the SAMPLE database 
    #-----------------------------------------------------------------------
    if args.operation == 'build':
        builddb_func(db_conn_str,args.db,args.schema)
        
    #-----------------------------------------------------------------------
    # Load the SAMPLE database tables from files in data directory 
    #-----------------------------------------------------------------------

    if args.operation == 'load':
        load_func(db_conn_str,args.db,args.schema,datdir,logdir) 

    if args.operation == 'validate':
        chkload_func(db_conn_str,args.db,args.schema)

if __name__ == "__main__":
    main()
