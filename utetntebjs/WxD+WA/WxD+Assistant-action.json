{
  "name": "WxD+Assistant-action",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2024-05-16T06:44:04.769Z",
  "updated": "2024-07-04T06:52:19.495Z",
  "language": "en",
  "skill_id": "511fa163-c9b4-4609-854a-fac9008fb748",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_849",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.original_text"
                  },
                  "skill_variable": "query_text"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_849",
            "next_step": "step_623"
          },
          {
            "step": "step_623",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "input.text"
                  },
                  "skill_variable": "query_text"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_623",
            "condition": {
              "not": {
                "exists": {
                  "skill_variable": "query_text"
                }
              }
            },
            "next_step": "step_781"
          },
          {
            "step": "step_781",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Calling the watsonx discovery extension"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "{\n    \"nested\": {\n      \"path\": \"passages\",\n      \"query\": { \n        \"text_expansion\": {\n          \"passages.sparse.tokens\": {\n            \"model_id\": ${es_model},\n            \"model_text\": ${query_text}\n          }\n        }\n      },\n      \"inner_hits\": {\"_source\": {\"excludes\": [\"passages.sparse\"]}}\n    }\n}"
                  },
                  "skill_variable": "query_body_nested"
                },
                {
                  "value": {
                    "expression": "{\n    \"text_expansion\": {\n      \"embedding\": {\n        \"model_id\": ${es_model},\n        \"model_text\": ${query_text}\n      }\n    }\n  }"
                  },
                  "skill_variable": "query_body_generic"
                },
                {
                  "value": {
                    "expression": "${has_inner_hits} ? ${query_body_nested} : ${query_body_generic}"
                  },
                  "skill_variable": "query_body"
                },
                {
                  "value": {
                    "expression": "{\n    \"field\": \"text_embedding.predicted_value\",\n    \"query_vector_builder\": {\n      \"text_embedding\": {\n        \"model_id\": ${embedding_model},\n        \"model_text\": ${query_text}\n      }\n    },\n    \"k\": 10,\n    \"num_candidates\": 100\n  }"
                  },
                  "skill_variable": "knn_body"
                },
                {
                  "value": {
                    "expression": "[ ${result_title_field}, ${result_body_field}]"
                  },
                  "skill_variable": "query_source"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/{index_name}/_search",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "0988f31a617dc5ff6b276fdc3be98135801830c3ceeac02a58846426fe81c974",
                  "match_scenario": 1,
                  "catalog_item_id": "0ef730e3-1c31-4748-8c26-823ff6fea299"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "es_query_result_size"
                      },
                      "parameter": "size"
                    },
                    {
                      "value": {
                        "skill_variable": "query_body"
                      },
                      "parameter": "query"
                    },
                    {
                      "value": {
                        "skill_variable": "query_source"
                      },
                      "parameter": "_source"
                    }
                  ],
                  "path": [
                    {
                      "value": {
                        "skill_variable": "es_index_name"
                      },
                      "parameter": "index_name"
                    }
                  ]
                },
                "result_variable": "step_781_result_1"
              }
            },
            "variable": "step_781",
            "next_step": "step_527"
          },
          {
            "step": "step_527",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Returned from calling the watsonx discovery extension"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_527",
            "next_step": "step_296"
          },
          {
            "step": "step_296",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Sorry the search failed!"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_296",
            "condition": {
              "eq": [
                {
                  "variable": "step_781_result_1",
                  "variable_path": "success"
                },
                {
                  "scalar": false
                }
              ]
            },
            "next_step": "step_293"
          },
          {
            "step": "step_293",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Calling Generate Answer"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${has_inner_hits} ? ${step_781_result_1}.body.hits.hits.get(0).inner_hits.passages.hits.hits : ${step_781_result_1}.body.hits.hits"
                  },
                  "skill_variable": "search_results"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action",
              "invoke_action": {
                "action": "action_20548-2",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_293_result_1"
              }
            },
            "variable": "step_293",
            "condition": {
              "eq": [
                {
                  "variable": "step_781_result_1",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            },
            "next_step": "step_505"
          },
          {
            "step": "step_505",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Returned from Generate answer"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_505"
          }
        ],
        "title": "Watsonx Discovery Search",
        "action": "action_17393-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_17393_intent_3763-2"
        },
        "variables": [
          {
            "title": "Calling Generate Answer",
            "privacy": {
              "enabled": false
            },
            "variable": "step_293",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_293_result_1",
            "data_type": "any"
          },
          {
            "title": "Sorry the search failed!",
            "privacy": {
              "enabled": false
            },
            "variable": "step_296",
            "data_type": "any"
          },
          {
            "title": "Returned from Generate answer",
            "privacy": {
              "enabled": false
            },
            "variable": "step_505",
            "data_type": "any"
          },
          {
            "title": "Returned from calling the watsonx discovery extension",
            "privacy": {
              "enabled": false
            },
            "variable": "step_527",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_623",
            "data_type": "any"
          },
          {
            "title": "Calling the watsonx discovery extension",
            "privacy": {
              "enabled": false
            },
            "variable": "step_781",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_781_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_849",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_291",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "\"\""
                  },
                  "skill_variable": "passages"
                },
                {
                  "value": {
                    "scalar": -1
                  },
                  "skill_variable": "idx"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_291",
            "next_step": "step_168"
          },
          {
            "step": "step_168",
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${idx}+1"
                  },
                  "skill_variable": "idx"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_168",
            "next_step": "step_989"
          },
          {
            "step": "step_989",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "<a href="
                          },
                          {
                            "skill_variable": "Lighthouse_url"
                          },
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "lighthouse_number"
                          },
                          {
                            "scalar": "> Lighthouse ID: "
                          },
                          {
                            "skill_variable": "lighthouse_number"
                          },
                          {
                            "scalar": "</a>\nScore : "
                          },
                          {
                            "skill_variable": "document_score"
                          },
                          {
                            "scalar": "\n\n\n\n"
                          },
                          {
                            "skill_variable": "snippet"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${search_results}.get(${idx})._source[${result_title_field}] ? ${search_results}.get(${idx})._source[${result_title_field}] + \"\\n\" : \"\""
                  },
                  "skill_variable": "title_prompt_text"
                },
                {
                  "value": {
                    "expression": "${search_results}.get(${idx})._source[${result_body_field}] ? ${search_results}.get(${idx})._source[${result_body_field}] + \"\\n\" : \"\""
                  },
                  "skill_variable": "document_prompt_text"
                },
                {
                  "value": {
                    "expression": "${has_inner_hits} ? ${document_prompt_text} :${document_prompt_text}"
                  },
                  "skill_variable": "snippet"
                },
                {
                  "value": {
                    "expression": "${snippet}"
                  },
                  "skill_variable": "snippet"
                },
                {
                  "value": {
                    "expression": "${passages}.concat(${snippet})"
                  },
                  "skill_variable": "passages"
                },
                {
                  "value": {
                    "expression": "${search_results}.get(${idx})._source[${result_title_field}]"
                  },
                  "skill_variable": "lighthouse_number"
                },
                {
                  "value": {
                    "expression": "${search_results}.get(${idx})._score"
                  },
                  "skill_variable": "document_score"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_168"
                }
              ]
            },
            "variable": "step_989",
            "condition": {
              "expression": "${idx}<${search_results}.size"
            },
            "next_step": "step_858"
          },
          {
            "step": "step_858",
            "output": {
              "generic": []
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_858",
            "next_step": "step_762"
          },
          {
            "step": "step_762",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Raw Json: "
                          },
                          {
                            "skill_variable": "search_results"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_762",
            "condition": {
              "eq": [
                {
                  "skill_variable": "verbose"
                },
                {
                  "scalar": true
                }
              ]
            }
          }
        ],
        "title": "Generate Answer",
        "action": "action_20548-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_43808_intent_33082-2"
        },
        "variables": [
          {
            "variable": "step_167_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_168",
            "data_type": "any"
          },
          {
            "variable": "step_169_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_217_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_222_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_237_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_237_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_239_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_286_result_1",
            "data_type": "any"
          },
          {
            "title": "No response",
            "variable": "step_291",
            "data_type": "any"
          },
          {
            "variable": "step_472_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_474_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_474_result_2",
            "data_type": "any"
          },
          {
            "variable": "step_492_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_597_result_1",
            "data_type": "any"
          },
          {
            "title": "Raw Json: {variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_762",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_858",
            "data_type": "any"
          },
          {
            "variable": "step_890_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_942_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_978_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_982_result_1",
            "data_type": "any"
          },
          {
            "title": "<a href={variable}{variable}> Lighthouse ID: {variable}</a> Scor",
            "privacy": {
              "enabled": true
            },
            "variable": "step_989",
            "data_type": "any"
          }
        ],
        "next_action": "action_17393-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_195",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Calling search"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "action_17393-2",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_195_result_1"
              }
            },
            "variable": "step_195",
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I'm afraid I don't understand. Please rephrase your question.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          },
          {
            "title": "Calling search",
            "privacy": {
              "enabled": false
            },
            "variable": "step_195",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_195_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "digression_failure",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't confirm if you wanted to return to previous topic, let me connect to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "digression_failure",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Failed to confirm topic return"
                }
              ]
            },
            "next_step": "step_001"
          },
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "Topic return failed",
            "variable": "digression_failure",
            "data_type": "any"
          },
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_20548-2",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_17393_intent_3763-2",
        "examples": []
      },
      {
        "intent": "action_43808_intent_33082-2",
        "examples": []
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [
      {
        "title": "document_prompt_text",
        "privacy": {
          "enabled": false
        },
        "variable": "document_prompt_text",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "document_score",
        "privacy": {
          "enabled": false
        },
        "variable": "document_score",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "embedding_model",
        "privacy": {
          "enabled": false
        },
        "variable": "embedding_model",
        "data_type": "string",
        "description": "",
        "initial_value": {
          "scalar": "intfloat__multilingual-e5-small"
        }
      },
      {
        "title": "es_index_name",
        "privacy": {
          "enabled": false
        },
        "variable": "es_index_name",
        "data_type": "string",
        "description": "You MUST set this to your Elasticsearch index name.",
        "initial_value": {
          "scalar": "stars_descriptions_10col_elser1_v1"
        }
      },
      {
        "title": "es_model",
        "privacy": {
          "enabled": false
        },
        "variable": "es_model",
        "data_type": "string",
        "description": "ELSER model v1",
        "initial_value": {
          "scalar": ".elser_model_1"
        }
      },
      {
        "title": "es_query_result_size",
        "privacy": {
          "enabled": false
        },
        "variable": "es_query_result_size",
        "data_type": "number",
        "description": "",
        "initial_value": {
          "scalar": 5
        }
      },
      {
        "title": "has_inner_hits",
        "privacy": {
          "enabled": false
        },
        "variable": "has_inner_hits",
        "data_type": "boolean",
        "description": "Set this to True if you are using an index that has passages nested in a single field.",
        "initial_value": {
          "scalar": false
        }
      },
      {
        "title": "idx",
        "privacy": {
          "enabled": false
        },
        "variable": "idx",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "knn_body",
        "privacy": {
          "enabled": false
        },
        "variable": "knn_body",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "lighthouse_number",
        "privacy": {
          "enabled": false
        },
        "variable": "lighthouse_number",
        "data_type": "number",
        "description": ""
      },
      {
        "title": "Lighthouse_url",
        "privacy": {
          "enabled": false
        },
        "variable": "Lighthouse_url",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "scalar": "https://w3.ibm.com/services/lighthouse/spaces/view/stars/documents/"
        }
      },
      {
        "title": "model_id",
        "privacy": {
          "enabled": false
        },
        "variable": "model_id",
        "data_type": "string",
        "description": "The ID of the model to be used for this user prompt.",
        "initial_value": {
          "scalar": "ibm/granite-13b-chat-v2"
        }
      },
      {
        "title": "model_input",
        "privacy": {
          "enabled": false
        },
        "variable": "model_input",
        "data_type": "string",
        "description": "input to the watsonx model"
      },
      {
        "title": "model_parameters_decoding_method",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_decoding_method",
        "data_type": "string",
        "description": "The strategy used for picking the tokens during generation of the output text.",
        "initial_value": {
          "scalar": "greedy"
        }
      },
      {
        "title": "model_parameters_include_stop_sequence",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_include_stop_sequence",
        "data_type": "boolean",
        "description": "The value to control presence of matched stop sequences from the end of the output text."
      },
      {
        "title": "model_parameters_max_new_tokens",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_max_new_tokens",
        "data_type": "number",
        "description": "The maximum number of new tokens to be generated.",
        "initial_value": {
          "scalar": 256
        }
      },
      {
        "title": "model_parameters_min_new_tokens",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_min_new_tokens",
        "data_type": "number",
        "description": "The minimum number of new tokens to be generated.",
        "initial_value": {
          "scalar": 1
        }
      },
      {
        "title": "model_parameters_random_seed",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_random_seed",
        "data_type": "number",
        "description": "A random number generator seed to use in sampling mode for experimental repeatability."
      },
      {
        "title": "model_parameters_repetition_penalty",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_repetition_penalty",
        "data_type": "number",
        "description": "The penalty for penalizing tokens that have already been generated or belong to the context.",
        "initial_value": {
          "scalar": 1.05
        }
      },
      {
        "title": "model_parameters_stop_sequences",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_stop_sequences",
        "data_type": "any",
        "description": "The strings which will cause the text generation to stop if/when they are produced as part of the output. Stop sequences encountered prior to the minimum number of tokens being generated will be ignored.",
        "initial_value": {
          "expression": "[]"
        }
      },
      {
        "title": "model_parameters_temperature",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_temperature",
        "data_type": "number",
        "description": "The value used to control the next token probabilities. The range is from 0.05 to 1.00; 0.05 makes it mostly deterministic.",
        "initial_value": {
          "scalar": 0
        }
      },
      {
        "title": "model_parameters_time_limit",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_time_limit",
        "data_type": "number",
        "description": "The amount of time in milliseconds to wait before stopping generation. The text generated so far will be returned along with the TIME_LIMIT stop reason."
      },
      {
        "title": "model_parameters_top_k",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_top_k",
        "data_type": "number",
        "description": "The number of highest probability vocabulary tokens to keep for top-k-filtering."
      },
      {
        "title": "model_parameters_top_p",
        "privacy": {
          "enabled": false
        },
        "variable": "model_parameters_top_p",
        "data_type": "number",
        "description": "Similar to top_k except the candidates to generate the next token are the most likely tokens with probabilities that add up to at least top_p."
      },
      {
        "title": "model_response",
        "variable": "model_response",
        "data_type": "string",
        "description": "The text generated by the model in response to the model input"
      },
      {
        "title": "passages",
        "variable": "passages",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "query_body",
        "variable": "query_body",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "query_body_generic",
        "privacy": {
          "enabled": false
        },
        "variable": "query_body_generic",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "query_body_nested",
        "privacy": {
          "enabled": false
        },
        "variable": "query_body_nested",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "query_source",
        "privacy": {
          "enabled": false
        },
        "variable": "query_source",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "query_text",
        "variable": "query_text",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "result_body_field",
        "privacy": {
          "enabled": false
        },
        "variable": "result_body_field",
        "data_type": "string",
        "description": "",
        "initial_value": {
          "scalar": "description"
        }
      },
      {
        "title": "result_title_field",
        "privacy": {
          "enabled": false
        },
        "variable": "result_title_field",
        "data_type": "string",
        "description": "",
        "initial_value": {
          "scalar": "lighthouse_id"
        }
      },
      {
        "title": "search_results",
        "variable": "search_results",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "snippet",
        "variable": "snippet",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "title_prompt_text",
        "privacy": {
          "enabled": false
        },
        "variable": "title_prompt_text",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "verbose",
        "privacy": {
          "enabled": false
        },
        "variable": "verbose",
        "data_type": "boolean",
        "description": "Prints debug output when true",
        "initial_value": {
          "scalar": false
        }
      },
      {
        "title": "watsonx_api_version",
        "variable": "watsonx_api_version",
        "data_type": "any",
        "description": "The version of the watsonx api (required)",
        "initial_value": {
          "scalar": "2023-05-29"
        }
      },
      {
        "title": "watsonx_project_id",
        "privacy": {
          "enabled": false
        },
        "variable": "watsonx_project_id",
        "data_type": "any",
        "description": "You MUST set this to your watsonx project id"
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "off_topic": {
        "enabled": true
      },
      "auto_learn": {
        "apply": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "enable_confirmation": true,
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "I'm sorry, I did not catch that, please confirm."
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to continue with the previous topic: "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              },
              {
                "options": [
                  {
                    "label": "Yes",
                    "value": {
                      "input": {
                        "text": "Yes"
                      }
                    }
                  },
                  {
                    "label": "No",
                    "value": {
                      "input": {
                        "text": "No"
                      }
                    }
                  }
                ],
                "response_type": "option",
                "repeat_on_reprompt": true
              }
            ]
          }
        },
        "max_tries": 3
      },
      "generative_ai": {
        "slot_filling": {
          "enabled": true
        }
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": true
  },
  "description": "created for assistant fcee95d0-3673-43ea-9349-9e4458738da2",
  "assistant_id": "0cc9b21d-17d5-457a-8002-722778f593f7",
  "workspace_id": "511fa163-c9b4-4609-854a-fac9008fb748",
  "dialog_settings": {},
  "next_snapshot_version": "1",
  "environment_id": "3e7184e2-db48-42e8-b87d-637a449ae00a"
}